"use strict";(self.webpackChunkdemo1=self.webpackChunkdemo1||[]).push([[767],{30175:(kr,Je,ee)=>{ee.d(Je,{i:()=>xe});var Oe=ee(86656),Ce=ee(69862),h=ee(57337),Ee=ee(26306),J=ee(22096),W=ee(65879);let xe=(()=>{var $e;class we{constructor(ue){(0,Oe.Z)(this,"http",void 0),this.http=ue}mqtt(ue){return console.log("environment.lambdaUrl :>> ",h.N.lambdaUrl),this.http.post(`${h.N.lambdaUrl}`,ue)}getLatestData2(ue){return console.log(new Date),console.log("getLatestData2"),this.http.post("https://37iltjrp70.execute-api.ap-south-1.amazonaws.com/test/?doAuth=secretKey",ue).pipe((0,Ee.K)(de=>(console.error(de),(0,J.of)({error:de}))))}getDeviceList(ue){const fe=ue?.filter((Xe,Be,ge)=>Be===ge?.findIndex(ke=>ke?.PK===Xe?.PK));console.log(fe);const de={type:"batchGet",table_name:"device_configuration",keys:fe};console.log("postData postDatapostDatapostData",de);const Qe=(new Ce.WM).set("Content-Type","application/json");return this.http.post("https://fy1sd9sosb.execute-api.ap-south-1.amazonaws.com/firststage/dynamic_dynamoDB_crud",de,{headers:Qe})}getRDT(ue){const fe=(new Ce.WM).set("Content-Type","application/json");return this.http.post("https://fy1sd9sosb.execute-api.ap-south-1.amazonaws.com/firststage/dynamic_dynamoDB_crud",ue,{headers:fe})}}return $e=we,(0,Oe.Z)(we,"\u0275fac",function(ue){return new(ue||$e)(W.LFG(Ce.eN))}),(0,Oe.Z)(we,"\u0275prov",W.Yz7({token:$e,factory:$e.\u0275fac,providedIn:"root"})),we})()},91834:kr=>{var Je=Object.assign||function(h){for(var Ee=1;Ee<arguments.length;Ee++){var J=arguments[Ee];for(var W in J)Object.prototype.hasOwnProperty.call(J,W)&&(h[W]=J[W])}return h},ee={"{":"\\{","}":"\\}","\\":"\\textbackslash{}","#":"\\#",$:"\\$","%":"\\%","&":"\\&","^":"\\textasciicircum{}",_:"\\_","~":"\\textasciitilde{}"},Oe={"\u2013":"\\--","\u2014":"\\---"," ":"~","\t":"\\qquad{}","\r\n":"\\newline{}","\n":"\\newline{}"},Ce=function(Ee,J){return Je({},Ee,J)};kr.exports=function(h){for(var Ee=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},J=Ee.preserveFormatting,W=void 0!==J&&J,xe=Ee.escapeMapFn,$e=void 0===xe?Ce:xe,we=String(h),Ve="",ue=$e(Je({},ee),W?Je({},Oe):{}),fe=Object.keys(ue),de=function(){var Xe=!1;fe.forEach(function(Be,ge){Xe||we.length>=Be.length&&we.slice(0,Be.length)===Be&&(Ve+=ue[fe[ge]],we=we.slice(Be.length,we.length),Xe=!0)}),Xe||(Ve+=we.slice(0,1),we=we.slice(1,we.length))};we;)de();return Ve}},19619:(kr,Je,ee)=>{ee.d(Je,{ku:()=>Br});var Oe=ee(87462),Ce=ee(75498),h=ee(98983),Ee=new Set(["end"]),J=ee(85015),W=ee(89204),xe=ee(25072),Ve=(0,W.d5)("Node",["mathWithTransform"],v=>{var{mathWithTransform:f}=v;return class m{get type(){return"Node"}get isNode(){return!0}evaluate(r){return this.compile().evaluate(r)}compile(){var r=this._compile(f,{}),t={};return{evaluate:function s(n){var l=(0,xe.df)(n);return function p(o){for(var r of[...Ee])if(o.has(r))throw new Error('Scope contains an illegal symbol, "'+r+'" is a reserved keyword')}(l),r(l,t,null)}}}_compile(r,t){throw new Error("Method _compile must be implemented by type "+this.type)}forEach(r){throw new Error("Cannot run forEach on a Node interface")}map(r){throw new Error("Cannot run map on a Node interface")}_ifNode(r){if(!(0,h.UG)(r))throw new TypeError("Callback function must return a Node");return r}traverse(r){r(this,null,null),function t(i,s){i.forEach(function(n,l,g){s(n,l,g),t(n,s)})}(this,r)}transform(r){return function t(i,s,n){var l=r(i,s,n);return l!==i?l:i.map(t)}(this,null,null)}filter(r){var t=[];return this.traverse(function(i,s,n){r(i,s,n)&&t.push(i)}),t}clone(){throw new Error("Cannot clone a Node interface")}cloneDeep(){return this.map(function(r){return r.cloneDeep()})}equals(r){return!!r&&this.type===r.type&&(0,J.J5)(this,r)}toString(r){var t=this._getCustomString(r);return typeof t<"u"?t:this._toString(r)}toJSON(){throw new Error("Cannot serialize object: toJSON not implemented by "+this.type)}toHTML(r){var t=this._getCustomString(r);return typeof t<"u"?t:this.toHTML(r)}_toString(){throw new Error("_toString not implemented for "+this.type)}toTex(r){var t=this._getCustomString(r);return typeof t<"u"?t:this._toTex(r)}_toTex(r){throw new Error("_toTex not implemented for "+this.type)}_getCustomString(r){if(r&&"object"==typeof r)switch(typeof r.handler){case"object":case"undefined":return;case"function":return r.handler(this,r);default:throw new TypeError("Object or function expected as callback")}}getIdentifier(){return this.type}getContent(){return this}}},{isClass:!0,isNode:!0}),ue=ee(86656),fe=ee(89849),de=ee(20345),Qe="ObjectNode",Be=(0,W.d5)(Qe,["Node"],v=>{var{Node:f}=v;class p extends f{constructor(o){if(super(),this.properties=o||{},o&&("object"!=typeof o||!Object.keys(o).every(function(r){return(0,h.UG)(o[r])})))throw new TypeError("Object containing Nodes expected")}get type(){return Qe}get isObjectNode(){return!0}_compile(o,r){var t={};for(var i in this.properties)if((0,J.nr)(this.properties,i)){var s=(0,de.Pz)(i),n=JSON.parse(s),l=(0,fe.YF)(this.properties,i);t[n]=l._compile(o,r)}return function(x,C,A){var U={};for(var I in t)(0,J.nr)(t,I)&&(U[I]=t[I](x,C,A));return U}}forEach(o){for(var r in this.properties)(0,J.nr)(this.properties,r)&&o(this.properties[r],"properties["+(0,de.Pz)(r)+"]",this)}map(o){var r={};for(var t in this.properties)(0,J.nr)(this.properties,t)&&(r[t]=this._ifNode(o(this.properties[t],"properties["+(0,de.Pz)(t)+"]",this)));return new p(r)}clone(){var o={};for(var r in this.properties)(0,J.nr)(this.properties,r)&&(o[r]=this.properties[r]);return new p(o)}_toString(o){var r=[];for(var t in this.properties)(0,J.nr)(this.properties,t)&&r.push((0,de.Pz)(t)+": "+this.properties[t].toString(o));return"{"+r.join(", ")+"}"}toJSON(){return{mathjs:Qe,properties:this.properties}}static fromJSON(o){return new p(o.properties)}toHTML(o){var r=[];for(var t in this.properties)(0,J.nr)(this.properties,t)&&r.push('<span class="math-symbol math-property">'+(0,de.YU)(t)+'</span><span class="math-operator math-assignment-operator math-property-assignment-operator math-binary-operator">:</span>'+this.properties[t].toHTML(o));return'<span class="math-parenthesis math-curly-parenthesis">{</span>'+r.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-curly-parenthesis">}</span>'}_toTex(o){var r=[];for(var t in this.properties)(0,J.nr)(this.properties,t)&&r.push("\\mathbf{"+t+":} & "+this.properties[t].toTex(o)+"\\\\");return"\\left\\{\\begin{array}{ll}"+r.join("\n")+"\\end{array}\\right\\}"}}return(0,ue.Z)(p,"name",Qe),p},{isClass:!0,isNode:!0}),ge=ee(51132),ke=[{AssignmentNode:{},FunctionAssignmentNode:{}},{ConditionalNode:{latexLeftParens:!1,latexRightParens:!1,latexParens:!1}},{"OperatorNode:or":{op:"or",associativity:"left",associativeWith:[]}},{"OperatorNode:xor":{op:"xor",associativity:"left",associativeWith:[]}},{"OperatorNode:and":{op:"and",associativity:"left",associativeWith:[]}},{"OperatorNode:bitOr":{op:"|",associativity:"left",associativeWith:[]}},{"OperatorNode:bitXor":{op:"^|",associativity:"left",associativeWith:[]}},{"OperatorNode:bitAnd":{op:"&",associativity:"left",associativeWith:[]}},{"OperatorNode:equal":{op:"==",associativity:"left",associativeWith:[]},"OperatorNode:unequal":{op:"!=",associativity:"left",associativeWith:[]},"OperatorNode:smaller":{op:"<",associativity:"left",associativeWith:[]},"OperatorNode:larger":{op:">",associativity:"left",associativeWith:[]},"OperatorNode:smallerEq":{op:"<=",associativity:"left",associativeWith:[]},"OperatorNode:largerEq":{op:">=",associativity:"left",associativeWith:[]},RelationalNode:{associativity:"left",associativeWith:[]}},{"OperatorNode:leftShift":{op:"<<",associativity:"left",associativeWith:[]},"OperatorNode:rightArithShift":{op:">>",associativity:"left",associativeWith:[]},"OperatorNode:rightLogShift":{op:">>>",associativity:"left",associativeWith:[]}},{"OperatorNode:to":{op:"to",associativity:"left",associativeWith:[]}},{RangeNode:{}},{"OperatorNode:add":{op:"+",associativity:"left",associativeWith:["OperatorNode:add","OperatorNode:subtract"]},"OperatorNode:subtract":{op:"-",associativity:"left",associativeWith:[]}},{"OperatorNode:multiply":{op:"*",associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","Operator:dotMultiply","Operator:dotDivide"]},"OperatorNode:divide":{op:"/",associativity:"left",associativeWith:[],latexLeftParens:!1,latexRightParens:!1,latexParens:!1},"OperatorNode:dotMultiply":{op:".*",associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","OperatorNode:dotMultiply","OperatorNode:doDivide"]},"OperatorNode:dotDivide":{op:"./",associativity:"left",associativeWith:[]},"OperatorNode:mod":{op:"mod",associativity:"left",associativeWith:[]}},{"OperatorNode:multiply":{associativity:"left",associativeWith:["OperatorNode:multiply","OperatorNode:divide","Operator:dotMultiply","Operator:dotDivide"]}},{"OperatorNode:unaryPlus":{op:"+",associativity:"right"},"OperatorNode:unaryMinus":{op:"-",associativity:"right"},"OperatorNode:bitNot":{op:"~",associativity:"right"},"OperatorNode:not":{op:"not",associativity:"right"}},{"OperatorNode:pow":{op:"^",associativity:"right",associativeWith:[],latexRightParens:!1},"OperatorNode:dotPow":{op:".^",associativity:"right",associativeWith:[]}},{"OperatorNode:factorial":{op:"!",associativity:"left"}},{"OperatorNode:ctranspose":{op:"'",associativity:"left"}}];function fr(v,f){if(!f||"auto"!==f)return v;for(var p=v;(0,h.Ig)(p);)p=p.content;return p}function pe(v,f,p,m){var o=v;"keep"!==f&&(o=v.getContent());for(var r=o.getIdentifier(),t=null,i=0;i<ke.length;i++)if(r in ke[i]){t=i;break}if("OperatorNode:multiply"===r&&o.implicit&&"show"!==p){var s=fr(o.args[0],f);!((0,h.nu)(s)&&m&&"OperatorNode:divide"===m.getIdentifier()&&(0,h.ZX)(fr(m.args[0],f)))&&("OperatorNode:divide"!==s.getIdentifier()||!(0,h.ZX)(fr(s.args[0],f))||!(0,h.nu)(fr(s.args[1])))&&(t+=1)}return t}function cr(v,f){var p=v;"keep"!==f&&(p=v.getContent());var m=p.getIdentifier(),o=pe(p,f);if(null===o)return null;var r=ke[o][m];if((0,J.nr)(r,"associativity")){if("left"===r.associativity)return"left";if("right"===r.associativity)return"right";throw Error("'"+m+"' has the invalid associativity '"+r.associativity+"'.")}return null}function Mr(v,f,p){var m="keep"!==p?v.getContent():v,o="keep"!==p?v.getContent():f,r=m.getIdentifier(),t=o.getIdentifier(),i=pe(m,p);if(null===i)return null;var s=ke[i][r];if((0,J.nr)(s,"associativeWith")&&s.associativeWith instanceof Array){for(var n=0;n<s.associativeWith.length;n++)if(s.associativeWith[n]===t)return!0;return!1}return null}var Ot=ee(91834),qr={Alpha:"A",alpha:"\\alpha",Beta:"B",beta:"\\beta",Gamma:"\\Gamma",gamma:"\\gamma",Delta:"\\Delta",delta:"\\delta",Epsilon:"E",epsilon:"\\epsilon",varepsilon:"\\varepsilon",Zeta:"Z",zeta:"\\zeta",Eta:"H",eta:"\\eta",Theta:"\\Theta",theta:"\\theta",vartheta:"\\vartheta",Iota:"I",iota:"\\iota",Kappa:"K",kappa:"\\kappa",varkappa:"\\varkappa",Lambda:"\\Lambda",lambda:"\\lambda",Mu:"M",mu:"\\mu",Nu:"N",nu:"\\nu",Xi:"\\Xi",xi:"\\xi",Omicron:"O",omicron:"o",Pi:"\\Pi",pi:"\\pi",varpi:"\\varpi",Rho:"P",rho:"\\rho",varrho:"\\varrho",Sigma:"\\Sigma",sigma:"\\sigma",varsigma:"\\varsigma",Tau:"T",tau:"\\tau",Upsilon:"\\Upsilon",upsilon:"\\upsilon",Phi:"\\Phi",phi:"\\phi",varphi:"\\varphi",Chi:"X",chi:"\\chi",Psi:"\\Psi",psi:"\\psi",Omega:"\\Omega",omega:"\\omega",true:"\\mathrm{True}",false:"\\mathrm{False}",i:"i",inf:"\\infty",Inf:"\\infty",infinity:"\\infty",Infinity:"\\infty",oo:"\\infty",lim:"\\lim",undefined:"\\mathbf{?}"},ie={transpose:"^\\top",ctranspose:"^H",factorial:"!",pow:"^",dotPow:".^\\wedge",unaryPlus:"+",unaryMinus:"-",bitNot:"\\~",not:"\\neg",multiply:"\\cdot",divide:"\\frac",dotMultiply:".\\cdot",dotDivide:".:",mod:"\\mod",add:"+",subtract:"-",to:"\\rightarrow",leftShift:"<<",rightArithShift:">>",rightLogShift:">>>",equal:"=",unequal:"\\neq",smaller:"<",larger:">",smallerEq:"\\leq",largerEq:"\\geq",bitAnd:"\\&",bitXor:"\\underline{|}",bitOr:"|",and:"\\wedge",xor:"\\veebar",or:"\\vee"},Gr={abs:{1:"\\left|${args[0]}\\right|"},add:{2:"\\left(${args[0]}".concat(ie.add,"${args[1]}\\right)")},cbrt:{1:"\\sqrt[3]{${args[0]}}"},ceil:{1:"\\left\\lceil${args[0]}\\right\\rceil"},cube:{1:"\\left(${args[0]}\\right)^3"},divide:{2:"\\frac{${args[0]}}{${args[1]}}"},dotDivide:{2:"\\left(${args[0]}".concat(ie.dotDivide,"${args[1]}\\right)")},dotMultiply:{2:"\\left(${args[0]}".concat(ie.dotMultiply,"${args[1]}\\right)")},dotPow:{2:"\\left(${args[0]}".concat(ie.dotPow,"${args[1]}\\right)")},exp:{1:"\\exp\\left(${args[0]}\\right)"},expm1:"\\left(e".concat(ie.pow,"{${args[0]}}-1\\right)"),fix:{1:"\\mathrm{${name}}\\left(${args[0]}\\right)"},floor:{1:"\\left\\lfloor${args[0]}\\right\\rfloor"},gcd:"\\gcd\\left(${args}\\right)",hypot:"\\hypot\\left(${args}\\right)",log:{1:"\\ln\\left(${args[0]}\\right)",2:"\\log_{${args[1]}}\\left(${args[0]}\\right)"},log10:{1:"\\log_{10}\\left(${args[0]}\\right)"},log1p:{1:"\\ln\\left(${args[0]}+1\\right)",2:"\\log_{${args[1]}}\\left(${args[0]}+1\\right)"},log2:"\\log_{2}\\left(${args[0]}\\right)",mod:{2:"\\left(${args[0]}".concat(ie.mod,"${args[1]}\\right)")},multiply:{2:"\\left(${args[0]}".concat(ie.multiply,"${args[1]}\\right)")},norm:{1:"\\left\\|${args[0]}\\right\\|",2:void 0},nthRoot:{2:"\\sqrt[${args[1]}]{${args[0]}}"},nthRoots:{2:"\\{y : $y^{args[1]} = {${args[0]}}\\}"},pow:{2:"\\left(${args[0]}\\right)".concat(ie.pow,"{${args[1]}}")},round:{1:"\\left\\lfloor${args[0]}\\right\\rceil",2:void 0},sign:{1:"\\mathrm{${name}}\\left(${args[0]}\\right)"},sqrt:{1:"\\sqrt{${args[0]}}"},square:{1:"\\left(${args[0]}\\right)^2"},subtract:{2:"\\left(${args[0]}".concat(ie.subtract,"${args[1]}\\right)")},unaryMinus:{1:"".concat(ie.unaryMinus,"\\left(${args[0]}\\right)")},unaryPlus:{1:"".concat(ie.unaryPlus,"\\left(${args[0]}\\right)")},bitAnd:{2:"\\left(${args[0]}".concat(ie.bitAnd,"${args[1]}\\right)")},bitNot:{1:ie.bitNot+"\\left(${args[0]}\\right)"},bitOr:{2:"\\left(${args[0]}".concat(ie.bitOr,"${args[1]}\\right)")},bitXor:{2:"\\left(${args[0]}".concat(ie.bitXor,"${args[1]}\\right)")},leftShift:{2:"\\left(${args[0]}".concat(ie.leftShift,"${args[1]}\\right)")},rightArithShift:{2:"\\left(${args[0]}".concat(ie.rightArithShift,"${args[1]}\\right)")},rightLogShift:{2:"\\left(${args[0]}".concat(ie.rightLogShift,"${args[1]}\\right)")},bellNumbers:{1:"\\mathrm{B}_{${args[0]}}"},catalan:{1:"\\mathrm{C}_{${args[0]}}"},stirlingS2:{2:"\\mathrm{S}\\left(${args}\\right)"},arg:{1:"\\arg\\left(${args[0]}\\right)"},conj:{1:"\\left(${args[0]}\\right)^*"},im:{1:"\\Im\\left\\lbrace${args[0]}\\right\\rbrace"},re:{1:"\\Re\\left\\lbrace${args[0]}\\right\\rbrace"},and:{2:"\\left(${args[0]}".concat(ie.and,"${args[1]}\\right)")},not:{1:ie.not+"\\left(${args[0]}\\right)"},or:{2:"\\left(${args[0]}".concat(ie.or,"${args[1]}\\right)")},xor:{2:"\\left(${args[0]}".concat(ie.xor,"${args[1]}\\right)")},cross:{2:"\\left(${args[0]}\\right)\\times\\left(${args[1]}\\right)"},ctranspose:{1:"\\left(${args[0]}\\right)".concat(ie.ctranspose)},det:{1:"\\det\\left(${args[0]}\\right)"},dot:{2:"\\left(${args[0]}\\cdot${args[1]}\\right)"},expm:{1:"\\exp\\left(${args[0]}\\right)"},inv:{1:"\\left(${args[0]}\\right)^{-1}"},pinv:{1:"\\left(${args[0]}\\right)^{+}"},sqrtm:{1:"{${args[0]}}".concat(ie.pow,"{\\frac{1}{2}}")},trace:{1:"\\mathrm{tr}\\left(${args[0]}\\right)"},transpose:{1:"\\left(${args[0]}\\right)".concat(ie.transpose)},combinations:{2:"\\binom{${args[0]}}{${args[1]}}"},combinationsWithRep:{2:"\\left(\\!\\!{\\binom{${args[0]}}{${args[1]}}}\\!\\!\\right)"},factorial:{1:"\\left(${args[0]}\\right)".concat(ie.factorial)},gamma:{1:"\\Gamma\\left(${args[0]}\\right)"},lgamma:{1:"\\ln\\Gamma\\left(${args[0]}\\right)"},equal:{2:"\\left(${args[0]}".concat(ie.equal,"${args[1]}\\right)")},larger:{2:"\\left(${args[0]}".concat(ie.larger,"${args[1]}\\right)")},largerEq:{2:"\\left(${args[0]}".concat(ie.largerEq,"${args[1]}\\right)")},smaller:{2:"\\left(${args[0]}".concat(ie.smaller,"${args[1]}\\right)")},smallerEq:{2:"\\left(${args[0]}".concat(ie.smallerEq,"${args[1]}\\right)")},unequal:{2:"\\left(${args[0]}".concat(ie.unequal,"${args[1]}\\right)")},erf:{1:"erf\\left(${args[0]}\\right)"},max:"\\max\\left(${args}\\right)",min:"\\min\\left(${args}\\right)",variance:"\\mathrm{Var}\\left(${args}\\right)",acos:{1:"\\cos^{-1}\\left(${args[0]}\\right)"},acosh:{1:"\\cosh^{-1}\\left(${args[0]}\\right)"},acot:{1:"\\cot^{-1}\\left(${args[0]}\\right)"},acoth:{1:"\\coth^{-1}\\left(${args[0]}\\right)"},acsc:{1:"\\csc^{-1}\\left(${args[0]}\\right)"},acsch:{1:"\\mathrm{csch}^{-1}\\left(${args[0]}\\right)"},asec:{1:"\\sec^{-1}\\left(${args[0]}\\right)"},asech:{1:"\\mathrm{sech}^{-1}\\left(${args[0]}\\right)"},asin:{1:"\\sin^{-1}\\left(${args[0]}\\right)"},asinh:{1:"\\sinh^{-1}\\left(${args[0]}\\right)"},atan:{1:"\\tan^{-1}\\left(${args[0]}\\right)"},atan2:{2:"\\mathrm{atan2}\\left(${args}\\right)"},atanh:{1:"\\tanh^{-1}\\left(${args[0]}\\right)"},cos:{1:"\\cos\\left(${args[0]}\\right)"},cosh:{1:"\\cosh\\left(${args[0]}\\right)"},cot:{1:"\\cot\\left(${args[0]}\\right)"},coth:{1:"\\coth\\left(${args[0]}\\right)"},csc:{1:"\\csc\\left(${args[0]}\\right)"},csch:{1:"\\mathrm{csch}\\left(${args[0]}\\right)"},sec:{1:"\\sec\\left(${args[0]}\\right)"},sech:{1:"\\mathrm{sech}\\left(${args[0]}\\right)"},sin:{1:"\\sin\\left(${args[0]}\\right)"},sinh:{1:"\\sinh\\left(${args[0]}\\right)"},tan:{1:"\\tan\\left(${args[0]}\\right)"},tanh:{1:"\\tanh\\left(${args[0]}\\right)"},to:{2:"\\left(${args[0]}".concat(ie.to,"${args[1]}\\right)")},numeric:function(f,p){return f.args[0].toTex()},number:{0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"},string:{0:'\\mathtt{""}',1:"\\mathrm{string}\\left(${args[0]}\\right)"},bignumber:{0:"0",1:"\\left(${args[0]}\\right)"},complex:{0:"0",1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)+".concat(qr.i,"\\cdot\\left(${args[1]}\\right)\\right)")},matrix:{0:"\\begin{bmatrix}\\end{bmatrix}",1:"\\left(${args[0]}\\right)",2:"\\left(${args[0]}\\right)"},sparse:{0:"\\begin{bsparse}\\end{bsparse}",1:"\\left(${args[0]}\\right)"},unit:{1:"\\left(${args[0]}\\right)",2:"\\left(\\left(${args[0]}\\right)${args[1]}\\right)"}},Wr={deg:"^\\circ"};function zr(v){return Ot(v,{preserveFormatting:!0})}function _r(v,f){return(f=!(typeof f>"u")&&f)?(0,J.nr)(Wr,v)?Wr[v]:"\\mathrm{"+zr(v)+"}":(0,J.nr)(qr,v)?qr[v]:zr(v)}var dr="OperatorNode",Et=(0,W.d5)(dr,["Node"],v=>{var{Node:f}=v;function p(r,t){var i=r;if("auto"===t)for(;(0,h.Ig)(i);)i=i.content;return!!(0,h.nu)(i)||!!(0,h.bV)(i)&&p(i.args[0],t)}function m(r,t,i,s,n){var x,l=pe(r,t,i),g=cr(r,t);if("all"===t||s.length>2&&"OperatorNode:add"!==r.getIdentifier()&&"OperatorNode:multiply"!==r.getIdentifier())return s.map(function($){switch($.getContent().type){case"ArrayNode":case"ConstantNode":case"SymbolNode":case"ParenthesisNode":return!1;default:return!0}});switch(s.length){case 0:x=[];break;case 1:var C=pe(s[0],t,i,r);if(n&&null!==C){var A,U;if("keep"===t?(A=s[0].getIdentifier(),U=r.getIdentifier()):(A=s[0].getContent().getIdentifier(),U=r.getContent().getIdentifier()),!1===ke[l][U].latexLeftParens){x=[!1];break}if(!1===ke[C][A].latexParens){x=[!1];break}}if(null===C){x=[!1];break}if(C<=l){x=[!0];break}x=[!1];break;case 2:var I,G=pe(s[0],t,i,r),se=Mr(r,s[0],t);I=null!==G&&(G===l&&"right"===g&&!se||G<l);var y,w,N,T,S=pe(s[1],t,i,r),d=Mr(r,s[1],t);y=null!==S&&(S===l&&"left"===g&&!d||S<l),n&&("keep"===t?(w=r.getIdentifier(),N=r.args[0].getIdentifier(),T=r.args[1].getIdentifier()):(w=r.getContent().getIdentifier(),N=r.args[0].getContent().getIdentifier(),T=r.args[1].getContent().getIdentifier()),null!==G&&(!1===ke[l][w].latexLeftParens&&(I=!1),!1===ke[G][N].latexParens&&(I=!1)),null!==S&&(!1===ke[l][w].latexRightParens&&(y=!1),!1===ke[S][T].latexParens&&(y=!1))),x=[I,y];break;default:("OperatorNode:add"===r.getIdentifier()||"OperatorNode:multiply"===r.getIdentifier())&&(x=s.map(function($){var M=pe($,t,i,r),k=Mr(r,$,t),B=cr($,t);return null!==M&&(l===M&&g===B&&!k||M<l)}))}if(s.length>=2&&"OperatorNode:multiply"===r.getIdentifier()&&r.implicit&&"all"!==t&&"hide"===i)for(var j=1;j<x.length;++j)p(s[j],t)&&!x[j-1]&&("keep"!==t||!(0,h.Ig)(s[j-1]))&&(x[j]=!0);return x}class o extends f{constructor(t,i,s,n,l){if(super(),"string"!=typeof t)throw new TypeError('string expected for parameter "op"');if("string"!=typeof i)throw new TypeError('string expected for parameter "fn"');if(!Array.isArray(s)||!s.every(h.UG))throw new TypeError('Array containing Nodes expected for parameter "args"');this.implicit=!0===n,this.isPercentage=!0===l,this.op=t,this.fn=i,this.args=s||[]}get type(){return dr}get isOperatorNode(){return!0}_compile(t,i){if("string"!=typeof this.fn||!(0,fe.OJ)(t,this.fn))throw t[this.fn]?new Error('No access to function "'+this.fn+'"'):new Error("Function "+this.fn+' missing in provided namespace "math"');var s=(0,fe.YF)(t,this.fn),n=(0,ge.UI)(this.args,function(C){return C._compile(t,i)});if(1===n.length){var l=n[0];return function(A,U,I){return s(l(A,U,I))}}if(2===n.length){var g=n[0],x=n[1];return function(A,U,I){return s(g(A,U,I),x(A,U,I))}}return function(A,U,I){return s.apply(null,(0,ge.UI)(n,function(G){return G(A,U,I)}))}}forEach(t){for(var i=0;i<this.args.length;i++)t(this.args[i],"args["+i+"]",this)}map(t){for(var i=[],s=0;s<this.args.length;s++)i[s]=this._ifNode(t(this.args[s],"args["+s+"]",this));return new o(this.op,this.fn,i,this.implicit,this.isPercentage)}clone(){return new o(this.op,this.fn,this.args.slice(0),this.implicit,this.isPercentage)}isUnary(){return 1===this.args.length}isBinary(){return 2===this.args.length}_toString(t){var i=t&&t.parenthesis?t.parenthesis:"keep",s=t&&t.implicit?t.implicit:"hide",n=this.args,l=m(this,i,s,n,!1);if(1===n.length){var g=cr(this,i),x=n[0].toString(t);l[0]&&(x="("+x+")");var C=/[a-zA-Z]+/.test(this.op);return"right"===g?this.op+(C?" ":"")+x:"left"===g?x+(C?" ":"")+this.op:x+this.op}if(2===n.length){var A=n[0].toString(t),U=n[1].toString(t);return l[0]&&(A="("+A+")"),l[1]&&(U="("+U+")"),this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===s?A+" "+U:A+" "+this.op+" "+U}if(n.length>2&&("OperatorNode:add"===this.getIdentifier()||"OperatorNode:multiply"===this.getIdentifier())){var I=n.map(function(G,se){return G=G.toString(t),l[se]&&(G="("+G+")"),G});return this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===s?I.join(" "):I.join(" "+this.op+" ")}return this.fn+"("+this.args.join(", ")+")"}toJSON(){return{mathjs:dr,op:this.op,fn:this.fn,args:this.args,implicit:this.implicit,isPercentage:this.isPercentage}}static fromJSON(t){return new o(t.op,t.fn,t.args,t.implicit,t.isPercentage)}toHTML(t){var i=t&&t.parenthesis?t.parenthesis:"keep",s=t&&t.implicit?t.implicit:"hide",n=this.args,l=m(this,i,s,n,!1);if(1===n.length){var g=cr(this,i),x=n[0].toHTML(t);return l[0]&&(x='<span class="math-parenthesis math-round-parenthesis">(</span>'+x+'<span class="math-parenthesis math-round-parenthesis">)</span>'),"right"===g?'<span class="math-operator math-unary-operator math-lefthand-unary-operator">'+(0,de.YU)(this.op)+"</span>"+x:x+'<span class="math-operator math-unary-operator math-righthand-unary-operator">'+(0,de.YU)(this.op)+"</span>"}if(2===n.length){var C=n[0].toHTML(t),A=n[1].toHTML(t);return l[0]&&(C='<span class="math-parenthesis math-round-parenthesis">(</span>'+C+'<span class="math-parenthesis math-round-parenthesis">)</span>'),l[1]&&(A='<span class="math-parenthesis math-round-parenthesis">(</span>'+A+'<span class="math-parenthesis math-round-parenthesis">)</span>'),this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===s?C+'<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>'+A:C+'<span class="math-operator math-binary-operator math-explicit-binary-operator">'+(0,de.YU)(this.op)+"</span>"+A}var U=n.map(function(I,G){return I=I.toHTML(t),l[G]&&(I='<span class="math-parenthesis math-round-parenthesis">(</span>'+I+'<span class="math-parenthesis math-round-parenthesis">)</span>'),I});return n.length>2&&("OperatorNode:add"===this.getIdentifier()||"OperatorNode:multiply"===this.getIdentifier())?this.implicit&&"OperatorNode:multiply"===this.getIdentifier()&&"hide"===s?U.join('<span class="math-operator math-binary-operator math-implicit-binary-operator"></span>'):U.join('<span class="math-operator math-binary-operator math-explicit-binary-operator">'+(0,de.YU)(this.op)+"</span>"):'<span class="math-function">'+(0,de.YU)(this.fn)+'</span><span class="math-paranthesis math-round-parenthesis">(</span>'+U.join('<span class="math-separator">,</span>')+'<span class="math-paranthesis math-round-parenthesis">)</span>'}_toTex(t){var i=t&&t.parenthesis?t.parenthesis:"keep",s=t&&t.implicit?t.implicit:"hide",n=this.args,l=m(this,i,s,n,!0),g=ie[this.fn];if(g=typeof g>"u"?this.op:g,1===n.length){var x=cr(this,i),C=n[0].toTex(t);return l[0]&&(C="\\left(".concat(C,"\\right)")),"right"===x?g+C:C+g}if(2===n.length){var A=n[0],U=A.toTex(t);l[0]&&(U="\\left(".concat(U,"\\right)"));var se,G=n[1].toTex(t);switch(l[1]&&(G="\\left(".concat(G,"\\right)")),se="keep"===i?A.getIdentifier():A.getContent().getIdentifier(),this.getIdentifier()){case"OperatorNode:divide":return g+"{"+U+"}{"+G+"}";case"OperatorNode:pow":switch(U="{"+U+"}",G="{"+G+"}",se){case"ConditionalNode":case"OperatorNode:divide":U="\\left(".concat(U,"\\right)")}break;case"OperatorNode:multiply":if(this.implicit&&"hide"===s)return U+"~"+G}return U+g+G}if(n.length>2&&("OperatorNode:add"===this.getIdentifier()||"OperatorNode:multiply"===this.getIdentifier())){var y=n.map(function(S,d){return S=S.toTex(t),l[d]&&(S="\\left(".concat(S,"\\right)")),S});return"OperatorNode:multiply"===this.getIdentifier()&&this.implicit&&"hide"===s?y.join("~"):y.join(g)}return"\\mathrm{"+this.fn+"}\\left("+n.map(function(S){return S.toTex(t)}).join(",")+"\\right)"}getIdentifier(){return this.type+":"+this.fn}}return(0,ue.Z)(o,"name",dr),o},{isClass:!0,isNode:!0}),hr="ParenthesisNode",Mt=(0,W.d5)(hr,["Node"],v=>{var{Node:f}=v;class p extends f{constructor(o){if(super(),!(0,h.UG)(o))throw new TypeError('Node expected for parameter "content"');this.content=o}get type(){return hr}get isParenthesisNode(){return!0}_compile(o,r){return this.content._compile(o,r)}getContent(){return this.content.getContent()}forEach(o){o(this.content,"content",this)}map(o){var r=o(this.content,"content",this);return new p(r)}clone(){return new p(this.content)}_toString(o){return!o||o&&!o.parenthesis||o&&"keep"===o.parenthesis?"("+this.content.toString(o)+")":this.content.toString(o)}toJSON(){return{mathjs:hr,content:this.content}}static fromJSON(o){return new p(o.content)}toHTML(o){return!o||o&&!o.parenthesis||o&&"keep"===o.parenthesis?'<span class="math-parenthesis math-round-parenthesis">(</span>'+this.content.toHTML(o)+'<span class="math-parenthesis math-round-parenthesis">)</span>':this.content.toHTML(o)}_toTex(o){return!o||o&&!o.parenthesis||o&&"keep"===o.parenthesis?"\\left(".concat(this.content.toTex(o),"\\right)"):this.content.toTex(o)}}return(0,ue.Z)(p,"name",hr),p},{isClass:!0,isNode:!0}),vr="RelationalNode",zt=(0,W.d5)(vr,["Node"],v=>{var{Node:f}=v,p={equal:"==",unequal:"!=",smaller:"<",larger:">",smallerEq:"<=",largerEq:">="};class m extends f{constructor(r,t){if(super(),!Array.isArray(r))throw new TypeError("Parameter conditionals must be an array");if(!Array.isArray(t))throw new TypeError("Parameter params must be an array");if(r.length!==t.length-1)throw new TypeError("Parameter params must contain exactly one more element than parameter conditionals");this.conditionals=r,this.params=t}get type(){return vr}get isRelationalNode(){return!0}_compile(r,t){var i=this,s=this.params.map(n=>n._compile(r,t));return function(l,g,x){for(var C,A=s[0](l,g,x),U=0;U<i.conditionals.length;U++)if(C=A,A=s[U+1](l,g,x),!(0,fe.YF)(r,i.conditionals[U])(C,A))return!1;return!0}}forEach(r){this.params.forEach((t,i)=>r(t,"params["+i+"]",this),this)}map(r){return new m(this.conditionals.slice(),this.params.map((t,i)=>this._ifNode(r(t,"params["+i+"]",this)),this))}clone(){return new m(this.conditionals,this.params)}_toString(r){for(var t=r&&r.parenthesis?r.parenthesis:"keep",i=pe(this,t,r&&r.implicit),s=this.params.map(function(g,x){var C=pe(g,t,r&&r.implicit);return"all"===t||null!==C&&C<=i?"("+g.toString(r)+")":g.toString(r)}),n=s[0],l=0;l<this.conditionals.length;l++)n+=" "+p[this.conditionals[l]],n+=" "+s[l+1];return n}toJSON(){return{mathjs:vr,conditionals:this.conditionals,params:this.params}}static fromJSON(r){return new m(r.conditionals,r.params)}toHTML(r){for(var t=r&&r.parenthesis?r.parenthesis:"keep",i=pe(this,t,r&&r.implicit),s=this.params.map(function(g,x){var C=pe(g,t,r&&r.implicit);return"all"===t||null!==C&&C<=i?'<span class="math-parenthesis math-round-parenthesis">(</span>'+g.toHTML(r)+'<span class="math-parenthesis math-round-parenthesis">)</span>':g.toHTML(r)}),n=s[0],l=0;l<this.conditionals.length;l++)n+='<span class="math-operator math-binary-operator math-explicit-binary-operator">'+(0,de.YU)(p[this.conditionals[l]])+"</span>"+s[l+1];return n}_toTex(r){for(var t=r&&r.parenthesis?r.parenthesis:"keep",i=pe(this,t,r&&r.implicit),s=this.params.map(function(g,x){var C=pe(g,t,r&&r.implicit);return"all"===t||null!==C&&C<=i?"\\left("+g.toTex(r)+"\right)":g.toTex(r)}),n=s[0],l=0;l<this.conditionals.length;l++)n+=ie[this.conditionals[l]]+s[l+1];return n}}return(0,ue.Z)(m,"name",vr),m},{isClass:!0,isNode:!0}),gr="ArrayNode",Rt=(0,W.d5)(gr,["Node"],v=>{var{Node:f}=v;class p extends f{constructor(o){if(super(),this.items=o||[],!Array.isArray(this.items)||!this.items.every(h.UG))throw new TypeError("Array containing Nodes expected")}get type(){return gr}get isArrayNode(){return!0}_compile(o,r){var t=(0,ge.UI)(this.items,function(n){return n._compile(o,r)});if("Array"!==o.config.matrix){var s=o.matrix;return function(l,g,x){return s((0,ge.UI)(t,function(C){return C(l,g,x)}))}}return function(l,g,x){return(0,ge.UI)(t,function(C){return C(l,g,x)})}}forEach(o){for(var r=0;r<this.items.length;r++)o(this.items[r],"items["+r+"]",this)}map(o){for(var r=[],t=0;t<this.items.length;t++)r[t]=this._ifNode(o(this.items[t],"items["+t+"]",this));return new p(r)}clone(){return new p(this.items.slice(0))}_toString(o){return"["+this.items.map(function(t){return t.toString(o)}).join(", ")+"]"}toJSON(){return{mathjs:gr,items:this.items}}static fromJSON(o){return new p(o.items)}toHTML(o){return'<span class="math-parenthesis math-square-parenthesis">[</span>'+this.items.map(function(t){return t.toHTML(o)}).join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-square-parenthesis">]</span>'}_toTex(o){return function r(t,i){var s=t.some(h.j0)&&!t.every(h.j0),n=i||s,l=n?"&":"\\\\",g=t.map(function(x){return x.items?r(x.items,!i):x.toTex(o)}).join(l);return s||!n||n&&!i?"\\begin{bmatrix}"+g+"\\end{bmatrix}":g}(this.items,!1)}}return(0,ue.Z)(p,"name",gr),p},{isClass:!0,isNode:!0}),yr="BlockNode",It=(0,W.d5)(yr,["ResultSet","Node"],v=>{var{ResultSet:f,Node:p}=v;class m extends p{constructor(r){if(super(),!Array.isArray(r))throw new Error("Array expected");this.blocks=r.map(function(t){var i=t&&t.node,s=!t||void 0===t.visible||t.visible;if(!(0,h.UG)(i))throw new TypeError('Property "node" must be a Node');if("boolean"!=typeof s)throw new TypeError('Property "visible" must be a boolean');return{node:i,visible:s}})}get type(){return yr}get isBlockNode(){return!0}_compile(r,t){var i=(0,ge.UI)(this.blocks,function(s){return{evaluate:s.node._compile(r,t),visible:s.visible}});return function(n,l,g){var x=[];return(0,ge.Ed)(i,function(A){var U=A.evaluate(n,l,g);A.visible&&x.push(U)}),new f(x)}}forEach(r){for(var t=0;t<this.blocks.length;t++)r(this.blocks[t].node,"blocks["+t+"].node",this)}map(r){for(var t=[],i=0;i<this.blocks.length;i++){var s=this.blocks[i],n=this._ifNode(r(s.node,"blocks["+i+"].node",this));t[i]={node:n,visible:s.visible}}return new m(t)}clone(){var r=this.blocks.map(function(t){return{node:t.node,visible:t.visible}});return new m(r)}_toString(r){return this.blocks.map(function(t){return t.node.toString(r)+(t.visible?"":";")}).join("\n")}toJSON(){return{mathjs:yr,blocks:this.blocks}}static fromJSON(r){return new m(r.blocks)}toHTML(r){return this.blocks.map(function(t){return t.node.toHTML(r)+(t.visible?"":'<span class="math-separator">;</span>')}).join('<span class="math-separator"><br /></span>')}_toTex(r){return this.blocks.map(function(t){return t.node.toTex(r)+(t.visible?"":";")}).join("\\;\\;\n")}}return(0,ue.Z)(m,"name",yr),m},{isClass:!0,isNode:!0}),xr="ConditionalNode",Lt=(0,W.d5)(xr,["Node"],v=>{var{Node:f}=v;class m extends f{constructor(r,t,i){if(super(),!(0,h.UG)(r))throw new TypeError("Parameter condition must be a Node");if(!(0,h.UG)(t))throw new TypeError("Parameter trueExpr must be a Node");if(!(0,h.UG)(i))throw new TypeError("Parameter falseExpr must be a Node");this.condition=r,this.trueExpr=t,this.falseExpr=i}get type(){return xr}get isConditionalNode(){return!0}_compile(r,t){var i=this.condition._compile(r,t),s=this.trueExpr._compile(r,t),n=this.falseExpr._compile(r,t);return function(g,x,C){return function p(o){if("number"==typeof o||"boolean"==typeof o||"string"==typeof o)return!!o;if(o){if((0,h.l9)(o))return!o.isZero();if((0,h.Mc)(o))return!(!o.re&&!o.im);if((0,h.wr)(o))return!!o.value}if(null==o)return!1;throw new TypeError('Unsupported type of condition "'+(0,h.kM)(o)+'"')}(i(g,x,C))?s(g,x,C):n(g,x,C)}}forEach(r){r(this.condition,"condition",this),r(this.trueExpr,"trueExpr",this),r(this.falseExpr,"falseExpr",this)}map(r){return new m(this._ifNode(r(this.condition,"condition",this)),this._ifNode(r(this.trueExpr,"trueExpr",this)),this._ifNode(r(this.falseExpr,"falseExpr",this)))}clone(){return new m(this.condition,this.trueExpr,this.falseExpr)}_toString(r){var t=r&&r.parenthesis?r.parenthesis:"keep",i=pe(this,t,r&&r.implicit),s=this.condition.toString(r),n=pe(this.condition,t,r&&r.implicit);("all"===t||"OperatorNode"===this.condition.type||null!==n&&n<=i)&&(s="("+s+")");var l=this.trueExpr.toString(r),g=pe(this.trueExpr,t,r&&r.implicit);("all"===t||"OperatorNode"===this.trueExpr.type||null!==g&&g<=i)&&(l="("+l+")");var x=this.falseExpr.toString(r),C=pe(this.falseExpr,t,r&&r.implicit);return("all"===t||"OperatorNode"===this.falseExpr.type||null!==C&&C<=i)&&(x="("+x+")"),s+" ? "+l+" : "+x}toJSON(){return{mathjs:xr,condition:this.condition,trueExpr:this.trueExpr,falseExpr:this.falseExpr}}static fromJSON(r){return new m(r.condition,r.trueExpr,r.falseExpr)}toHTML(r){var t=r&&r.parenthesis?r.parenthesis:"keep",i=pe(this,t,r&&r.implicit),s=this.condition.toHTML(r),n=pe(this.condition,t,r&&r.implicit);("all"===t||"OperatorNode"===this.condition.type||null!==n&&n<=i)&&(s='<span class="math-parenthesis math-round-parenthesis">(</span>'+s+'<span class="math-parenthesis math-round-parenthesis">)</span>');var l=this.trueExpr.toHTML(r),g=pe(this.trueExpr,t,r&&r.implicit);("all"===t||"OperatorNode"===this.trueExpr.type||null!==g&&g<=i)&&(l='<span class="math-parenthesis math-round-parenthesis">(</span>'+l+'<span class="math-parenthesis math-round-parenthesis">)</span>');var x=this.falseExpr.toHTML(r),C=pe(this.falseExpr,t,r&&r.implicit);return("all"===t||"OperatorNode"===this.falseExpr.type||null!==C&&C<=i)&&(x='<span class="math-parenthesis math-round-parenthesis">(</span>'+x+'<span class="math-parenthesis math-round-parenthesis">)</span>'),s+'<span class="math-operator math-conditional-operator">?</span>'+l+'<span class="math-operator math-conditional-operator">:</span>'+x}_toTex(r){return"\\begin{cases} {"+this.trueExpr.toTex(r)+"}, &\\quad{\\text{if }\\;"+this.condition.toTex(r)+"}\\\\{"+this.falseExpr.toTex(r)+"}, &\\quad{\\text{otherwise}}\\end{cases}"}}return(0,ue.Z)(m,"name",xr),m},{isClass:!0,isNode:!0}),br="ConstantNode",$t=(0,W.d5)(br,["Node"],v=>{var{Node:f}=v;class p extends f{constructor(o){super(),this.value=o}get type(){return br}get isConstantNode(){return!0}_compile(o,r){var t=this.value;return function(){return t}}forEach(o){}map(o){return this.clone()}clone(){return new p(this.value)}_toString(o){return(0,de.WU)(this.value,o)}toHTML(o){var r=this._toString(o);switch((0,h.kM)(this.value)){case"number":case"BigNumber":case"Fraction":return'<span class="math-number">'+r+"</span>";case"string":return'<span class="math-string">'+r+"</span>";case"boolean":return'<span class="math-boolean">'+r+"</span>";case"null":return'<span class="math-null-symbol">'+r+"</span>";case"undefined":return'<span class="math-undefined">'+r+"</span>";default:return'<span class="math-symbol">'+r+"</span>"}}toJSON(){return{mathjs:br,value:this.value}}static fromJSON(o){return new p(o.value)}_toTex(o){var r=this._toString(o);switch((0,h.kM)(this.value)){case"string":return"\\mathtt{"+zr(r)+"}";case"number":case"BigNumber":if(!isFinite(this.value))return this.value.valueOf()<0?"-\\infty":"\\infty";var t=r.toLowerCase().indexOf("e");return-1!==t?r.substring(0,t)+"\\cdot10^{"+r.substring(t+1)+"}":r;case"Fraction":return this.value.toLatex();default:return r}}}return(0,ue.Z)(p,"name",br),p},{isClass:!0,isNode:!0}),wr="RangeNode",Gt=(0,W.d5)(wr,["Node"],v=>{var{Node:f}=v;function p(o,r,t){var i=pe(o,r,t),s={},n=pe(o.start,r,t);if(s.start=null!==n&&n<=i||"all"===r,o.step){var l=pe(o.step,r,t);s.step=null!==l&&l<=i||"all"===r}var g=pe(o.end,r,t);return s.end=null!==g&&g<=i||"all"===r,s}class m extends f{constructor(r,t,i){if(super(),!(0,h.UG)(r))throw new TypeError("Node expected");if(!(0,h.UG)(t))throw new TypeError("Node expected");if(i&&!(0,h.UG)(i))throw new TypeError("Node expected");if(arguments.length>3)throw new Error("Too many arguments");this.start=r,this.end=t,this.step=i||null}get type(){return wr}get isRangeNode(){return!0}needsEnd(){return this.filter(function(t){return(0,h.FG)(t)&&"end"===t.name}).length>0}_compile(r,t){var i=r.range,s=this.start._compile(r,t),n=this.end._compile(r,t);if(this.step){var l=this.step._compile(r,t);return function(x,C,A){return i(s(x,C,A),n(x,C,A),l(x,C,A))}}return function(x,C,A){return i(s(x,C,A),n(x,C,A))}}forEach(r){r(this.start,"start",this),r(this.end,"end",this),this.step&&r(this.step,"step",this)}map(r){return new m(this._ifNode(r(this.start,"start",this)),this._ifNode(r(this.end,"end",this)),this.step&&this._ifNode(r(this.step,"step",this)))}clone(){return new m(this.start,this.end,this.step&&this.step)}_toString(r){var s,i=p(this,r&&r.parenthesis?r.parenthesis:"keep",r&&r.implicit),n=this.start.toString(r);if(i.start&&(n="("+n+")"),s=n,this.step){var l=this.step.toString(r);i.step&&(l="("+l+")"),s+=":"+l}var g=this.end.toString(r);return i.end&&(g="("+g+")"),s+":"+g}toJSON(){return{mathjs:wr,start:this.start,end:this.end,step:this.step}}static fromJSON(r){return new m(r.start,r.end,r.step)}toHTML(r){var s,i=p(this,r&&r.parenthesis?r.parenthesis:"keep",r&&r.implicit),n=this.start.toHTML(r);if(i.start&&(n='<span class="math-parenthesis math-round-parenthesis">(</span>'+n+'<span class="math-parenthesis math-round-parenthesis">)</span>'),s=n,this.step){var l=this.step.toHTML(r);i.step&&(l='<span class="math-parenthesis math-round-parenthesis">(</span>'+l+'<span class="math-parenthesis math-round-parenthesis">)</span>'),s+='<span class="math-operator math-range-operator">:</span>'+l}var g=this.end.toHTML(r);return i.end&&(g='<span class="math-parenthesis math-round-parenthesis">(</span>'+g+'<span class="math-parenthesis math-round-parenthesis">)</span>'),s+'<span class="math-operator math-range-operator">:</span>'+g}_toTex(r){var i=p(this,r&&r.parenthesis?r.parenthesis:"keep",r&&r.implicit),s=this.start.toTex(r);if(i.start&&(s="\\left(".concat(s,"\\right)")),this.step){var n=this.step.toTex(r);i.step&&(n="\\left(".concat(n,"\\right)")),s+=":"+n}var l=this.end.toTex(r);return i.end&&(l="\\left(".concat(l,"\\right)")),s+":"+l}}return(0,ue.Z)(m,"name",wr),m},{isClass:!0,isNode:!0}),Ht=(0,W.d5)("reviver",["classes"],v=>{var{classes:f}=v;return function(m,o){var r=f[o&&o.mathjs];return r&&"function"==typeof r.fromJSON?r.fromJSON(o):o}}),Vt=(0,W.d5)("Chain",["?on","math","typed"],v=>{var{on:f,math:p,typed:m}=v;function o(n){if(!(this instanceof o))throw new SyntaxError("Constructor must be called with the new operator");this.value=(0,h.qg)(n)?n.value:n}function t(n,l){(0,J.Vo)(o.prototype,n,function(){var x=l();if("function"==typeof x)return i(x)})}function i(n){return function(){if(0===arguments.length)return new o(n(this.value));for(var l=[this.value],g=0;g<arguments.length;g++)l[g+1]=arguments[g];if(m.isTypedFunction(n)){var x=m.resolve(n,l);if(1===x.params.length)throw new Error("chain function "+n.name+" cannot match rest parameter between chain value and additional arguments.");return new o(x.implementation.apply(n,l))}return new o(n.apply(n,l))}}o.prototype.type="Chain",o.prototype.isChain=!0,o.prototype.done=function(){return this.value},o.prototype.valueOf=function(){return this.value},o.prototype.toString=function(){return(0,de.WU)(this.value)},o.prototype.toJSON=function(){return{mathjs:"Chain",value:this.value}},o.fromJSON=function(n){return new o(n.value)},o.createProxy=function(n,l){if("string"==typeof n)!function r(n,l){"function"==typeof l&&(o.prototype[n]=i(l))}(n,l);else{var g=function(A){(0,J.nr)(n,A)&&void 0===s[A]&&t(A,()=>n[A])};for(var x in n)g(x)}};var s={expression:!0,docs:!0,type:!0,classes:!0,json:!0,error:!0,isChain:!0};return o.createProxy(p),f&&f("import",function(n,l,g){g||t(n,l)}),o},{isClass:!0}),Nr="FunctionAssignmentNode",Xt=(0,W.d5)(Nr,["typed","Node"],v=>{var{typed:f,Node:p}=v;function m(r,t,i){var s=pe(r,t,i),n=pe(r.expr,t,i);return"all"===t||null!==n&&n<=s}class o extends p{constructor(t,i,s){if(super(),"string"!=typeof t)throw new TypeError('String expected for parameter "name"');if(!Array.isArray(i))throw new TypeError('Array containing strings or objects expected for parameter "params"');if(!(0,h.UG)(s))throw new TypeError('Node expected for parameter "expr"');if(Ee.has(t))throw new Error('Illegal function name, "'+t+'" is a reserved keyword');var n=new Set;for(var l of i){var g="string"==typeof l?l:l.name;if(n.has(g))throw new Error('Duplicate parameter name "'.concat(g,'"'));n.add(g)}this.name=t,this.params=i.map(function(x){return x&&x.name||x}),this.types=i.map(function(x){return x&&x.type||"any"}),this.expr=s}get type(){return Nr}get isFunctionAssignmentNode(){return!0}_compile(t,i){var s=Object.create(i);(0,ge.Ed)(this.params,function(A){s[A]=!0});var n=this.expr._compile(t,s),l=this.name,g=this.params,x=(0,ge.v_)(this.types,","),C=l+"("+(0,ge.v_)(this.params,", ")+")";return function(U,I,G){var se={};se[x]=function(){for(var S=Object.create(I),d=0;d<g.length;d++)S[g[d]]=arguments[d];return n(U,S,G)};var y=f(l,se);return y.syntax=C,U.set(l,y),y}}forEach(t){t(this.expr,"expr",this)}map(t){var i=this._ifNode(t(this.expr,"expr",this));return new o(this.name,this.params.slice(0),i)}clone(){return new o(this.name,this.params.slice(0),this.expr)}_toString(t){var i=t&&t.parenthesis?t.parenthesis:"keep",s=this.expr.toString(t);return m(this,i,t&&t.implicit)&&(s="("+s+")"),this.name+"("+this.params.join(", ")+") = "+s}toJSON(){var t=this.types;return{mathjs:Nr,name:this.name,params:this.params.map(function(i,s){return{name:i,type:t[s]}}),expr:this.expr}}static fromJSON(t){return new o(t.name,t.params,t.expr)}toHTML(t){for(var i=t&&t.parenthesis?t.parenthesis:"keep",s=[],n=0;n<this.params.length;n++)s.push('<span class="math-symbol math-parameter">'+(0,de.YU)(this.params[n])+"</span>");var l=this.expr.toHTML(t);return m(this,i,t&&t.implicit)&&(l='<span class="math-parenthesis math-round-parenthesis">(</span>'+l+'<span class="math-parenthesis math-round-parenthesis">)</span>'),'<span class="math-function">'+(0,de.YU)(this.name)+'</span><span class="math-parenthesis math-round-parenthesis">(</span>'+s.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-round-parenthesis">)</span><span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>'+l}_toTex(t){var i=t&&t.parenthesis?t.parenthesis:"keep",s=this.expr.toTex(t);return m(this,i,t&&t.implicit)&&(s="\\left(".concat(s,"\\right)")),"\\mathrm{"+this.name+"}\\left("+this.params.map(_r).join(",")+"\\right):="+s}}return(0,ue.Z)(o,"name",Nr),o},{isClass:!0,isNode:!0}),Kt=(0,W.d5)("chain",["typed","Chain"],v=>{var{typed:f,Chain:p}=v;return f("chain",{"":function(){return new p},any:function(o){return new p(o)}})}),Cr="IndexNode",ra=(0,W.d5)(Cr,["Node","size"],v=>{var{Node:f,size:p}=v;class m extends f{constructor(r,t){if(super(),this.dimensions=r,this.dotNotation=t||!1,!Array.isArray(r)||!r.every(h.UG))throw new TypeError('Array containing Nodes expected for parameter "dimensions"');if(this.dotNotation&&!this.isObjectProperty())throw new Error("dotNotation only applicable for object properties")}get type(){return Cr}get isIndexNode(){return!0}_compile(r,t){var i=(0,ge.UI)(this.dimensions,function(n,l){if(n.filter(A=>A.isSymbolNode&&"end"===A.name).length>0){var x=Object.create(t);x.end=!0;var C=n._compile(r,x);return function(U,I,G){if(!(0,h.SW)(G)&&!(0,h.kJ)(G)&&!(0,h.HD)(G))throw new TypeError('Cannot resolve "end": context must be a Matrix, Array, or string but is '+(0,h.kM)(G));var se=p(G).valueOf(),y=Object.create(I);return y.end=se[l],C(U,y,G)}}return n._compile(r,t)}),s=(0,fe.YF)(r,"index");return function(l,g,x){var C=(0,ge.UI)(i,function(A){return A(l,g,x)});return s(...C)}}forEach(r){for(var t=0;t<this.dimensions.length;t++)r(this.dimensions[t],"dimensions["+t+"]",this)}map(r){for(var t=[],i=0;i<this.dimensions.length;i++)t[i]=this._ifNode(r(this.dimensions[i],"dimensions["+i+"]",this));return new m(t,this.dotNotation)}clone(){return new m(this.dimensions.slice(0),this.dotNotation)}isObjectProperty(){return 1===this.dimensions.length&&(0,h.nu)(this.dimensions[0])&&"string"==typeof this.dimensions[0].value}getObjectProperty(){return this.isObjectProperty()?this.dimensions[0].value:null}_toString(r){return this.dotNotation?"."+this.getObjectProperty():"["+this.dimensions.join(", ")+"]"}toJSON(){return{mathjs:Cr,dimensions:this.dimensions,dotNotation:this.dotNotation}}static fromJSON(r){return new m(r.dimensions,r.dotNotation)}toHTML(r){for(var t=[],i=0;i<this.dimensions.length;i++)t[i]=this.dimensions[i].toHTML();return this.dotNotation?'<span class="math-operator math-accessor-operator">.</span><span class="math-symbol math-property">'+(0,de.YU)(this.getObjectProperty())+"</span>":'<span class="math-parenthesis math-square-parenthesis">[</span>'+t.join('<span class="math-separator">,</span>')+'<span class="math-parenthesis math-square-parenthesis">]</span>'}_toTex(r){var t=this.dimensions.map(function(i){return i.toTex(r)});return this.dotNotation?"."+this.getObjectProperty():"_{"+t.join(",")+"}"}}return(0,ue.Z)(m,"name",Cr),m},{isClass:!0,isNode:!0}),ta=ee(45206);function Te(v){return v&&v.isIndexError?new ta.c(v.index+1,v.min+1,void 0!==v.max?v.max+1:void 0):v}function Zr(v){var{subset:f}=v;return function(m,o){try{if(Array.isArray(m))return f(m,o);if(m&&"function"==typeof m.subset)return m.subset(o);if("string"==typeof m)return f(m,o);if("object"==typeof m){if(!o.isObjectProperty())throw new TypeError("Cannot apply a numeric index as object property");return(0,fe.YF)(m,o.getObjectProperty())}throw new TypeError("Cannot apply index: unsupported type of object")}catch(r){throw Te(r)}}}var Dr="AccessorNode",na=(0,W.d5)(Dr,["subset","Node"],v=>{var{subset:f,Node:p}=v,m=Zr({subset:f});function o(t){return!((0,h.Yz)(t)||(0,h.j0)(t)||(0,h.nu)(t)||(0,h.VO)(t)||(0,h.Lr)(t)||(0,h.Ig)(t)||(0,h.FG)(t))}class r extends p{constructor(i,s){if(super(),!(0,h.UG)(i))throw new TypeError('Node expected for parameter "object"');if(!(0,h.Cl)(s))throw new TypeError('IndexNode expected for parameter "index"');this.object=i,this.index=s}get name(){return this.index?this.index.isObjectProperty()?this.index.getObjectProperty():"":this.object.name||""}get type(){return Dr}get isAccessorNode(){return!0}_compile(i,s){var n=this.object._compile(i,s),l=this.index._compile(i,s);if(this.index.isObjectProperty()){var g=this.index.getObjectProperty();return function(C,A,U){return(0,fe.YF)(n(C,A,U),g)}}return function(C,A,U){var I=n(C,A,U),G=l(C,A,I);return m(I,G)}}forEach(i){i(this.object,"object",this),i(this.index,"index",this)}map(i){return new r(this._ifNode(i(this.object,"object",this)),this._ifNode(i(this.index,"index",this)))}clone(){return new r(this.object,this.index)}_toString(i){var s=this.object.toString(i);return o(this.object)&&(s="("+s+")"),s+this.index.toString(i)}toHTML(i){var s=this.object.toHTML(i);return o(this.object)&&(s='<span class="math-parenthesis math-round-parenthesis">(</span>'+s+'<span class="math-parenthesis math-round-parenthesis">)</span>'),s+this.index.toHTML(i)}_toTex(i){var s=this.object.toTex(i);return o(this.object)&&(s="\\left(' + object + '\\right)"),s+this.index.toTex(i)}toJSON(){return{mathjs:Dr,object:this.object,index:this.index}}static fromJSON(i){return new r(i.object,i.index)}}return(0,ue.Z)(r,"name",Dr),r},{isClass:!0,isNode:!0}),Sr="AssignmentNode",oa=(0,W.d5)(Sr,["subset","?matrix","Node"],v=>{var{subset:f,matrix:p,Node:m}=v,o=Zr({subset:f}),r=function ia(v){var{subset:f,matrix:p}=v;return function(o,r,t){try{if(Array.isArray(o))return p(o).subset(r,t).valueOf().forEach((s,n)=>{o[n]=s}),o;if(o&&"function"==typeof o.subset)return o.subset(r,t);if("string"==typeof o)return f(o,r,t);if("object"==typeof o){if(!r.isObjectProperty())throw TypeError("Cannot apply a numeric index as object property");return(0,fe.nI)(o,r.getObjectProperty(),t),o}throw new TypeError("Cannot apply index: unsupported type of object")}catch(s){throw Te(s)}}}({subset:f,matrix:p});function t(s,n,l){n||(n="keep");var g=pe(s,n,l),x=pe(s.value,n,l);return"all"===n||null!==x&&x<=g}class i extends m{constructor(n,l,g){if(super(),this.object=n,this.index=g?l:null,this.value=g||l,!(0,h.FG)(n)&&!(0,h.Yz)(n))throw new TypeError('SymbolNode or AccessorNode expected as "object"');if((0,h.FG)(n)&&"end"===n.name)throw new Error('Cannot assign to symbol "end"');if(this.index&&!(0,h.Cl)(this.index))throw new TypeError('IndexNode expected as "index"');if(!(0,h.UG)(this.value))throw new TypeError('Node expected as "value"')}get name(){return this.index?this.index.isObjectProperty()?this.index.getObjectProperty():"":this.object.name||""}get type(){return Sr}get isAssignmentNode(){return!0}_compile(n,l){var g=this.object._compile(n,l),x=this.index?this.index._compile(n,l):null,C=this.value._compile(n,l),A=this.object.name;if(this.index){if(this.index.isObjectProperty()){var U=this.index.getObjectProperty();return function(S,d,w){var N=g(S,d,w),T=C(S,d,w);return(0,fe.nI)(N,U,T),T}}if((0,h.FG)(this.object))return function(S,d,w){var N=g(S,d,w),T=C(S,d,w),j=x(S,d,N);return S.set(A,r(N,j,T)),T};var I=this.object.object._compile(n,l);if(this.object.index.isObjectProperty()){var G=this.object.index.getObjectProperty();return function(S,d,w){var N=I(S,d,w),T=(0,fe.YF)(N,G),j=x(S,d,T),$=C(S,d,w);return(0,fe.nI)(N,G,r(T,j,$)),$}}var se=this.object.index._compile(n,l);return function(S,d,w){var N=I(S,d,w),T=se(S,d,N),j=o(N,T),$=x(S,d,j),M=C(S,d,w);return r(N,T,r(j,$,M)),M}}if(!(0,h.FG)(this.object))throw new TypeError("SymbolNode expected as object");return function(S,d,w){var N=C(S,d,w);return S.set(A,N),N}}forEach(n){n(this.object,"object",this),this.index&&n(this.index,"index",this),n(this.value,"value",this)}map(n){var l=this._ifNode(n(this.object,"object",this)),g=this.index?this._ifNode(n(this.index,"index",this)):null,x=this._ifNode(n(this.value,"value",this));return new i(l,g,x)}clone(){return new i(this.object,this.index,this.value)}_toString(n){var l=this.object.toString(n),g=this.index?this.index.toString(n):"",x=this.value.toString(n);return t(this,n&&n.parenthesis,n&&n.implicit)&&(x="("+x+")"),l+g+" = "+x}toJSON(){return{mathjs:Sr,object:this.object,index:this.index,value:this.value}}static fromJSON(n){return new i(n.object,n.index,n.value)}toHTML(n){var l=this.object.toHTML(n),g=this.index?this.index.toHTML(n):"",x=this.value.toHTML(n);return t(this,n&&n.parenthesis,n&&n.implicit)&&(x='<span class="math-paranthesis math-round-parenthesis">(</span>'+x+'<span class="math-paranthesis math-round-parenthesis">)</span>'),l+g+'<span class="math-operator math-assignment-operator math-variable-assignment-operator math-binary-operator">=</span>'+x}_toTex(n){var l=this.object.toTex(n),g=this.index?this.index.toTex(n):"",x=this.value.toTex(n);return t(this,n&&n.parenthesis,n&&n.implicit)&&(x="\\left(".concat(x,"\\right)")),l+g+":="+x}}return(0,ue.Z)(i,"name",Sr),i},{isClass:!0,isNode:!0}),ua=(0,W.d5)("SymbolNode",["math","?Unit","Node"],v=>{var{math:f,Unit:p,Node:m}=v;function o(t){return!!p&&p.isValuelessUnit(t)}class r extends m{constructor(i){if(super(),"string"!=typeof i)throw new TypeError('String expected for parameter "name"');this.name=i}get type(){return"SymbolNode"}get isSymbolNode(){return!0}_compile(i,s){var n=this.name;if(!0===s[n])return function(g,x,C){return(0,fe.YF)(x,n)};if(n in i)return function(g,x,C){return g.has(n)?g.get(n):(0,fe.YF)(i,n)};var l=o(n);return function(g,x,C){return g.has(n)?g.get(n):l?new p(null,n):r.onUndefinedSymbol(n)}}forEach(i){}map(i){return this.clone()}static onUndefinedSymbol(i){throw new Error("Undefined symbol "+i)}clone(){return new r(this.name)}_toString(i){return this.name}toHTML(i){var s=(0,de.YU)(this.name);return"true"===s||"false"===s?'<span class="math-symbol math-boolean">'+s+"</span>":"i"===s?'<span class="math-symbol math-imaginary-symbol">'+s+"</span>":"Infinity"===s?'<span class="math-symbol math-infinity-symbol">'+s+"</span>":"NaN"===s?'<span class="math-symbol math-nan-symbol">'+s+"</span>":"null"===s?'<span class="math-symbol math-null-symbol">'+s+"</span>":"undefined"===s?'<span class="math-symbol math-undefined-symbol">'+s+"</span>":'<span class="math-symbol">'+s+"</span>"}toJSON(){return{mathjs:"SymbolNode",name:this.name}}static fromJSON(i){return new r(i.name)}_toTex(i){var s=!1;typeof f[this.name]>"u"&&o(this.name)&&(s=!0);var n=_r(this.name,s);return"\\"===n[0]?n:" "+n}}return r},{isClass:!0,isNode:!0});function ur(v){for(var f=arguments.length,p=new Array(f>1?f-1:0),m=1;m<f;m++)p[m-1]=arguments[m];return"function"==typeof v.createSubScope?(0,xe.f0)(v.createSubScope(),...p):(0,xe.f0)((0,xe.dg)(),v,...p)}var Or="FunctionNode",pa=(0,W.d5)(Or,["math","Node","SymbolNode"],v=>{var{math:f,Node:p,SymbolNode:m}=v,o=i=>(0,de.WU)(i,{truncate:78});function r(i,s,n){for(var C,l="",g=/\$(?:\{([a-z_][a-z_0-9]*)(?:\[([0-9]+)\])?\}|\$)/gi,x=0;null!==(C=g.exec(i));)if(l+=i.substring(x,C.index),x=C.index,"$$"===C[0])l+="$",x++;else{x+=C[0].length;var A=s[C[1]];if(!A)throw new ReferenceError("Template: Property "+C[1]+" does not exist.");if(void 0===C[2])switch(typeof A){case"string":l+=A;break;case"object":if((0,h.UG)(A))l+=A.toTex(n);else{if(!Array.isArray(A))throw new TypeError("Template: "+C[1]+" has to be a Node, String or array of Nodes");l+=A.map(function(U,I){if((0,h.UG)(U))return U.toTex(n);throw new TypeError("Template: "+C[1]+"["+I+"] is not a Node.")}).join(",")}break;default:throw new TypeError("Template: "+C[1]+" has to be a Node, String or array of Nodes")}else{if(!(0,h.UG)(A[C[2]]&&A[C[2]]))throw new TypeError("Template: "+C[1]+"["+C[2]+"] is not a Node.");l+=A[C[2]].toTex(n)}}return l+i.slice(x)}class t extends p{constructor(s,n){if(super(),"string"==typeof s&&(s=new m(s)),!(0,h.UG)(s))throw new TypeError('Node expected as parameter "fn"');if(!Array.isArray(n)||!n.every(h.UG))throw new TypeError('Array containing Nodes expected for parameter "args"');this.fn=s,this.args=n||[]}get name(){return this.fn.name||""}get type(){return Or}get isFunctionNode(){return!0}_compile(s,n){var l=this.args.map(N=>N._compile(s,n));if(!(0,h.FG)(this.fn)){if((0,h.Yz)(this.fn)&&(0,h.Cl)(this.fn.index)&&this.fn.index.isObjectProperty()){var G=this.fn.object._compile(s,n),se=this.fn.index.getObjectProperty(),y=this.args;return function(T,j,$){var M=G(T,j,$),k=(0,fe.rG)(M,se);if(null!=k&&k.rawArgs)return k(y,s,ur(T,j),T);var B=l.map(ae=>ae(T,j,$));return k.apply(M,B)}}var S=this.fn.toString(),d=this.fn._compile(s,n),w=this.args;return function(T,j,$){var M=d(T,j,$);if("function"!=typeof M)throw new TypeError("Expression '".concat(S,"' did not evaluate to a function; value is:")+"\n  ".concat(o(M)));if(M.rawArgs)return M(w,s,ur(T,j),T);var k=l.map(B=>B(T,j,$));return M.apply(M,k)}}var g=this.fn.name;if(n[g]){var I=this.args;return function(T,j,$){var M=(0,fe.YF)(j,g);if("function"!=typeof M)throw new TypeError("Argument '".concat(g,"' was not a function; received: ").concat(o(M)));if(M.rawArgs)return M(I,s,ur(T,j),T);var k=l.map(B=>B(T,j,$));return M.apply(M,k)}}var x=g in s?(0,fe.YF)(s,g):void 0,A=N=>{var T;if(N.has(g))T=N.get(g);else{if(!(g in s))return t.onUndefinedFunction(g);T=(0,fe.YF)(s,g)}if("function"==typeof T)return T;throw new TypeError("'".concat(g,"' is not a function; its value is:\n  ").concat(o(T)))};if("function"==typeof x&&!0===x.rawArgs){var U=this.args;return function(T,j,$){return A(T)(U,s,ur(T,j),T)}}switch(l.length){case 0:return function(T,j,$){return A(T)()};case 1:return function(T,j,$){return A(T)((0,l[0])(T,j,$))};case 2:return function(T,j,$){var M=A(T),B=l[1];return M((0,l[0])(T,j,$),B(T,j,$))};default:return function(T,j,$){return A(T)(...l.map(B=>B(T,j,$)))}}}forEach(s){s(this.fn,"fn",this);for(var n=0;n<this.args.length;n++)s(this.args[n],"args["+n+"]",this)}map(s){for(var n=this._ifNode(s(this.fn,"fn",this)),l=[],g=0;g<this.args.length;g++)l[g]=this._ifNode(s(this.args[g],"args["+g+"]",this));return new t(n,l)}clone(){return new t(this.fn,this.args.slice(0))}toString(s){var n,l=this.fn.toString(s);return s&&"object"==typeof s.handler&&(0,J.nr)(s.handler,l)&&(n=s.handler[l](this,s)),typeof n<"u"?n:super.toString(s)}_toString(s){var n=this.args.map(function(g){return g.toString(s)});return((0,h.l7)(this.fn)?"("+this.fn.toString(s)+")":this.fn.toString(s))+"("+n.join(", ")+")"}toJSON(){return{mathjs:Or,fn:this.fn,args:this.args}}toHTML(s){var n=this.args.map(function(l){return l.toHTML(s)});return'<span class="math-function">'+(0,de.YU)(this.fn)+'</span><span class="math-paranthesis math-round-parenthesis">(</span>'+n.join('<span class="math-separator">,</span>')+'<span class="math-paranthesis math-round-parenthesis">)</span>'}toTex(s){var n;return s&&"object"==typeof s.handler&&(0,J.nr)(s.handler,this.name)&&(n=s.handler[this.name](this,s)),typeof n<"u"?n:super.toTex(s)}_toTex(s){var l,g,n=this.args.map(function(x){return x.toTex(s)});switch(Gr[this.name]&&(l=Gr[this.name]),f[this.name]&&("function"==typeof f[this.name].toTex||"object"==typeof f[this.name].toTex||"string"==typeof f[this.name].toTex)&&(l=f[this.name].toTex),typeof l){case"function":g=l(this,s);break;case"string":g=r(l,this,s);break;case"object":switch(typeof l[n.length]){case"function":g=l[n.length](this,s);break;case"string":g=r(l[n.length],this,s)}}return typeof g<"u"?g:r("\\mathrm{${name}}\\left(${args}\\right)",this,s)}getIdentifier(){return this.type+":"+this.name}}return(0,ue.Z)(t,"name",Or),(0,ue.Z)(t,"onUndefinedFunction",function(i){throw new Error("Undefined function "+i)}),(0,ue.Z)(t,"fromJSON",function(i){return new t(i.fn,i.args)}),t},{isClass:!0,isNode:!0}),Tr=ee(19267),da=(0,W.d5)("parse",["typed","numeric","config","AccessorNode","ArrayNode","AssignmentNode","BlockNode","ConditionalNode","ConstantNode","FunctionAssignmentNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","ParenthesisNode","RangeNode","RelationalNode","SymbolNode"],v=>{var{typed:f,numeric:p,config:m,AccessorNode:o,ArrayNode:r,AssignmentNode:t,BlockNode:i,ConditionalNode:s,ConstantNode:n,FunctionAssignmentNode:l,FunctionNode:g,IndexNode:x,ObjectNode:C,OperatorNode:A,ParenthesisNode:U,RangeNode:I,RelationalNode:G,SymbolNode:se}=v,y=f("parse",{string:function(u){return _(u,{})},"Array | Matrix":function(u){return S(u,{})},"string, Object":function(u,b){return _(u,void 0!==b.nodes?b.nodes:{})},"Array | Matrix, Object":S});function S(e){var u=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},b=void 0!==u.nodes?u.nodes:{};return(0,Tr.Fh)(e,function(F){if("string"!=typeof F)throw new TypeError("String expected");return _(F,b)})}var d={NULL:0,DELIMITER:1,NUMBER:2,SYMBOL:3,UNKNOWN:4},w={",":!0,"(":!0,")":!0,"[":!0,"]":!0,"{":!0,"}":!0,'"':!0,"'":!0,";":!0,"+":!0,"-":!0,"*":!0,".*":!0,"/":!0,"./":!0,"%":!0,"^":!0,".^":!0,"~":!0,"!":!0,"&":!0,"|":!0,"^|":!0,"=":!0,":":!0,"?":!0,"==":!0,"!=":!0,"<":!0,">":!0,"<=":!0,">=":!0,"<<":!0,">>":!0,">>>":!0},N={mod:!0,to:!0,in:!0,and:!0,xor:!0,or:!0,not:!0},T={true:!0,false:!1,null:null,undefined:void 0},j=["NaN","Infinity"];function M(e,u){return e.expression.substr(e.index,u)}function k(e){return M(e,1)}function B(e){e.index++}function ae(e){return e.expression.charAt(e.index-1)}function D(e){return e.expression.charAt(e.index+1)}function c(e){for(e.tokenType=d.NULL,e.token="",e.comment="";;){if("#"===k(e))for(;"\n"!==k(e)&&""!==k(e);)e.comment+=k(e),B(e);if(!y.isWhitespace(k(e),e.nestingLevel))break;B(e)}if(""!==k(e)){if("\n"===k(e)&&!e.nestingLevel)return e.tokenType=d.DELIMITER,e.token=k(e),void B(e);var u=k(e),b=M(e,2),F=M(e,3);if(3===F.length&&w[F])return e.tokenType=d.DELIMITER,e.token=F,B(e),B(e),void B(e);if(2===b.length&&w[b])return e.tokenType=d.DELIMITER,e.token=b,B(e),void B(e);if(w[u])return e.tokenType=d.DELIMITER,e.token=u,void B(e);if(y.isDigitDot(u)){e.tokenType=d.NUMBER;var te=M(e,2);if("0b"===te||"0o"===te||"0x"===te){for(e.token+=k(e),B(e),e.token+=k(e),B(e);y.isHexDigit(k(e));)e.token+=k(e),B(e);if("."===k(e))for(e.token+=".",B(e);y.isHexDigit(k(e));)e.token+=k(e),B(e);else if("i"===k(e))for(e.token+="i",B(e);y.isDigit(k(e));)e.token+=k(e),B(e);return}if("."===k(e)){if(e.token+=k(e),B(e),!y.isDigit(k(e)))return void(e.tokenType=d.DELIMITER)}else{for(;y.isDigit(k(e));)e.token+=k(e),B(e);y.isDecimalMark(k(e),D(e))&&(e.token+=k(e),B(e))}for(;y.isDigit(k(e));)e.token+=k(e),B(e);if("E"===k(e)||"e"===k(e))if(y.isDigit(D(e))||"-"===D(e)||"+"===D(e)){if(e.token+=k(e),B(e),("+"===k(e)||"-"===k(e))&&(e.token+=k(e),B(e)),!y.isDigit(k(e)))throw ve(e,'Digit expected, got "'+k(e)+'"');for(;y.isDigit(k(e));)e.token+=k(e),B(e);if(y.isDecimalMark(k(e),D(e)))throw ve(e,'Digit expected, got "'+k(e)+'"')}else if("."===D(e))throw B(e),ve(e,'Digit expected, got "'+k(e)+'"')}else{if(!y.isAlpha(k(e),ae(e),D(e))){for(e.tokenType=d.UNKNOWN;""!==k(e);)e.token+=k(e),B(e);throw ve(e,'Syntax error in part "'+e.token+'"')}for(;y.isAlpha(k(e),ae(e),D(e))||y.isDigit(k(e));)e.token+=k(e),B(e);e.tokenType=(0,J.nr)(N,e.token)?d.DELIMITER:d.SYMBOL}}else e.tokenType=d.DELIMITER}function z(e){do{c(e)}while("\n"===e.token)}function H(e){e.nestingLevel++}function V(e){e.nestingLevel--}function _(e,u){var b=function $(){return{extraNodes:{},expression:"",comment:"",index:0,token:"",tokenType:d.NULL,nestingLevel:0,conditionalLevel:null}}();(0,Oe.Z)(b,{expression:e,extraNodes:u}),c(b);var F=function Y(e){var u,b=[];for(""!==e.token&&"\n"!==e.token&&";"!==e.token&&(u=q(e),e.comment&&(u.comment=e.comment));"\n"===e.token||";"===e.token;)0===b.length&&u&&b.push({node:u,visible:";"!==e.token}),c(e),"\n"!==e.token&&";"!==e.token&&""!==e.token&&(u=q(e),e.comment&&(u.comment=e.comment),b.push({node:u,visible:";"!==e.token}));return b.length>0?new i(b):(u||(u=new n(void 0),e.comment&&(u.comment=e.comment)),u)}(b);if(""!==b.token)throw b.tokenType===d.DELIMITER?er(b,"Unexpected operator "+b.token):ve(b,'Unexpected part "'+b.token+'"');return F}function q(e){var u,b,F,te,le=function R(e){for(var u=function ne(e){for(var u=ce(e);"or"===e.token;)z(e),u=new A("or","or",[u,ce(e)]);return u}(e);"?"===e.token;){var b=e.conditionalLevel;e.conditionalLevel=e.nestingLevel,z(e);var F=u,te=q(e);if(":"!==e.token)throw ve(e,"False part of conditional expression expected");e.conditionalLevel=null,z(e);var le=q(e);u=new s(F,te,le),e.conditionalLevel=b}return u}(e);if("="===e.token){if((0,h.FG)(le))return u=le.name,z(e),F=q(e),new t(new se(u),F);if((0,h.Yz)(le))return z(e),F=q(e),new t(le.object,le.index,F);if((0,h.VO)(le)&&(0,h.FG)(le.fn)&&(te=!0,b=[],u=le.name,le.args.forEach(function(Pe,Hc){(0,h.FG)(Pe)?b[Hc]=Pe.name:te=!1}),te))return z(e),F=q(e),new l(u,b,F);throw ve(e,"Invalid left hand side of assignment operator =")}return le}function ce(e){for(var u=oe(e);"xor"===e.token;)z(e),u=new A("xor","xor",[u,oe(e)]);return u}function oe(e){for(var u=ye(e);"and"===e.token;)z(e),u=new A("and","and",[u,ye(e)]);return u}function ye(e){for(var u=be(e);"|"===e.token;)z(e),u=new A("|","bitOr",[u,be(e)]);return u}function be(e){for(var u=K(e);"^|"===e.token;)z(e),u=new A("^|","bitXor",[u,K(e)]);return u}function K(e){for(var u=me(e);"&"===e.token;)z(e),u=new A("&","bitAnd",[u,me(e)]);return u}function me(e){for(var u=[re(e)],b=[],F={"==":"equal","!=":"unequal","<":"smaller",">":"larger","<=":"smallerEq",">=":"largerEq"};(0,J.nr)(F,e.token);)b.push({name:e.token,fn:F[e.token]}),z(e),u.push(re(e));return 1===u.length?u[0]:2===u.length?new A(b[0].name,b[0].fn,u):new G(b.map(le=>le.fn),u)}function re(e){var u,b,F,te;u=Ie(e);for(var le={"<<":"leftShift",">>":"rightArithShift",">>>":"rightLogShift"};(0,J.nr)(le,e.token);)F=le[b=e.token],z(e),te=[u,Ie(e)],u=new A(b,F,te);return u}function Ie(e){var u,b,F,te;u=je(e);for(var le={to:"to",in:"to"};(0,J.nr)(le,e.token);)F=le[b=e.token],z(e),"in"===b&&""===e.token?u=new A("*","multiply",[u,new se("in")],!0):(te=[u,je(e)],u=new A(b,F,te));return u}function je(e){var u,b=[];if(u=":"===e.token?new n(1):Ae(e),":"===e.token&&e.conditionalLevel!==e.nestingLevel){for(b.push(u);":"===e.token&&b.length<3;)z(e),b.push(")"===e.token||"]"===e.token||","===e.token||""===e.token?new se("end"):Ae(e));u=3===b.length?new I(b[0],b[2],b[1]):new I(b[0],b[1])}return u}function Ae(e){var u,b,F,te;u=Ze(e);for(var le={"+":"add","-":"subtract"};(0,J.nr)(le,e.token);){F=le[b=e.token],z(e);var Pe=Ze(e);te=Pe.isPercentage?[u,new A("*","multiply",[u,Pe])]:[u,Pe],u=new A(b,F,te)}return u}function Ze(e){var u,b,F,te;b=u=Re(e);for(var le={"*":"multiply",".*":"dotMultiply","/":"divide","./":"dotDivide"};(0,J.nr)(le,e.token);)te=le[F=e.token],z(e),b=Re(e),u=new A(F,te,[u,b]);return u}function Re(e){var u,b;for(b=u=mr(e);e.tokenType===d.SYMBOL||"in"===e.token&&(0,h.nu)(u)||e.tokenType===d.NUMBER&&!(0,h.nu)(b)&&(!(0,h.bV)(b)||"!"===b.op)||"("===e.token;)b=mr(e),u=new A("*","multiply",[u,b],!0);return u}function mr(e){for(var u=E(e),b=u,F=[];"/"===e.token&&(0,h.ZX)(b);){if(F.push((0,Oe.Z)({},e)),z(e),e.tokenType!==d.NUMBER){(0,Oe.Z)(e,F.pop());break}if(F.push((0,Oe.Z)({},e)),z(e),e.tokenType!==d.SYMBOL&&"("!==e.token){F.pop(),(0,Oe.Z)(e,F.pop());break}(0,Oe.Z)(e,F.pop()),F.pop(),b=E(e),u=new A("/","divide",[u,b])}return u}function E(e){var u,b,F,te;u=O(e);for(var le={"%":"mod",mod:"mod"};(0,J.nr)(le,e.token);)F=le[b=e.token],z(e),"%"===b&&e.tokenType===d.DELIMITER&&"("!==e.token?u=new A("/","divide",[u,new n(100)],!1,!0):(te=[u,O(e)],u=new A(b,F,te));return u}function O(e){var u,b,F,te={"-":"unaryMinus","+":"unaryPlus","~":"bitNot",not:"not"};return(0,J.nr)(te,e.token)?(F=te[e.token],u=e.token,z(e),b=[O(e)],new A(u,F,b)):function P(e){var u,b,F,te;return u=function Q(e){var u,b,F;u=function Z(e){var u=[];if(e.tokenType===d.SYMBOL&&(0,J.nr)(e.extraNodes,e.token)){var b=e.extraNodes[e.token];if(c(e),"("===e.token){if(u=[],H(e),c(e),")"!==e.token)for(u.push(q(e));","===e.token;)c(e),u.push(q(e));if(")"!==e.token)throw ve(e,"Parenthesis ) expected");V(e),c(e)}return new b(u)}return function X(e){var b;return e.tokenType===d.SYMBOL||e.tokenType===d.DELIMITER&&e.token in N?(b=e.token,c(e),L(e,(0,J.nr)(T,b)?new n(T[b]):-1!==j.indexOf(b)?new n(p(b,"number")):new se(b))):function he(e){var b;return'"'===e.token?(b=Ne(e),L(e,new n(b))):function Se(e){var b;return"'"===e.token?(b=Me(e),L(e,new n(b))):function qe(e){var u,b,F,te;if("["===e.token){if(H(e),c(e),"]"!==e.token){var le=Ue(e);if(";"===e.token){for(F=1,b=[le];";"===e.token;)c(e),b[F]=Ue(e),F++;if("]"!==e.token)throw ve(e,"End of matrix ] expected");V(e),c(e),te=b[0].items.length;for(var Pe=1;Pe<F;Pe++)if(b[Pe].items.length!==te)throw er(e,"Column dimensions mismatch ("+b[Pe].items.length+" !== "+te+")");u=new r(b)}else{if("]"!==e.token)throw ve(e,"End of matrix ] expected");V(e),c(e),u=le}}else V(e),c(e),u=new r([]);return L(e,u)}return function or(e){if("{"===e.token){H(e);var u,b={};do{if(c(e),"}"!==e.token){if('"'===e.token)u=Ne(e);else if("'"===e.token)u=Me(e);else{if(!(e.tokenType===d.SYMBOL||e.tokenType===d.DELIMITER&&e.token in N))throw ve(e,"Symbol or string expected as object key");u=e.token,c(e)}if(":"!==e.token)throw ve(e,"Colon : expected after object key");c(e),b[u]=q(e)}}while(","===e.token);if("}"!==e.token)throw ve(e,"Comma , or bracket } expected after object value");V(e),c(e);var F=new C(b);return L(e,F)}return function pr(e){var u;return e.tokenType===d.NUMBER?(u=e.token,c(e),new n(p(u,m.number))):function lr(e){var u;if("("===e.token){if(H(e),c(e),u=q(e),")"!==e.token)throw ve(e,"Parenthesis ) expected");return V(e),c(e),L(e,u=new U(u))}return function Ke(e){throw ve(e,""===e.token?"Unexpected end of expression":"Value expected")}(e)}(e)}(e)}(e)}(e)}(e)}(e)}(e)}(e);for(var le={"!":"factorial","'":"ctranspose"};(0,J.nr)(le,e.token);)F=le[b=e.token],c(e),u=L(e,u=new A(b,F,[u]));return u}(e),("^"===e.token||".^"===e.token)&&(F="^"===(b=e.token)?"pow":"dotPow",z(e),te=[u,O(e)],u=new A(b,F,te)),u}(e)}function L(e,u,b){for(var F;!("("!==e.token&&"["!==e.token&&"."!==e.token||b&&-1===b.indexOf(e.token));)if(F=[],"("===e.token){if(!(0,h.FG)(u)&&!(0,h.Yz)(u))return u;if(H(e),c(e),")"!==e.token)for(F.push(q(e));","===e.token;)c(e),F.push(q(e));if(")"!==e.token)throw ve(e,"Parenthesis ) expected");V(e),c(e),u=new g(u,F)}else if("["===e.token){if(H(e),c(e),"]"!==e.token)for(F.push(q(e));","===e.token;)c(e),F.push(q(e));if("]"!==e.token)throw ve(e,"Parenthesis ] expected");V(e),c(e),u=new o(u,new x(F))}else{if(c(e),e.tokenType!==d.SYMBOL)throw ve(e,"Property name expected after dot");F.push(new n(e.token)),c(e),u=new o(u,new x(F,!0))}return u}function Ne(e){for(var u="";""!==k(e)&&'"'!==k(e);)"\\"===k(e)&&(u+=k(e),B(e)),u+=k(e),B(e);if(c(e),'"'!==e.token)throw ve(e,'End of string " expected');return c(e),JSON.parse('"'+u+'"')}function Me(e){for(var u="";""!==k(e)&&"'"!==k(e);)"\\"===k(e)&&(u+=k(e),B(e)),u+=k(e),B(e);if(c(e),"'"!==e.token)throw ve(e,"End of string ' expected");return c(e),JSON.parse('"'+u+'"')}function Ue(e){for(var u=[q(e)],b=1;","===e.token;)c(e),u[b]=q(e),b++;return new r(u)}function ze(e){return e.index-e.token.length+1}function ve(e,u){var b=ze(e),F=new SyntaxError(u+" (char "+b+")");return F.char=b,F}function er(e,u){var b=ze(e),F=new SyntaxError(u+" (char "+b+")");return F.char=b,F}return y.isAlpha=function(u,b,F){return y.isValidLatinOrGreek(u)||y.isValidMathSymbol(u,F)||y.isValidMathSymbol(b,u)},y.isValidLatinOrGreek=function(u){return/^[a-zA-Z_$\u00C0-\u02AF\u0370-\u03FF\u2100-\u214F]$/.test(u)},y.isValidMathSymbol=function(u,b){return/^[\uD835]$/.test(u)&&/^[\uDC00-\uDFFF]$/.test(b)&&/^[^\uDC55\uDC9D\uDCA0\uDCA1\uDCA3\uDCA4\uDCA7\uDCA8\uDCAD\uDCBA\uDCBC\uDCC4\uDD06\uDD0B\uDD0C\uDD15\uDD1D\uDD3A\uDD3F\uDD45\uDD47-\uDD49\uDD51\uDEA6\uDEA7\uDFCC\uDFCD]$/.test(b)},y.isWhitespace=function(u,b){return" "===u||"\t"===u||"\n"===u&&b>0},y.isDecimalMark=function(u,b){return"."===u&&"/"!==b&&"*"!==b&&"^"!==b},y.isDigitDot=function(u){return u>="0"&&u<="9"||"."===u},y.isDigit=function(u){return u>="0"&&u<="9"},y.isHexDigit=function(u){return u>="0"&&u<="9"||u>="a"&&u<="f"||u>="A"&&u<="F"},f.addConversion({from:"string",to:"Node",convert:y}),y}),ga=(0,W.d5)("resolve",["typed","parse","ConstantNode","FunctionNode","OperatorNode","ParenthesisNode"],v=>{var{typed:f,parse:p,ConstantNode:m,FunctionNode:o,OperatorNode:r,ParenthesisNode:t}=v;function i(s,n){var l=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Set;if(!n)return s;if((0,h.FG)(s)){if(l.has(s.name)){var g=Array.from(l).join(", ");throw new ReferenceError("recursive loop of variable definitions among {".concat(g,"}"))}var x=n.get(s.name);if((0,h.UG)(x)){var C=new Set(l);return C.add(s.name),i(x,n,C)}return"number"==typeof x?p(String(x)):void 0!==x?new m(x):s}if((0,h.bV)(s)){var A=s.args.map(function(I){return i(I,n,l)});return new r(s.op,s.fn,A,s.implicit)}if((0,h.Ig)(s))return new t(i(s.content,n,l));if((0,h.VO)(s)){var U=s.args.map(function(I){return i(I,n,l)});return new o(s.name,U)}return s.map(I=>i(I,n,l))}return f("resolve",{Node:i,"Node, Map | null | undefined":i,"Node, Object":(s,n)=>i(s,(0,xe.df)(n)),"Array | Matrix":f.referToSelf(s=>n=>n.map(l=>s(l))),"Array | Matrix, null | undefined":f.referToSelf(s=>n=>n.map(l=>s(l))),"Array, Object":f.referTo("Array,Map",s=>(n,l)=>s(n,(0,xe.df)(l))),"Matrix, Object":f.referTo("Matrix,Map",s=>(n,l)=>s(n,(0,xe.df)(l))),"Array | Matrix, Map":f.referToSelf(s=>(n,l)=>n.map(g=>s(g,l)))})});function Vr(v,f){var p=Object.keys(v);if(Object.getOwnPropertySymbols){var m=Object.getOwnPropertySymbols(v);f&&(m=m.filter(function(o){return Object.getOwnPropertyDescriptor(v,o).enumerable})),p.push.apply(p,m)}return p}function Fr(v){for(var f=1;f<arguments.length;f++){var p=null!=arguments[f]?arguments[f]:{};f%2?Vr(Object(p),!0).forEach(function(m){(0,ue.Z)(v,m,p[m])}):Object.getOwnPropertyDescriptors?Object.defineProperties(v,Object.getOwnPropertyDescriptors(p)):Vr(Object(p)).forEach(function(m){Object.defineProperty(v,m,Object.getOwnPropertyDescriptor(p,m))})}return v}var Rr=(0,W.d5)("simplifyUtil",["FunctionNode","OperatorNode","SymbolNode"],v=>{var{FunctionNode:f,OperatorNode:p,SymbolNode:m}=v,o=!0,r=!1,t="defaultF",i={add:{trivial:o,total:o,commutative:o,associative:o},unaryPlus:{trivial:o,total:o,commutative:o,associative:o},subtract:{trivial:r,total:o,commutative:r,associative:r},multiply:{trivial:o,total:o,commutative:o,associative:o},divide:{trivial:r,total:o,commutative:r,associative:r},paren:{trivial:o,total:o,commutative:o,associative:r},defaultF:{trivial:r,total:o,commutative:r,associative:r}};function l(y,S){var d=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i,w=t;if("string"==typeof y?w=y:(0,h.bV)(y)?w=y.fn.toString():(0,h.VO)(y)?w=y.name:(0,h.Ig)(y)&&(w="paren"),(0,J.nr)(d,w)){var N=d[w];if((0,J.nr)(N,S))return N[S];if((0,J.nr)(i,w))return i[w][S]}if((0,J.nr)(d,t)){var T=d[t];return(0,J.nr)(T,S)?T[S]:i[t][S]}if((0,J.nr)(i,w)){var j=i[w];if((0,J.nr)(j,S))return j[S]}return i[t][S]}function x(y){return l(y,"associative",arguments.length>1&&void 0!==arguments[1]?arguments[1]:i)}function U(y,S){var d,w=[];return x(y,S)?(d=y.op,function T(j){for(var $=0;$<j.args.length;$++){var M=j.args[$];(0,h.bV)(M)&&d===M.op?T(M):w.push(M)}}(y),w):y.args}function se(y){return(0,h.bV)(y)?function(S){try{return new p(y.op,y.fn,S,y.implicit)}catch(d){return console.error(d),[]}}:function(S){return new f(new m(y.name),S)}}return{createMakeNodeFunction:se,hasProperty:l,isCommutative:function g(y){return l(y,"commutative",arguments.length>1&&void 0!==arguments[1]?arguments[1]:i)},isAssociative:x,mergeContext:function C(y,S){var d=Fr({},y);for(var w in S)d[w]=(0,J.nr)(y,w)?Fr(Fr({},S[w]),y[w]):S[w];return d},flatten:function A(y,S){if(!y.args||0===y.args.length)return y;y.args=U(y,S);for(var d=0;d<y.args.length;d++)A(y.args[d],S)},allChildren:U,unflattenr:function I(y,S){if(y.args&&0!==y.args.length){for(var d=se(y),w=y.args.length,N=0;N<w;N++)I(y.args[N],S);if(w>2&&x(y,S)){for(var T=y.args.pop();y.args.length>0;)T=d([y.args.pop(),T]);y.args=T.args}}},unflattenl:function G(y,S){if(y.args&&0!==y.args.length){for(var d=se(y),w=y.args.length,N=0;N<w;N++)G(y.args[N],S);if(w>2&&x(y,S)){for(var T=y.args.shift();y.args.length>0;)T=d([T,y.args.shift()]);y.args=T.args}}},defaultContext:i,realContext:{divide:{total:r},log:{total:r}},positiveContext:{subtract:{total:r},abs:{trivial:o},log:{total:o}}}}),Qr=ee(85967),Na=(0,W.d5)("simplifyConstant",["typed","config","mathWithTransform","matrix","?fraction","?bignumber","AccessorNode","ArrayNode","ConstantNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","SymbolNode"],v=>{var{typed:f,config:p,mathWithTransform:m,matrix:o,fraction:r,bignumber:t,AccessorNode:i,ArrayNode:s,ConstantNode:n,FunctionNode:l,IndexNode:g,ObjectNode:x,OperatorNode:C,SymbolNode:A}=v,{isCommutative:U,isAssociative:I,allChildren:G,createMakeNodeFunction:se}=Rr({FunctionNode:l,OperatorNode:C,SymbolNode:A}),y=f("simplifyConstant",{Node:D=>N(ae(D,{})),"Node, Object":function(c,z){return N(ae(c,z))}});function S(D){return(0,h.yQ)(D)?D.valueOf():D instanceof Array?D.map(S):(0,h.SW)(D)?o(S(D.valueOf())):D}function d(D,c,z){try{return m[D].apply(null,c)}catch{return c=c.map(S),j(m[D].apply(null,c),z)}}var w=f({Fraction:function M(D){var c,z=D.s*D.n;return c=z<0?new C("-","unaryMinus",[new n(-z)]):new n(z),1===D.d?c:new C("/","divide",[c,new n(D.d)])},number:function(c){return c<0?$(new n(-c)):new n(c)},BigNumber:function(c){return c<0?$(new n(-c)):new n(c)},Complex:function(c){throw new Error("Cannot convert Complex number to Node")},string:function(c){return new n(c)},Matrix:function(c){return new s(c.valueOf().map(z=>w(z)))}});function N(D){return(0,h.UG)(D)?D:w(D)}function T(D,c){if(c&&!1!==c.exactFractions&&isFinite(D)&&r){var H=r(D),V=c&&"number"==typeof c.fractionsLimit?c.fractionsLimit:1/0;if(H.valueOf()===D&&H.n<V&&H.d<V)return H}return D}var j=f({"string, Object":function(c,z){return"BigNumber"===p.number?(void 0===t&&(0,Qr.R3)(),t(c)):"Fraction"===p.number?(void 0===r&&(0,Qr.nG)(),r(c)):T(parseFloat(c),z)},"Fraction, Object":function(c,z){return c},"BigNumber, Object":function(c,z){return c},"number, Object":function(c,z){return T(c,z)},"Complex, Object":function(c,z){return 0!==c.im?c:T(c.re,z)},"Matrix, Object":function(c,z){return o(T(c.valueOf()))},"Array, Object":function(c,z){return c.map(T)}});function $(D){return new C("-","unaryMinus",[D])}function B(D,c,z,H){var V=c.shift(),_=c.reduce((Y,q)=>{if(!(0,h.UG)(q)){var R=Y.pop();if((0,h.UG)(R))return[R,q];try{return Y.push(d(D,[R,q],H)),Y}catch{Y.push(R)}}Y.push(N(Y.pop()));var ne=1===Y.length?Y[0]:z(Y);return[z([ne,N(q)])]},[V]);return 1===_.length?_[0]:z([_[0],w(_[1])])}function ae(D,c){switch(D.type){case"SymbolNode":return D;case"ConstantNode":switch(typeof D.value){case"number":return j(D.value,c);case"string":return D.value;default:if(!isNaN(D.value))return j(D.value,c)}return D;case"FunctionNode":if(m[D.name]&&m[D.name].rawArgs)return D;if(-1===["add","multiply"].indexOf(D.name)){var H=D.args.map(re=>ae(re,c));if(!H.some(h.UG))try{return d(D.name,H,c)}catch{}if("size"===D.name&&1===H.length&&(0,h.j0)(H[0])){for(var V=[],_=H[0];(0,h.j0)(_);)V.push(_.items.length),_=_.items[0];return o(V)}return new l(D.name,H.map(N))}case"OperatorNode":var q,R,Y=D.fn.toString(),ne=se(D);if((0,h.bV)(D)&&D.isUnary())q=[ae(D.args[0],c)],R=(0,h.UG)(q[0])?ne(q):d(Y,q,c);else if(I(D,c.context))if(q=(q=G(D,c.context)).map(re=>ae(re,c)),U(Y,c.context)){for(var ce=[],oe=[],ye=0;ye<q.length;ye++)(0,h.UG)(q[ye])?oe.push(q[ye]):ce.push(q[ye]);ce.length>1?(R=B(Y,ce,ne,c),oe.unshift(R),R=B(Y,oe,ne,c)):R=B(Y,q,ne,c)}else R=B(Y,q,ne,c);else R=B(Y,q=D.args.map(re=>ae(re,c)),ne,c);return R;case"ParenthesisNode":return ae(D.content,c);case"AccessorNode":return function k(D,c,z){if(!(0,h.Cl)(c))return new i(N(D),N(c));if((0,h.j0)(D)||(0,h.SW)(D)){for(var H=Array.from(c.dimensions);H.length>0;)if((0,h.nu)(H[0])&&"string"!=typeof H[0].value){var V=j(H.shift().value,z);(0,h.j0)(D)?D=D.items[V-1]:(D=D.valueOf()[V-1])instanceof Array&&(D=o(D))}else{if(!(H.length>1&&(0,h.nu)(H[1])&&"string"!=typeof H[1].value))break;var _=j(H[1].value,z),Y=[],q=(0,h.j0)(D)?D.items:D.valueOf();for(var R of q)if((0,h.j0)(R))Y.push(R.items[_-1]);else{if(!(0,h.SW)(D))break;Y.push(R[_-1])}if(Y.length!==q.length)break;D=(0,h.j0)(D)?new s(Y):o(Y),H.splice(1,1)}return H.length===c.dimensions.length?new i(N(D),c):H.length>0?(c=new g(H),new i(N(D),c)):D}if((0,h.Lr)(D)&&1===c.dimensions.length&&(0,h.nu)(c.dimensions[0])){var ne=c.dimensions[0].value;return ne in D.properties?D.properties[ne]:new n}return new i(N(D),c)}(ae(D.object,c),ae(D.index,c),c);case"ArrayNode":var be=D.items.map(re=>ae(re,c));return be.some(h.UG)?new s(be.map(N)):o(be);case"IndexNode":return new g(D.dimensions.map(re=>y(re,c)));case"ObjectNode":var K={};for(var me in D.properties)K[me]=y(D.properties[me],c);return new x(K);default:throw new Error("Unimplemented node type in simplifyConstant: ".concat(D.type))}}return y}),Xr="compile",Da=(0,W.d5)(Xr,["typed","parse"],v=>{var{typed:f,parse:p}=v;return f(Xr,{string:function(o){return p(o).compile()},"Array | Matrix":function(o){return(0,Tr.Fh)(o,function(r){return p(r).compile()})}})}),Ta=(0,W.d5)("Help",["parse"],v=>{var{parse:f}=v;function p(m){if(!(this instanceof p))throw new SyntaxError("Constructor must be called with the new operator");if(!m)throw new Error('Argument "doc" missing');this.doc=m}return p.prototype.type="Help",p.prototype.isHelp=!0,p.prototype.toString=function(){var m=this.doc||{},o="\n";if(m.name&&(o+="Name: "+m.name+"\n\n"),m.category&&(o+="Category: "+m.category+"\n\n"),m.description&&(o+="Description:\n    "+m.description+"\n\n"),m.syntax&&(o+="Syntax:\n    "+m.syntax.join("\n    ")+"\n\n"),m.examples){o+="Examples:\n";for(var r={},t=0;t<m.examples.length;t++){var i=m.examples[t];o+="    "+i+"\n";var s=void 0;try{s=f(i).compile().evaluate(r)}catch(n){s=n}void 0!==s&&!(0,h.x1)(s)&&(o+="        "+(0,de.WU)(s,{precision:14})+"\n")}o+="\n"}return m.mayThrow&&m.mayThrow.length&&(o+="Throws: "+m.mayThrow.join(", ")+"\n\n"),m.seealso&&m.seealso.length&&(o+="See also: "+m.seealso.join(", ")+"\n"),o},p.prototype.toJSON=function(){var m=(0,J.d9)(this.doc);return m.mathjs="Help",m},p.fromJSON=function(m){var o={};return Object.keys(m).filter(r=>"mathjs"!==r).forEach(r=>{o[r]=m[r]}),new p(o)},p.prototype.valueOf=p.prototype.toString,p},{isClass:!0}),Yr="leafCount",Ea=(0,W.d5)(Yr,["parse","typed"],v=>{var{typed:p}=v;function m(o){var r=0;return o.forEach(t=>{r+=m(t)}),r||1}return p(Yr,{Node:function(r){return m(r)}})}),Kr="simplifyCore",Ma=(0,W.d5)(Kr,["typed","parse","equal","isZero","add","subtract","multiply","divide","pow","AccessorNode","ArrayNode","ConstantNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","ParenthesisNode","SymbolNode"],v=>{var{typed:f,equal:m,isZero:o,AccessorNode:l,ArrayNode:g,ConstantNode:x,FunctionNode:C,IndexNode:A,ObjectNode:U,OperatorNode:I,SymbolNode:se}=v,y=new x(0),S=new x(1),d=new x(!0),w=new x(!1);function N(M){return(0,h.bV)(M)&&["and","not","or"].includes(M.op)}var{hasProperty:T,isCommutative:j}=Rr({FunctionNode:C,OperatorNode:I,SymbolNode:se});function $(M){var k=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},B=k?k.context:void 0;if(T(M,"trivial",B)){if((0,h.VO)(M)&&1===M.args.length)return $(M.args[0],k);var ae=!1,D=0;if(M.forEach(oe=>{1==++D&&(ae=$(oe,k))}),1===D)return ae}var c=M;if((0,h.VO)(c)){var z=function St(v){var f="OperatorNode:"+v;for(var p of ke)if(f in p)return p[f].op;return null}(c.name);if(!z)return new C($(c.fn),c.args.map(oe=>$(oe,k)));if(c.args.length>2&&T(c,"associative",B))for(;c.args.length>2;){var H=c.args.pop(),V=c.args.pop();c.args.push(new I(z,c.name,[H,V]))}c=new I(z,c.name,c.args)}if((0,h.bV)(c)&&c.isUnary()){var _=$(c.args[0],k);if("~"===c.op&&(0,h.bV)(_)&&_.isUnary()&&"~"===_.op||"not"===c.op&&(0,h.bV)(_)&&_.isUnary()&&"not"===_.op&&N(_.args[0]))return _.args[0];var Y=!0;if("-"===c.op&&(0,h.bV)(_)&&(_.isBinary()&&"subtract"===_.fn&&(c=new I("-","subtract",[_.args[1],_.args[0]]),Y=!1),_.isUnary()&&"-"===_.op))return _.args[0];if(Y)return new I(c.op,c.fn,[_])}if((0,h.bV)(c)&&c.isBinary()){var q=$(c.args[0],k),R=$(c.args[1],k);if("+"===c.op){if((0,h.nu)(q)&&o(q.value))return R;if((0,h.nu)(R)&&o(R.value))return q;(0,h.bV)(R)&&R.isUnary()&&"-"===R.op&&(c=new I("-","subtract",[q,R=R.args[0]]))}if("-"===c.op)return(0,h.bV)(R)&&R.isUnary()&&"-"===R.op?$(new I("+","add",[q,R.args[0]]),k):(0,h.nu)(q)&&o(q.value)?$(new I("-","unaryMinus",[R])):(0,h.nu)(R)&&o(R.value)?q:new I(c.op,c.fn,[q,R]);if("*"===c.op){if((0,h.nu)(q)){if(o(q.value))return y;if(m(q.value,1))return R}if((0,h.nu)(R)){if(o(R.value))return y;if(m(R.value,1))return q;if(j(c,B))return new I(c.op,c.fn,[R,q],c.implicit)}return new I(c.op,c.fn,[q,R],c.implicit)}if("/"===c.op)return(0,h.nu)(q)&&o(q.value)?y:(0,h.nu)(R)&&m(R.value,1)?q:new I(c.op,c.fn,[q,R]);if("^"===c.op&&(0,h.nu)(R)){if(o(R.value))return S;if(m(R.value,1))return q}if("and"===c.op){if((0,h.nu)(q)){if(!q.value)return w;if(N(R))return R}if((0,h.nu)(R)){if(!R.value)return w;if(N(q))return q}}if("or"===c.op){if((0,h.nu)(q)){if(q.value)return d;if(N(R))return R}if((0,h.nu)(R)){if(R.value)return d;if(N(q))return q}}return new I(c.op,c.fn,[q,R])}if((0,h.bV)(c))return new I(c.op,c.fn,c.args.map(oe=>$(oe,k)));if((0,h.j0)(c))return new g(c.items.map(oe=>$(oe,k)));if((0,h.Yz)(c))return new l($(c.object,k),$(c.index,k));if((0,h.Cl)(c))return new A(c.dimensions.map(oe=>$(oe,k)));if((0,h.Lr)(c)){var ne={};for(var ce in c.properties)ne[ce]=$(c.properties[ce],k);return new U(ne)}return c}return f(Kr,{Node:$,"Node,Object":$})}),et="evaluate",za=(0,W.d5)(et,["typed","parse"],v=>{var{typed:f,parse:p}=v;return f(et,{string:function(o){var r=(0,xe.dg)();return p(o).compile().evaluate(r)},"string, Map | Object":function(o,r){return p(o).compile().evaluate(r)},"Array | Matrix":function(o){var r=(0,xe.dg)();return(0,Tr.Fh)(o,function(t){return p(t).compile().evaluate(r)})},"Array | Matrix, Map | Object":function(o,r){return(0,Tr.Fh)(o,function(t){return p(t).compile().evaluate(r)})}})}),rt={name:"e",category:"Constants",syntax:["e"],description:"Euler's number, the base of the natural logarithm. Approximately equal to 2.71828",examples:["e","e ^ 2","exp(2)","log(e)"],seealso:["exp"]},tt={name:"pi",category:"Constants",syntax:["pi"],description:"The number pi is a mathematical constant that is the ratio of a circle's circumference to its diameter, and is approximately equal to 3.14159",examples:["pi","sin(pi/2)"],seealso:["tau"]},sl={bignumber:{name:"bignumber",category:"Construction",syntax:["bignumber(x)"],description:"Create a big number from a number or string.",examples:["0.1 + 0.2","bignumber(0.1) + bignumber(0.2)",'bignumber("7.2")','bignumber("7.2e500")',"bignumber([0.1, 0.2, 0.3])"],seealso:["boolean","complex","fraction","index","matrix","string","unit"]},boolean:{name:"boolean",category:"Construction",syntax:["x","boolean(x)"],description:"Convert a string or number into a boolean.",examples:["boolean(0)","boolean(1)","boolean(3)",'boolean("true")','boolean("false")',"boolean([1, 0, 1, 1])"],seealso:["bignumber","complex","index","matrix","number","string","unit"]},complex:{name:"complex",category:"Construction",syntax:["complex()","complex(re, im)","complex(string)"],description:"Create a complex number.",examples:["complex()","complex(2, 3)",'complex("7 - 2i")'],seealso:["bignumber","boolean","index","matrix","number","string","unit"]},createUnit:{name:"createUnit",category:"Construction",syntax:["createUnit(definitions)","createUnit(name, definition)"],description:"Create a user-defined unit and register it with the Unit type.",examples:['createUnit("foo")','createUnit("knot", {definition: "0.514444444 m/s", aliases: ["knots", "kt", "kts"]})','createUnit("mph", "1 mile/hour")'],seealso:["unit","splitUnit"]},fraction:{name:"fraction",category:"Construction",syntax:["fraction(num)","fraction(matrix)","fraction(num,den)","fraction({n: num, d: den})"],description:"Create a fraction from a number or from integer numerator and denominator.",examples:["fraction(0.125)","fraction(1, 3) + fraction(2, 5)","fraction({n: 333, d: 53})","fraction([sqrt(9), sqrt(10), sqrt(11)])"],seealso:["bignumber","boolean","complex","index","matrix","string","unit"]},index:{name:"index",category:"Construction",syntax:["[start]","[start:end]","[start:step:end]","[start1, start 2, ...]","[start1:end1, start2:end2, ...]","[start1:step1:end1, start2:step2:end2, ...]"],description:"Create an index to get or replace a subset of a matrix",examples:["A = [1, 2, 3; 4, 5, 6]","A[1, :]","A[1, 2] = 50","A[1:2, 1:2] = 1","B = [1, 2, 3]","B[B>1 and B<3]"],seealso:["bignumber","boolean","complex","matrix,","number","range","string","unit"]},matrix:{name:"matrix",category:"Construction",syntax:["[]","[a1, b1, ...; a2, b2, ...]","matrix()",'matrix("dense")',"matrix([...])"],description:"Create a matrix.",examples:["[]","[1, 2, 3]","[1, 2, 3; 4, 5, 6]","matrix()","matrix([3, 4])",'matrix([3, 4; 5, 6], "sparse")','matrix([3, 4; 5, 6], "sparse", "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","sparse"]},number:{name:"number",category:"Construction",syntax:["x","number(x)","number(unit, valuelessUnit)"],description:"Create a number or convert a string or boolean into a number.",examples:["2","2e3","4.05","number(2)",'number("7.2")',"number(true)","number([true, false, true, true])",'number(unit("52cm"), "m")'],seealso:["bignumber","boolean","complex","fraction","index","matrix","string","unit"]},sparse:{name:"sparse",category:"Construction",syntax:["sparse()","sparse([a1, b1, ...; a1, b2, ...])",'sparse([a1, b1, ...; a1, b2, ...], "number")'],description:"Create a sparse matrix.",examples:["sparse()","sparse([3, 4; 5, 6])",'sparse([3, 0; 5, 0], "number")'],seealso:["bignumber","boolean","complex","index","number","string","unit","matrix"]},splitUnit:{name:"splitUnit",category:"Construction",syntax:["splitUnit(unit: Unit, parts: Unit[])"],description:"Split a unit in an array of units whose sum is equal to the original unit.",examples:['splitUnit(1 m, ["feet", "inch"])'],seealso:["unit","createUnit"]},string:{name:"string",category:"Construction",syntax:['"text"',"string(x)"],description:"Create a string or convert a value to a string",examples:['"Hello World!"',"string(4.2)","string(3 + 2i)"],seealso:["bignumber","boolean","complex","index","matrix","number","unit"]},unit:{name:"unit",category:"Construction",syntax:["value unit","unit(value, unit)","unit(string)"],description:"Create a unit.",examples:["5.5 mm","3 inch",'unit(7.1, "kilogram")','unit("23 deg")'],seealso:["bignumber","boolean","complex","index","matrix","number","string"]},e:rt,E:rt,false:{name:"false",category:"Constants",syntax:["false"],description:"Boolean value false",examples:["false"],seealso:["true"]},i:{name:"i",category:"Constants",syntax:["i"],description:"Imaginary unit, defined as i*i=-1. A complex number is described as a + b*i, where a is the real part, and b is the imaginary part.",examples:["i","i * i","sqrt(-1)"],seealso:[]},Infinity:{name:"Infinity",category:"Constants",syntax:["Infinity"],description:"Infinity, a number which is larger than the maximum number that can be handled by a floating point number.",examples:["Infinity","1 / 0"],seealso:[]},LN2:{name:"LN2",category:"Constants",syntax:["LN2"],description:"Returns the natural logarithm of 2, approximately equal to 0.693",examples:["LN2","log(2)"],seealso:[]},LN10:{name:"LN10",category:"Constants",syntax:["LN10"],description:"Returns the natural logarithm of 10, approximately equal to 2.302",examples:["LN10","log(10)"],seealso:[]},LOG2E:{name:"LOG2E",category:"Constants",syntax:["LOG2E"],description:"Returns the base-2 logarithm of E, approximately equal to 1.442",examples:["LOG2E","log(e, 2)"],seealso:[]},LOG10E:{name:"LOG10E",category:"Constants",syntax:["LOG10E"],description:"Returns the base-10 logarithm of E, approximately equal to 0.434",examples:["LOG10E","log(e, 10)"],seealso:[]},NaN:{name:"NaN",category:"Constants",syntax:["NaN"],description:"Not a number",examples:["NaN","0 / 0"],seealso:[]},null:{name:"null",category:"Constants",syntax:["null"],description:"Value null",examples:["null"],seealso:["true","false"]},pi:tt,PI:tt,phi:{name:"phi",category:"Constants",syntax:["phi"],description:"Phi is the golden ratio. Two quantities are in the golden ratio if their ratio is the same as the ratio of their sum to the larger of the two quantities. Phi is defined as `(1 + sqrt(5)) / 2` and is approximately 1.618034...",examples:["phi"],seealso:[]},SQRT1_2:{name:"SQRT1_2",category:"Constants",syntax:["SQRT1_2"],description:"Returns the square root of 1/2, approximately equal to 0.707",examples:["SQRT1_2","sqrt(1/2)"],seealso:[]},SQRT2:{name:"SQRT2",category:"Constants",syntax:["SQRT2"],description:"Returns the square root of 2, approximately equal to 1.414",examples:["SQRT2","sqrt(2)"],seealso:[]},tau:{name:"tau",category:"Constants",syntax:["tau"],description:"Tau is the ratio constant of a circle's circumference to radius, equal to 2 * pi, approximately 6.2832.",examples:["tau","2 * pi"],seealso:["pi"]},true:{name:"true",category:"Constants",syntax:["true"],description:"Boolean value true",examples:["true"],seealso:["false"]},version:{name:"version",category:"Constants",syntax:["version"],description:"A string with the version number of math.js",examples:["version"],seealso:[]},speedOfLight:{description:"Speed of light in vacuum",examples:["speedOfLight"]},gravitationConstant:{description:"Newtonian constant of gravitation",examples:["gravitationConstant"]},planckConstant:{description:"Planck constant",examples:["planckConstant"]},reducedPlanckConstant:{description:"Reduced Planck constant",examples:["reducedPlanckConstant"]},magneticConstant:{description:"Magnetic constant (vacuum permeability)",examples:["magneticConstant"]},electricConstant:{description:"Electric constant (vacuum permeability)",examples:["electricConstant"]},vacuumImpedance:{description:"Characteristic impedance of vacuum",examples:["vacuumImpedance"]},coulomb:{description:"Coulomb's constant",examples:["coulomb"]},elementaryCharge:{description:"Elementary charge",examples:["elementaryCharge"]},bohrMagneton:{description:"Borh magneton",examples:["bohrMagneton"]},conductanceQuantum:{description:"Conductance quantum",examples:["conductanceQuantum"]},inverseConductanceQuantum:{description:"Inverse conductance quantum",examples:["inverseConductanceQuantum"]},magneticFluxQuantum:{description:"Magnetic flux quantum",examples:["magneticFluxQuantum"]},nuclearMagneton:{description:"Nuclear magneton",examples:["nuclearMagneton"]},klitzing:{description:"Von Klitzing constant",examples:["klitzing"]},bohrRadius:{description:"Borh radius",examples:["bohrRadius"]},classicalElectronRadius:{description:"Classical electron radius",examples:["classicalElectronRadius"]},electronMass:{description:"Electron mass",examples:["electronMass"]},fermiCoupling:{description:"Fermi coupling constant",examples:["fermiCoupling"]},fineStructure:{description:"Fine-structure constant",examples:["fineStructure"]},hartreeEnergy:{description:"Hartree energy",examples:["hartreeEnergy"]},protonMass:{description:"Proton mass",examples:["protonMass"]},deuteronMass:{description:"Deuteron Mass",examples:["deuteronMass"]},neutronMass:{description:"Neutron mass",examples:["neutronMass"]},quantumOfCirculation:{description:"Quantum of circulation",examples:["quantumOfCirculation"]},rydberg:{description:"Rydberg constant",examples:["rydberg"]},thomsonCrossSection:{description:"Thomson cross section",examples:["thomsonCrossSection"]},weakMixingAngle:{description:"Weak mixing angle",examples:["weakMixingAngle"]},efimovFactor:{description:"Efimov factor",examples:["efimovFactor"]},atomicMass:{description:"Atomic mass constant",examples:["atomicMass"]},avogadro:{description:"Avogadro's number",examples:["avogadro"]},boltzmann:{description:"Boltzmann constant",examples:["boltzmann"]},faraday:{description:"Faraday constant",examples:["faraday"]},firstRadiation:{description:"First radiation constant",examples:["firstRadiation"]},loschmidt:{description:"Loschmidt constant at T=273.15 K and p=101.325 kPa",examples:["loschmidt"]},gasConstant:{description:"Gas constant",examples:["gasConstant"]},molarPlanckConstant:{description:"Molar Planck constant",examples:["molarPlanckConstant"]},molarVolume:{description:"Molar volume of an ideal gas at T=273.15 K and p=101.325 kPa",examples:["molarVolume"]},sackurTetrode:{description:"Sackur-Tetrode constant at T=1 K and p=101.325 kPa",examples:["sackurTetrode"]},secondRadiation:{description:"Second radiation constant",examples:["secondRadiation"]},stefanBoltzmann:{description:"Stefan-Boltzmann constant",examples:["stefanBoltzmann"]},wienDisplacement:{description:"Wien displacement law constant",examples:["wienDisplacement"]},molarMass:{description:"Molar mass constant",examples:["molarMass"]},molarMassC12:{description:"Molar mass constant of carbon-12",examples:["molarMassC12"]},gravity:{description:"Standard acceleration of gravity (standard acceleration of free-fall on Earth)",examples:["gravity"]},planckLength:{description:"Planck length",examples:["planckLength"]},planckMass:{description:"Planck mass",examples:["planckMass"]},planckTime:{description:"Planck time",examples:["planckTime"]},planckCharge:{description:"Planck charge",examples:["planckCharge"]},planckTemperature:{description:"Planck temperature",examples:["planckTemperature"]},derivative:{name:"derivative",category:"Algebra",syntax:["derivative(expr, variable)","derivative(expr, variable, {simplify: boolean})"],description:"Takes the derivative of an expression expressed in parser Nodes. The derivative will be taken over the supplied variable in the second parameter. If there are multiple variables in the expression, it will return a partial derivative.",examples:['derivative("2x^3", "x")','derivative("2x^3", "x", {simplify: false})','derivative("2x^2 + 3x + 4", "x")','derivative("sin(2x)", "x")','f = parse("x^2 + x")','x = parse("x")',"df = derivative(f, x)","df.evaluate({x: 3})"],seealso:["simplify","parse","evaluate"]},lsolve:{name:"lsolve",category:"Algebra",syntax:["x=lsolve(L, b)"],description:"Finds one solution of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lsolve(a, b)"],seealso:["lsolveAll","lup","lusolve","usolve","matrix","sparse"]},lsolveAll:{name:"lsolveAll",category:"Algebra",syntax:["x=lsolveAll(L, b)"],description:"Finds all solutions of the linear system L * x = b where L is an [n x n] lower triangular matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lsolve(a, b)"],seealso:["lsolve","lup","lusolve","usolve","matrix","sparse"]},lup:{name:"lup",category:"Algebra",syntax:["lup(m)"],description:"Calculate the Matrix LU decomposition with partial pivoting. Matrix A is decomposed in three matrices (L, U, P) where P * A = L * U",examples:["lup([[2, 1], [1, 4]])","lup(matrix([[2, 1], [1, 4]]))","lup(sparse([[2, 1], [1, 4]]))"],seealso:["lusolve","lsolve","usolve","matrix","sparse","slu","qr"]},lusolve:{name:"lusolve",category:"Algebra",syntax:["x=lusolve(A, b)","x=lusolve(lu, b)"],description:"Solves the linear system A * x = b where A is an [n x n] matrix and b is a [n] column vector.",examples:["a = [-2, 3; 2, 1]","b = [11, 9]","x = lusolve(a, b)"],seealso:["lup","slu","lsolve","usolve","matrix","sparse"]},leafCount:{name:"leafCount",category:"Algebra",syntax:["leafCount(expr)"],description:"Computes the number of leaves in the parse tree of the given expression",examples:['leafCount("e^(i*pi)-1")','leafCount(parse("{a: 22/7, b: 10^(1/2)}"))'],seealso:["simplify"]},polynomialRoot:{name:"polynomialRoot",category:"Algebra",syntax:["x=polynomialRoot(-6, 3)","x=polynomialRoot(4, -4, 1)","x=polynomialRoot(-8, 12, -6, 1)"],description:"Finds the roots of a univariate polynomial given by its coefficients starting from constant, linear, and so on, increasing in degree.",examples:["a = polynomialRoot(-6, 11, -6, 1)"],seealso:["cbrt","sqrt"]},resolve:{name:"resolve",category:"Algebra",syntax:["resolve(node, scope)"],description:"Recursively substitute variables in an expression tree.",examples:['resolve(parse("1 + x"), { x: 7 })','resolve(parse("size(text)"), { text: "Hello World" })','resolve(parse("x + y"), { x: parse("3z") })','resolve(parse("3x"), { x: parse("y+z"), z: parse("w^y") })'],seealso:["simplify","evaluate"],mayThrow:["ReferenceError"]},simplify:{name:"simplify",category:"Algebra",syntax:["simplify(expr)","simplify(expr, rules)"],description:"Simplify an expression tree.",examples:['simplify("3 + 2 / 4")','simplify("2x + x")','f = parse("x * (x + 2 + x)")',"simplified = simplify(f)","simplified.evaluate({x: 2})"],seealso:["simplifyCore","derivative","evaluate","parse","rationalize","resolve"]},simplifyConstant:{name:"simplifyConstant",category:"Algebra",syntax:["simplifyConstant(expr)","simplifyConstant(expr, options)"],description:"Replace constant subexpressions of node with their values.",examples:['simplifyConstant("(3-3)*x")','simplifyConstant(parse("z-cos(tau/8)"))'],seealso:["simplify","simplifyCore","evaluate"]},simplifyCore:{name:"simplifyCore",category:"Algebra",syntax:["simplifyCore(node)"],description:"Perform simple one-pass simplifications on an expression tree.",examples:['simplifyCore(parse("0*x"))','simplifyCore(parse("(x+0)*2"))'],seealso:["simplify","simplifyConstant","evaluate"]},symbolicEqual:{name:"symbolicEqual",category:"Algebra",syntax:["symbolicEqual(expr1, expr2)","symbolicEqual(expr1, expr2, options)"],description:"Returns true if the difference of the expressions simplifies to 0",examples:['symbolicEqual("x*y","y*x")','symbolicEqual("abs(x^2)", "x^2")','symbolicEqual("abs(x)", "x", {context: {abs: {trivial: true}}})'],seealso:["simplify","evaluate"]},rationalize:{name:"rationalize",category:"Algebra",syntax:["rationalize(expr)","rationalize(expr, scope)","rationalize(expr, scope, detailed)"],description:"Transform a rationalizable expression in a rational fraction. If rational fraction is one variable polynomial then converts the numerator and denominator in canonical form, with decreasing exponents, returning the coefficients of numerator.",examples:['rationalize("2x/y - y/(x+1)")','rationalize("2x/y - y/(x+1)", true)'],seealso:["simplify"]},slu:{name:"slu",category:"Algebra",syntax:["slu(A, order, threshold)"],description:"Calculate the Matrix LU decomposition with full pivoting. Matrix A is decomposed in two matrices (L, U) and two permutation vectors (pinv, q) where P * A * Q = L * U",examples:["slu(sparse([4.5, 0, 3.2, 0; 3.1, 2.9, 0, 0.9; 0, 1.7, 3, 0; 3.5, 0.4, 0, 1]), 1, 0.001)"],seealso:["lusolve","lsolve","usolve","matrix","sparse","lup","qr"]},usolve:{name:"usolve",category:"Algebra",syntax:["x=usolve(U, b)"],description:"Finds one solution of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",examples:["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],seealso:["usolveAll","lup","lusolve","lsolve","matrix","sparse"]},usolveAll:{name:"usolveAll",category:"Algebra",syntax:["x=usolve(U, b)"],description:"Finds all solutions of the linear system U * x = b where U is an [n x n] upper triangular matrix and b is a [n] column vector.",examples:["x=usolve(sparse([1, 1, 1, 1; 0, 1, 1, 1; 0, 0, 1, 1; 0, 0, 0, 1]), [1; 2; 3; 4])"],seealso:["usolve","lup","lusolve","lsolve","matrix","sparse"]},qr:{name:"qr",category:"Algebra",syntax:["qr(A)"],description:"Calculates the Matrix QR decomposition. Matrix `A` is decomposed in two matrices (`Q`, `R`) where `Q` is an orthogonal matrix and `R` is an upper triangular matrix.",examples:["qr([[1, -1,  4], [1,  4, -2], [1,  4,  2], [1,  -1, 0]])"],seealso:["lup","slu","matrix"]},abs:{name:"abs",category:"Arithmetic",syntax:["abs(x)"],description:"Compute the absolute value.",examples:["abs(3.5)","abs(-4.2)"],seealso:["sign"]},add:{name:"add",category:"Operators",syntax:["x + y","add(x, y)"],description:"Add two values.",examples:["a = 2.1 + 3.6","a - 3.6","3 + 2i","3 cm + 2 inch",'"2.3" + "4"'],seealso:["subtract"]},cbrt:{name:"cbrt",category:"Arithmetic",syntax:["cbrt(x)","cbrt(x, allRoots)"],description:"Compute the cubic root value. If x = y * y * y, then y is the cubic root of x. When `x` is a number or complex number, an optional second argument `allRoots` can be provided to return all three cubic roots. If not provided, the principal root is returned",examples:["cbrt(64)","cube(4)","cbrt(-8)","cbrt(2 + 3i)","cbrt(8i)","cbrt(8i, true)","cbrt(27 m^3)"],seealso:["square","sqrt","cube","multiply"]},ceil:{name:"ceil",category:"Arithmetic",syntax:["ceil(x)"],description:"Round a value towards plus infinity. If x is complex, both real and imaginary part are rounded towards plus infinity.",examples:["ceil(3.2)","ceil(3.8)","ceil(-4.2)"],seealso:["floor","fix","round"]},cube:{name:"cube",category:"Arithmetic",syntax:["cube(x)"],description:"Compute the cube of a value. The cube of x is x * x * x.",examples:["cube(2)","2^3","2 * 2 * 2"],seealso:["multiply","square","pow"]},divide:{name:"divide",category:"Operators",syntax:["x / y","divide(x, y)"],description:"Divide two values.",examples:["a = 2 / 3","a * 3","4.5 / 2","3 + 4 / 2","(3 + 4) / 2","18 km / 4.5"],seealso:["multiply"]},dotDivide:{name:"dotDivide",category:"Operators",syntax:["x ./ y","dotDivide(x, y)"],description:"Divide two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a ./ b"],seealso:["multiply","dotMultiply","divide"]},dotMultiply:{name:"dotMultiply",category:"Operators",syntax:["x .* y","dotMultiply(x, y)"],description:"Multiply two values element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","b = [2, 1, 1; 3, 2, 5]","a .* b"],seealso:["multiply","divide","dotDivide"]},dotPow:{name:"dotPow",category:"Operators",syntax:["x .^ y","dotPow(x, y)"],description:"Calculates the power of x to y element wise.",examples:["a = [1, 2, 3; 4, 5, 6]","a .^ 2"],seealso:["pow"]},exp:{name:"exp",category:"Arithmetic",syntax:["exp(x)"],description:"Calculate the exponent of a value.",examples:["exp(1.3)","e ^ 1.3","log(exp(1.3))","x = 2.4","(exp(i*x) == cos(x) + i*sin(x))   # Euler's formula"],seealso:["expm","expm1","pow","log"]},expm:{name:"expm",category:"Arithmetic",syntax:["exp(x)"],description:"Compute the matrix exponential, expm(A) = e^A. The matrix must be square. Not to be confused with exp(a), which performs element-wise exponentiation.",examples:["expm([[0,2],[0,0]])"],seealso:["exp"]},expm1:{name:"expm1",category:"Arithmetic",syntax:["expm1(x)"],description:"Calculate the value of subtracting 1 from the exponential value.",examples:["expm1(2)","pow(e, 2) - 1","log(expm1(2) + 1)"],seealso:["exp","pow","log"]},fix:{name:"fix",category:"Arithmetic",syntax:["fix(x)"],description:"Round a value towards zero. If x is complex, both real and imaginary part are rounded towards zero.",examples:["fix(3.2)","fix(3.8)","fix(-4.2)","fix(-4.8)"],seealso:["ceil","floor","round"]},floor:{name:"floor",category:"Arithmetic",syntax:["floor(x)"],description:"Round a value towards minus infinity.If x is complex, both real and imaginary part are rounded towards minus infinity.",examples:["floor(3.2)","floor(3.8)","floor(-4.2)"],seealso:["ceil","fix","round"]},gcd:{name:"gcd",category:"Arithmetic",syntax:["gcd(a, b)","gcd(a, b, c, ...)"],description:"Compute the greatest common divisor.",examples:["gcd(8, 12)","gcd(-4, 6)","gcd(25, 15, -10)"],seealso:["lcm","xgcd"]},hypot:{name:"hypot",category:"Arithmetic",syntax:["hypot(a, b, c, ...)","hypot([a, b, c, ...])"],description:"Calculate the hypotenusa of a list with values. ",examples:["hypot(3, 4)","sqrt(3^2 + 4^2)","hypot(-2)","hypot([3, 4, 5])"],seealso:["abs","norm"]},lcm:{name:"lcm",category:"Arithmetic",syntax:["lcm(x, y)"],description:"Compute the least common multiple.",examples:["lcm(4, 6)","lcm(6, 21)","lcm(6, 21, 5)"],seealso:["gcd"]},log:{name:"log",category:"Arithmetic",syntax:["log(x)","log(x, base)"],description:"Compute the logarithm of a value. If no base is provided, the natural logarithm of x is calculated. If base if provided, the logarithm is calculated for the specified base. log(x, base) is defined as log(x) / log(base).",examples:["log(3.5)","a = log(2.4)","exp(a)","10 ^ 4","log(10000, 10)","log(10000) / log(10)","b = log(1024, 2)","2 ^ b"],seealso:["exp","log1p","log2","log10"]},log2:{name:"log2",category:"Arithmetic",syntax:["log2(x)"],description:"Calculate the 2-base of a value. This is the same as calculating `log(x, 2)`.",examples:["log2(0.03125)","log2(16)","log2(16) / log2(2)","pow(2, 4)"],seealso:["exp","log1p","log","log10"]},log1p:{name:"log1p",category:"Arithmetic",syntax:["log1p(x)","log1p(x, base)"],description:"Calculate the logarithm of a `value+1`",examples:["log1p(2.5)","exp(log1p(1.4))","pow(10, 4)","log1p(9999, 10)","log1p(9999) / log(10)"],seealso:["exp","log","log2","log10"]},log10:{name:"log10",category:"Arithmetic",syntax:["log10(x)"],description:"Compute the 10-base logarithm of a value.",examples:["log10(0.00001)","log10(10000)","10 ^ 4","log(10000) / log(10)","log(10000, 10)"],seealso:["exp","log"]},mod:{name:"mod",category:"Operators",syntax:["x % y","x mod y","mod(x, y)"],description:"Calculates the modulus, the remainder of an integer division.",examples:["7 % 3","11 % 2","10 mod 4","isOdd(x) = x % 2","isOdd(2)","isOdd(3)"],seealso:["divide"]},multiply:{name:"multiply",category:"Operators",syntax:["x * y","multiply(x, y)"],description:"multiply two values.",examples:["a = 2.1 * 3.4","a / 3.4","2 * 3 + 4","2 * (3 + 4)","3 * 2.1 km"],seealso:["divide"]},norm:{name:"norm",category:"Arithmetic",syntax:["norm(x)","norm(x, p)"],description:"Calculate the norm of a number, vector or matrix.",examples:["abs(-3.5)","norm(-3.5)","norm(3 - 4i)","norm([1, 2, -3], Infinity)","norm([1, 2, -3], -Infinity)","norm([3, 4], 2)","norm([[1, 2], [3, 4]], 1)",'norm([[1, 2], [3, 4]], "inf")','norm([[1, 2], [3, 4]], "fro")']},nthRoot:{name:"nthRoot",category:"Arithmetic",syntax:["nthRoot(a)","nthRoot(a, root)"],description:'Calculate the nth root of a value. The principal nth root of a positive real number A, is the positive real solution of the equation "x^root = A".',examples:["4 ^ 3","nthRoot(64, 3)","nthRoot(9, 2)","sqrt(9)"],seealso:["nthRoots","pow","sqrt"]},nthRoots:{name:"nthRoots",category:"Arithmetic",syntax:["nthRoots(A)","nthRoots(A, root)"],description:'Calculate the nth roots of a value. An nth root of a positive real number A, is a positive real solution of the equation "x^root = A". This function returns an array of complex values.',examples:["nthRoots(1)","nthRoots(1, 3)"],seealso:["sqrt","pow","nthRoot"]},pow:{name:"pow",category:"Operators",syntax:["x ^ y","pow(x, y)"],description:"Calculates the power of x to y, x^y.",examples:["2^3","2*2*2","1 + e ^ (pi * i)","pow([[1, 2], [4, 3]], 2)","pow([[1, 2], [4, 3]], -1)"],seealso:["multiply","nthRoot","nthRoots","sqrt"]},round:{name:"round",category:"Arithmetic",syntax:["round(x)","round(x, n)"],description:"round a value towards the nearest integer.If x is complex, both real and imaginary part are rounded towards the nearest integer. When n is specified, the value is rounded to n decimals.",examples:["round(3.2)","round(3.8)","round(-4.2)","round(-4.8)","round(pi, 3)","round(123.45678, 2)"],seealso:["ceil","floor","fix"]},sign:{name:"sign",category:"Arithmetic",syntax:["sign(x)"],description:"Compute the sign of a value. The sign of a value x is 1 when x>1, -1 when x<0, and 0 when x=0.",examples:["sign(3.5)","sign(-4.2)","sign(0)"],seealso:["abs"]},sqrt:{name:"sqrt",category:"Arithmetic",syntax:["sqrt(x)"],description:"Compute the square root value. If x = y * y, then y is the square root of x.",examples:["sqrt(25)","5 * 5","sqrt(-1)"],seealso:["square","sqrtm","multiply","nthRoot","nthRoots","pow"]},sqrtm:{name:"sqrtm",category:"Arithmetic",syntax:["sqrtm(x)"],description:"Calculate the principal square root of a square matrix. The principal square root matrix `X` of another matrix `A` is such that `X * X = A`.",examples:["sqrtm([[33, 24], [48, 57]])"],seealso:["sqrt","abs","square","multiply"]},square:{name:"square",category:"Arithmetic",syntax:["square(x)"],description:"Compute the square of a value. The square of x is x * x.",examples:["square(3)","sqrt(9)","3^2","3 * 3"],seealso:["multiply","pow","sqrt","cube"]},subtract:{name:"subtract",category:"Operators",syntax:["x - y","subtract(x, y)"],description:"subtract two values.",examples:["a = 5.3 - 2","a + 2","2/3 - 1/6","2 * 3 - 3","2.1 km - 500m"],seealso:["add"]},unaryMinus:{name:"unaryMinus",category:"Operators",syntax:["-x","unaryMinus(x)"],description:"Inverse the sign of a value. Converts booleans and strings to numbers.",examples:["-4.5","-(-5.6)",'-"22"'],seealso:["add","subtract","unaryPlus"]},unaryPlus:{name:"unaryPlus",category:"Operators",syntax:["+x","unaryPlus(x)"],description:"Converts booleans and strings to numbers.",examples:["+true",'+"2"'],seealso:["add","subtract","unaryMinus"]},xgcd:{name:"xgcd",category:"Arithmetic",syntax:["xgcd(a, b)"],description:"Calculate the extended greatest common divisor for two values. The result is an array [d, x, y] with 3 entries, where d is the greatest common divisor, and d = x * a + y * b.",examples:["xgcd(8, 12)","gcd(8, 12)","xgcd(36163, 21199)"],seealso:["gcd","lcm"]},invmod:{name:"invmod",category:"Arithmetic",syntax:["invmod(a, b)"],description:"Calculate the (modular) multiplicative inverse of a modulo b. Solution to the equation ax \u2263 1 (mod b)",examples:["invmod(8, 12)","invmod(7, 13)","invmod(15151, 15122)"],seealso:["gcd","xgcd"]},bitAnd:{name:"bitAnd",category:"Bitwise",syntax:["x & y","bitAnd(x, y)"],description:"Bitwise AND operation. Performs the logical AND operation on each pair of the corresponding bits of the two given values by multiplying them. If both bits in the compared position are 1, the bit in the resulting binary representation is 1, otherwise, the result is 0",examples:["5 & 3","bitAnd(53, 131)","[1, 12, 31] & 42"],seealso:["bitNot","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]},bitNot:{name:"bitNot",category:"Bitwise",syntax:["~x","bitNot(x)"],description:"Bitwise NOT operation. Performs a logical negation on each bit of the given value. Bits that are 0 become 1, and those that are 1 become 0.",examples:["~1","~2","bitNot([2, -3, 4])"],seealso:["bitAnd","bitOr","bitXor","leftShift","rightArithShift","rightLogShift"]},bitOr:{name:"bitOr",category:"Bitwise",syntax:["x | y","bitOr(x, y)"],description:"Bitwise OR operation. Performs the logical inclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if the first bit is 1 or the second bit is 1 or both bits are 1, otherwise, the result is 0.",examples:["5 | 3","bitOr([1, 2, 3], 4)"],seealso:["bitAnd","bitNot","bitXor","leftShift","rightArithShift","rightLogShift"]},bitXor:{name:"bitXor",category:"Bitwise",syntax:["bitXor(x, y)"],description:"Bitwise XOR operation, exclusive OR. Performs the logical exclusive OR operation on each pair of corresponding bits of the two given values. The result in each position is 1 if only the first bit is 1 or only the second bit is 1, but will be 0 if both are 0 or both are 1.",examples:["bitOr(1, 2)","bitXor([2, 3, 4], 4)"],seealso:["bitAnd","bitNot","bitOr","leftShift","rightArithShift","rightLogShift"]},leftShift:{name:"leftShift",category:"Bitwise",syntax:["x << y","leftShift(x, y)"],description:"Bitwise left logical shift of a value x by y number of bits.",examples:["4 << 1","8 >> 1"],seealso:["bitAnd","bitNot","bitOr","bitXor","rightArithShift","rightLogShift"]},rightArithShift:{name:"rightArithShift",category:"Bitwise",syntax:["x >> y","rightArithShift(x, y)"],description:"Bitwise right arithmetic shift of a value x by y number of bits.",examples:["8 >> 1","4 << 1","-12 >> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightLogShift"]},rightLogShift:{name:"rightLogShift",category:"Bitwise",syntax:["x >>> y","rightLogShift(x, y)"],description:"Bitwise right logical shift of a value x by y number of bits.",examples:["8 >>> 1","4 << 1","-12 >>> 2"],seealso:["bitAnd","bitNot","bitOr","bitXor","leftShift","rightArithShift"]},bellNumbers:{name:"bellNumbers",category:"Combinatorics",syntax:["bellNumbers(n)"],description:"The Bell Numbers count the number of partitions of a set. A partition is a pairwise disjoint subset of S whose union is S. `bellNumbers` only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["bellNumbers(3)","bellNumbers(8)"],seealso:["stirlingS2"]},catalan:{name:"catalan",category:"Combinatorics",syntax:["catalan(n)"],description:"The Catalan Numbers enumerate combinatorial structures of many different types. catalan only takes integer arguments. The following condition must be enforced: n >= 0.",examples:["catalan(3)","catalan(8)"],seealso:["bellNumbers"]},composition:{name:"composition",category:"Combinatorics",syntax:["composition(n, k)"],description:"The composition counts of n into k parts. composition only takes integer arguments. The following condition must be enforced: k <= n.",examples:["composition(5, 3)"],seealso:["combinations"]},stirlingS2:{name:"stirlingS2",category:"Combinatorics",syntax:["stirlingS2(n, k)"],description:"he Stirling numbers of the second kind, counts the number of ways to partition a set of n labelled objects into k nonempty unlabelled subsets. `stirlingS2` only takes integer arguments. The following condition must be enforced: k <= n. If n = k or k = 1, then s(n,k) = 1.",examples:["stirlingS2(5, 3)"],seealso:["bellNumbers"]},config:{name:"config",category:"Core",syntax:["config()","config(options)"],description:"Get configuration or change configuration.",examples:["config()","1/3 + 1/4",'config({number: "Fraction"})',"1/3 + 1/4"],seealso:[]},import:{name:"import",category:"Core",syntax:["import(functions)","import(functions, options)"],description:"Import functions or constants from an object.",examples:["import({myFn: f(x)=x^2, myConstant: 32 })","myFn(2)","myConstant"],seealso:[]},typed:{name:"typed",category:"Core",syntax:["typed(signatures)","typed(name, signatures)"],description:"Create a typed function.",examples:['double = typed({ "number": f(x)=x+x, "string": f(x)=concat(x,x) })',"double(2)",'double("hello")'],seealso:[]},arg:{name:"arg",category:"Complex",syntax:["arg(x)"],description:"Compute the argument of a complex value. If x = a+bi, the argument is computed as atan2(b, a).",examples:["arg(2 + 2i)","atan2(3, 2)","arg(2 + 3i)"],seealso:["re","im","conj","abs"]},conj:{name:"conj",category:"Complex",syntax:["conj(x)"],description:"Compute the complex conjugate of a complex value. If x = a+bi, the complex conjugate is a-bi.",examples:["conj(2 + 3i)","conj(2 - 3i)","conj(-5.2i)"],seealso:["re","im","abs","arg"]},re:{name:"re",category:"Complex",syntax:["re(x)"],description:"Get the real part of a complex number.",examples:["re(2 + 3i)","im(2 + 3i)","re(-5.2i)","re(2.4)"],seealso:["im","conj","abs","arg"]},im:{name:"im",category:"Complex",syntax:["im(x)"],description:"Get the imaginary part of a complex number.",examples:["im(2 + 3i)","re(2 + 3i)","im(-5.2i)","im(2.4)"],seealso:["re","conj","abs","arg"]},evaluate:{name:"evaluate",category:"Expression",syntax:["evaluate(expression)","evaluate(expression, scope)","evaluate([expr1, expr2, expr3, ...])","evaluate([expr1, expr2, expr3, ...], scope)"],description:"Evaluate an expression or an array with expressions.",examples:['evaluate("2 + 3")','evaluate("sqrt(16)")','evaluate("2 inch to cm")','evaluate("sin(x * pi)", { "x": 1/2 })','evaluate(["width=2", "height=4","width*height"])'],seealso:[]},help:{name:"help",category:"Expression",syntax:["help(object)","help(string)"],description:"Display documentation on a function or data type.",examples:["help(sqrt)",'help("complex")'],seealso:[]},distance:{name:"distance",category:"Geometry",syntax:["distance([x1, y1], [x2, y2])","distance([[x1, y1], [x2, y2]])"],description:"Calculates the Euclidean distance between two points.",examples:["distance([0,0], [4,4])","distance([[0,0], [4,4]])"],seealso:[]},intersect:{name:"intersect",category:"Geometry",syntax:["intersect(expr1, expr2, expr3, expr4)","intersect(expr1, expr2, expr3)"],description:"Computes the intersection point of lines and/or planes.",examples:["intersect([0, 0], [10, 10], [10, 0], [0, 10])","intersect([1, 0, 1],  [4, -2, 2], [1, 1, 1, 6])"],seealso:[]},and:{name:"and",category:"Logical",syntax:["x and y","and(x, y)"],description:"Logical and. Test whether two values are both defined with a nonzero/nonempty value.",examples:["true and false","true and true","2 and 4"],seealso:["not","or","xor"]},not:{name:"not",category:"Logical",syntax:["not x","not(x)"],description:"Logical not. Flips the boolean value of given argument.",examples:["not true","not false","not 2","not 0"],seealso:["and","or","xor"]},or:{name:"or",category:"Logical",syntax:["x or y","or(x, y)"],description:"Logical or. Test if at least one value is defined with a nonzero/nonempty value.",examples:["true or false","false or false","0 or 4"],seealso:["not","and","xor"]},xor:{name:"xor",category:"Logical",syntax:["x xor y","xor(x, y)"],description:"Logical exclusive or, xor. Test whether one and only one value is defined with a nonzero/nonempty value.",examples:["true xor false","false xor false","true xor true","0 xor 4"],seealso:["not","and","or"]},concat:{name:"concat",category:"Matrix",syntax:["concat(A, B, C, ...)","concat(A, B, C, ..., dim)"],description:"Concatenate matrices. By default, the matrices are concatenated by the last dimension. The dimension on which to concatenate can be provided as last argument.",examples:["A = [1, 2; 5, 6]","B = [3, 4; 7, 8]","concat(A, B)","concat(A, B, 1)","concat(A, B, 2)"],seealso:["det","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},count:{name:"count",category:"Matrix",syntax:["count(x)"],description:"Count the number of elements of a matrix, array or string.",examples:["a = [1, 2; 3, 4; 5, 6]","count(a)","size(a)",'count("hello world")'],seealso:["size"]},cross:{name:"cross",category:"Matrix",syntax:["cross(A, B)"],description:"Calculate the cross product for two vectors in three dimensional space.",examples:["cross([1, 1, 0],  [0, 1, 1])","cross([3, -3, 1], [4, 9, 2])","cross([2, 3, 4],  [5, 6, 7])"],seealso:["multiply","dot"]},column:{name:"column",category:"Matrix",syntax:["column(x, index)"],description:"Return a column from a matrix or array.",examples:["A = [[1, 2], [3, 4]]","column(A, 1)","column(A, 2)"],seealso:["row","matrixFromColumns"]},ctranspose:{name:"ctranspose",category:"Matrix",syntax:["x'","ctranspose(x)"],description:"Complex Conjugate and Transpose a matrix",examples:["a = [1, 2, 3; 4, 5, 6]","a'","ctranspose(a)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","zeros"]},det:{name:"det",category:"Matrix",syntax:["det(x)"],description:"Calculate the determinant of a matrix",examples:["det([1, 2; 3, 4])","det([-2, 2, 3; -1, 1, 3; 2, 0, -1])"],seealso:["concat","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},diag:{name:"diag",category:"Matrix",syntax:["diag(x)","diag(x, k)"],description:"Create a diagonal matrix or retrieve the diagonal of a matrix. When x is a vector, a matrix with the vector values on the diagonal will be returned. When x is a matrix, a vector with the diagonal values of the matrix is returned. When k is provided, the k-th diagonal will be filled in or retrieved, if k is positive, the values are placed on the super diagonal. When k is negative, the values are placed on the sub diagonal.",examples:["diag(1:3)","diag(1:3, 1)","a = [1, 2, 3; 4, 5, 6; 7, 8, 9]","diag(a)"],seealso:["concat","det","identity","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},diff:{name:"diff",category:"Matrix",syntax:["diff(arr)","diff(arr, dim)"],description:["Create a new matrix or array with the difference of the passed matrix or array.","Dim parameter is optional and used to indicant the dimension of the array/matrix to apply the difference","If no dimension parameter is passed it is assumed as dimension 0","Dimension is zero-based in javascript and one-based in the parser","Arrays must be 'rectangular' meaning arrays like [1, 2]","If something is passed as a matrix it will be returned as a matrix but other than that all matrices are converted to arrays"],examples:["A = [1, 2, 4, 7, 0]","diff(A)","diff(A, 1)","B = [[1, 2], [3, 4]]","diff(B)","diff(B, 1)","diff(B, 2)","diff(B, bignumber(2))","diff([[1, 2], matrix([3, 4])], 2)"],seealso:["subtract","partitionSelect"]},dot:{name:"dot",category:"Matrix",syntax:["dot(A, B)","A * B"],description:"Calculate the dot product of two vectors. The dot product of A = [a1, a2, a3, ..., an] and B = [b1, b2, b3, ..., bn] is defined as dot(A, B) = a1 * b1 + a2 * b2 + a3 * b3 + ... + an * bn",examples:["dot([2, 4, 1], [2, 2, 3])","[2, 4, 1] * [2, 2, 3]"],seealso:["multiply","cross"]},getMatrixDataType:{name:"getMatrixDataType",category:"Matrix",syntax:["getMatrixDataType(x)"],description:'Find the data type of all elements in a matrix or array, for example "number" if all items are a number and "Complex" if all values are complex numbers. If a matrix contains more than one data type, it will return "mixed".',examples:["getMatrixDataType([1, 2, 3])","getMatrixDataType([[5 cm], [2 inch]])",'getMatrixDataType([1, "text"])',"getMatrixDataType([1, bignumber(4)])"],seealso:["matrix","sparse","typeOf"]},identity:{name:"identity",category:"Matrix",syntax:["identity(n)","identity(m, n)","identity([m, n])"],description:"Returns the identity matrix with size m-by-n. The matrix has ones on the diagonal and zeros elsewhere.",examples:["identity(3)","identity(3, 5)","a = [1, 2, 3; 4, 5, 6]","identity(size(a))"],seealso:["concat","det","diag","inv","ones","range","size","squeeze","subset","trace","transpose","zeros"]},filter:{name:"filter",category:"Matrix",syntax:["filter(x, test)"],description:"Filter items in a matrix.",examples:["isPositive(x) = x > 0","filter([6, -2, -1, 4, 3], isPositive)","filter([6, -2, 0, 1, 0], x != 0)"],seealso:["sort","map","forEach"]},flatten:{name:"flatten",category:"Matrix",syntax:["flatten(x)"],description:"Flatten a multi dimensional matrix into a single dimensional matrix.",examples:["a = [1, 2, 3; 4, 5, 6]","size(a)","b = flatten(a)","size(b)"],seealso:["concat","resize","size","squeeze"]},forEach:{name:"forEach",category:"Matrix",syntax:["forEach(x, callback)"],description:"Iterates over all elements of a matrix/array, and executes the given callback function.",examples:["numberOfPets = {}","addPet(n) = numberOfPets[n] = (numberOfPets[n] ? numberOfPets[n]:0 ) + 1;",'forEach(["Dog","Cat","Cat"], addPet)',"numberOfPets"],seealso:["map","sort","filter"]},inv:{name:"inv",category:"Matrix",syntax:["inv(x)"],description:"Calculate the inverse of a matrix",examples:["inv([1, 2; 3, 4])","inv(4)","1 / 4"],seealso:["concat","det","diag","identity","ones","range","size","squeeze","subset","trace","transpose","zeros"]},pinv:{name:"pinv",category:"Matrix",syntax:["pinv(x)"],description:"Calculate the Moore\u2013Penrose inverse of a matrix",examples:["pinv([1, 2; 3, 4])","pinv([[1, 0], [0, 1], [0, 1]])","pinv(4)"],seealso:["inv"]},eigs:{name:"eigs",category:"Matrix",syntax:["eigs(x)"],description:"Calculate the eigenvalues and eigenvectors of a real symmetric matrix",examples:["eigs([[5, 2.3], [2.3, 1]])"],seealso:["inv"]},kron:{name:"kron",category:"Matrix",syntax:["kron(x, y)"],description:"Calculates the kronecker product of 2 matrices or vectors.",examples:["kron([[1, 0], [0, 1]], [[1, 2], [3, 4]])","kron([1,1], [2,3,4])"],seealso:["multiply","dot","cross"]},matrixFromFunction:{name:"matrixFromFunction",category:"Matrix",syntax:["matrixFromFunction(size, fn)","matrixFromFunction(size, fn, format)","matrixFromFunction(size, fn, format, datatype)","matrixFromFunction(size, format, fn)","matrixFromFunction(size, format, datatype, fn)"],description:"Create a matrix by evaluating a generating function at each index.",examples:["f(I) = I[1] - I[2]","matrixFromFunction([3,3], f)","g(I) = I[1] - I[2] == 1 ? 4 : 0",'matrixFromFunction([100, 100], "sparse", g)',"matrixFromFunction([5], random)"],seealso:["matrix","matrixFromRows","matrixFromColumns","zeros"]},matrixFromRows:{name:"matrixFromRows",category:"Matrix",syntax:["matrixFromRows(...arr)","matrixFromRows(row1, row2)","matrixFromRows(row1, row2, row3)"],description:"Create a dense matrix from vectors as individual rows.",examples:["matrixFromRows([1, 2, 3], [[4],[5],[6]])"],seealso:["matrix","matrixFromColumns","matrixFromFunction","zeros"]},matrixFromColumns:{name:"matrixFromColumns",category:"Matrix",syntax:["matrixFromColumns(...arr)","matrixFromColumns(row1, row2)","matrixFromColumns(row1, row2, row3)"],description:"Create a dense matrix from vectors as individual columns.",examples:["matrixFromColumns([1, 2, 3], [[4],[5],[6]])"],seealso:["matrix","matrixFromRows","matrixFromFunction","zeros"]},map:{name:"map",category:"Matrix",syntax:["map(x, callback)"],description:"Create a new matrix or array with the results of the callback function executed on each entry of the matrix/array.",examples:["map([1, 2, 3], square)"],seealso:["filter","forEach"]},ones:{name:"ones",category:"Matrix",syntax:["ones(m)","ones(m, n)","ones(m, n, p, ...)","ones([m])","ones([m, n])","ones([m, n, p, ...])"],description:"Create a matrix containing ones.",examples:["ones(3)","ones(3, 5)","ones([2,3]) * 4.5","a = [1, 2, 3; 4, 5, 6]","ones(size(a))"],seealso:["concat","det","diag","identity","inv","range","size","squeeze","subset","trace","transpose","zeros"]},partitionSelect:{name:"partitionSelect",category:"Matrix",syntax:["partitionSelect(x, k)","partitionSelect(x, k, compare)"],description:"Partition-based selection of an array or 1D matrix. Will find the kth smallest value, and mutates the input array. Uses Quickselect.",examples:["partitionSelect([5, 10, 1], 2)",'partitionSelect(["C", "B", "A", "D"], 1, compareText)',"arr = [5, 2, 1]","partitionSelect(arr, 0) # returns 1, arr is now: [1, 2, 5]","arr","partitionSelect(arr, 1, 'desc') # returns 2, arr is now: [5, 2, 1]","arr"],seealso:["sort"]},range:{name:"range",category:"Type",syntax:["start:end","start:step:end","range(start, end)","range(start, end, step)","range(string)"],description:"Create a range. Lower bound of the range is included, upper bound is excluded.",examples:["1:5","3:-1:-3","range(3, 7)","range(0, 12, 2)",'range("4:10")',"range(1m, 1m, 3m)","a = [1, 2, 3, 4; 5, 6, 7, 8]","a[1:2, 1:2]"],seealso:["concat","det","diag","identity","inv","ones","size","squeeze","subset","trace","transpose","zeros"]},resize:{name:"resize",category:"Matrix",syntax:["resize(x, size)","resize(x, size, defaultValue)"],description:"Resize a matrix.",examples:["resize([1,2,3,4,5], [3])","resize([1,2,3], [5])","resize([1,2,3], [5], -1)","resize(2, [2, 3])",'resize("hello", [8], "!")'],seealso:["size","subset","squeeze","reshape"]},reshape:{name:"reshape",category:"Matrix",syntax:["reshape(x, sizes)"],description:"Reshape a multi dimensional array to fit the specified dimensions.",examples:["reshape([1, 2, 3, 4, 5, 6], [2, 3])","reshape([[1, 2], [3, 4]], [1, 4])","reshape([[1, 2], [3, 4]], [4])","reshape([1, 2, 3, 4], [-1, 2])"],seealso:["size","squeeze","resize"]},rotate:{name:"rotate",category:"Matrix",syntax:["rotate(w, theta)","rotate(w, theta, v)"],description:"Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.",examples:["rotate([1, 0], pi / 2)",'rotate(matrix([1, 0]), unit("35deg"))','rotate([1, 0, 0], unit("90deg"), [0, 0, 1])','rotate(matrix([1, 0, 0]), unit("90deg"), matrix([0, 0, 1]))'],seealso:["matrix","rotationMatrix"]},rotationMatrix:{name:"rotationMatrix",category:"Matrix",syntax:["rotationMatrix(theta)","rotationMatrix(theta, v)","rotationMatrix(theta, v, format)"],description:"Returns a 2-D rotation matrix (2x2) for a given angle (in radians). Returns a 2-D rotation matrix (3x3) of a given angle (in radians) around given axis.",examples:["rotationMatrix(pi / 2)",'rotationMatrix(unit("45deg"), [0, 0, 1])','rotationMatrix(1, matrix([0, 0, 1]), "sparse")'],seealso:["cos","sin"]},row:{name:"row",category:"Matrix",syntax:["row(x, index)"],description:"Return a row from a matrix or array.",examples:["A = [[1, 2], [3, 4]]","row(A, 1)","row(A, 2)"],seealso:["column","matrixFromRows"]},size:{name:"size",category:"Matrix",syntax:["size(x)"],description:"Calculate the size of a matrix.",examples:["size(2.3)",'size("hello world")',"a = [1, 2; 3, 4; 5, 6]","size(a)","size(1:6)"],seealso:["concat","count","det","diag","identity","inv","ones","range","squeeze","subset","trace","transpose","zeros"]},sort:{name:"sort",category:"Matrix",syntax:["sort(x)","sort(x, compare)"],description:'Sort the items in a matrix. Compare can be a string "asc", "desc", "natural", or a custom sort function.',examples:["sort([5, 10, 1])",'sort(["C", "B", "A", "D"], "natural")',"sortByLength(a, b) = size(a)[1] - size(b)[1]",'sort(["Langdon", "Tom", "Sara"], sortByLength)','sort(["10", "1", "2"], "natural")'],seealso:["map","filter","forEach"]},squeeze:{name:"squeeze",category:"Matrix",syntax:["squeeze(x)"],description:"Remove inner and outer singleton dimensions from a matrix.",examples:["a = zeros(3,2,1)","size(squeeze(a))","b = zeros(1,1,3)","size(squeeze(b))"],seealso:["concat","det","diag","identity","inv","ones","range","size","subset","trace","transpose","zeros"]},subset:{name:"subset",category:"Matrix",syntax:["value(index)","value(index) = replacement","subset(value, [index])","subset(value, [index], replacement)"],description:"Get or set a subset of the entries of a matrix or characters of a string. Indexes are one-based. There should be one index specification for each dimension of the target. Each specification can be a single index, a list of indices, or a range in colon notation `l:u`. In a range, both the lower bound l and upper bound u are included; and if a bound is omitted it defaults to the most extreme valid value. The cartesian product of the indices specified in each dimension determines the target of the operation.",examples:["d = [1, 2; 3, 4]","e = []","e[1, 1:2] = [5, 6]","e[2, :] = [7, 8]","f = d * e","f[2, 1]","f[:, 1]","f[[1,2], [1,3]] = [9, 10; 11, 12]","f"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","trace","transpose","zeros"]},trace:{name:"trace",category:"Matrix",syntax:["trace(A)"],description:"Calculate the trace of a matrix: the sum of the elements on the main diagonal of a square matrix.",examples:["A = [1, 2, 3; -1, 2, 3; 2, 0, 3]","trace(A)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","transpose","zeros"]},transpose:{name:"transpose",category:"Matrix",syntax:["x'","transpose(x)"],description:"Transpose a matrix",examples:["a = [1, 2, 3; 4, 5, 6]","a'","transpose(a)"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","zeros"]},zeros:{name:"zeros",category:"Matrix",syntax:["zeros(m)","zeros(m, n)","zeros(m, n, p, ...)","zeros([m])","zeros([m, n])","zeros([m, n, p, ...])"],description:"Create a matrix containing zeros.",examples:["zeros(3)","zeros(3, 5)","a = [1, 2, 3; 4, 5, 6]","zeros(size(a))"],seealso:["concat","det","diag","identity","inv","ones","range","size","squeeze","subset","trace","transpose"]},fft:{name:"fft",category:"Matrix",syntax:["fft(x)"],description:"Calculate N-dimensional fourier transform",examples:["fft([[1, 0], [1, 0]])"],seealso:["ifft"]},ifft:{name:"ifft",category:"Matrix",syntax:["ifft(x)"],description:"Calculate N-dimensional inverse fourier transform",examples:["ifft([[2, 2], [0, 0]])"],seealso:["fft"]},sylvester:{name:"sylvester",category:"Algebra",syntax:["sylvester(A,B,C)"],description:"Solves the real-valued Sylvester equation AX+XB=C for X",examples:["sylvester([[-1, -2], [1, 1]], [[-2, 1], [-1, 2]], [[-3, 2], [3, 0]])","A = [[-1, -2], [1, 1]]; B = [[2, -1], [1, -2]]; C = [[-3, 2], [3, 0]]","sylvester(A, B, C)"],seealso:["schur","lyap"]},schur:{name:"schur",category:"Algebra",syntax:["schur(A)"],description:"Performs a real Schur decomposition of the real matrix A = UTU'",examples:["schur([[1, 0], [-4, 3]])","A = [[1, 0], [-4, 3]]","schur(A)"],seealso:["lyap","sylvester"]},lyap:{name:"lyap",category:"Algebra",syntax:["lyap(A,Q)"],description:"Solves the Continuous-time Lyapunov equation AP+PA'+Q=0 for P",examples:["lyap([[-2, 0], [1, -4]], [[3, 1], [1, 3]])","A = [[-2, 0], [1, -4]]","Q = [[3, 1], [1, 3]]","lyap(A,Q)"],seealso:["schur","sylvester"]},solveODE:{name:"solveODE",category:"Numeric",syntax:["solveODE(func, tspan, y0)","solveODE(func, tspan, y0, options)"],description:"Numerical Integration of Ordinary Differential Equations.",examples:["f(t,y) = y","tspan = [0, 4]","solveODE(f, tspan, 1)","solveODE(f, tspan, [1, 2])",'solveODE(f, tspan, 1, { method:"RK23", maxStep:0.1 })'],seealso:["derivative","simplifyCore"]},combinations:{name:"combinations",category:"Probability",syntax:["combinations(n, k)"],description:"Compute the number of combinations of n items taken k at a time",examples:["combinations(7, 5)"],seealso:["combinationsWithRep","permutations","factorial"]},combinationsWithRep:{name:"combinationsWithRep",category:"Probability",syntax:["combinationsWithRep(n, k)"],description:"Compute the number of combinations of n items taken k at a time with replacements.",examples:["combinationsWithRep(7, 5)"],seealso:["combinations","permutations","factorial"]},factorial:{name:"factorial",category:"Probability",syntax:["n!","factorial(n)"],description:"Compute the factorial of a value",examples:["5!","5 * 4 * 3 * 2 * 1","3!"],seealso:["combinations","combinationsWithRep","permutations","gamma"]},gamma:{name:"gamma",category:"Probability",syntax:["gamma(n)"],description:"Compute the gamma function. For small values, the Lanczos approximation is used, and for large values the extended Stirling approximation.",examples:["gamma(4)","3!","gamma(1/2)","sqrt(pi)"],seealso:["factorial"]},kldivergence:{name:"kldivergence",category:"Probability",syntax:["kldivergence(x, y)"],description:"Calculate the Kullback-Leibler (KL) divergence  between two distributions.",examples:["kldivergence([0.7,0.5,0.4], [0.2,0.9,0.5])"],seealso:[]},lgamma:{name:"lgamma",category:"Probability",syntax:["lgamma(n)"],description:"Logarithm of the gamma function for real, positive numbers and complex numbers, using Lanczos approximation for numbers and Stirling series for complex numbers.",examples:["lgamma(4)","lgamma(1/2)","lgamma(i)","lgamma(complex(1.1, 2))"],seealso:["gamma"]},multinomial:{name:"multinomial",category:"Probability",syntax:["multinomial(A)"],description:"Multinomial Coefficients compute the number of ways of picking a1, a2, ..., ai unordered outcomes from `n` possibilities. multinomial takes one array of integers as an argument. The following condition must be enforced: every ai > 0.",examples:["multinomial([1, 2, 1])"],seealso:["combinations","factorial"]},permutations:{name:"permutations",category:"Probability",syntax:["permutations(n)","permutations(n, k)"],description:"Compute the number of permutations of n items taken k at a time",examples:["permutations(5)","permutations(5, 3)"],seealso:["combinations","combinationsWithRep","factorial"]},pickRandom:{name:"pickRandom",category:"Probability",syntax:["pickRandom(array)","pickRandom(array, number)","pickRandom(array, weights)","pickRandom(array, number, weights)","pickRandom(array, weights, number)"],description:"Pick a random entry from a given array.",examples:["pickRandom(0:10)","pickRandom([1, 3, 1, 6])","pickRandom([1, 3, 1, 6], 2)","pickRandom([1, 3, 1, 6], [2, 3, 2, 1])","pickRandom([1, 3, 1, 6], 2, [2, 3, 2, 1])","pickRandom([1, 3, 1, 6], [2, 3, 2, 1], 2)"],seealso:["random","randomInt"]},random:{name:"random",category:"Probability",syntax:["random()","random(max)","random(min, max)","random(size)","random(size, max)","random(size, min, max)"],description:"Return a random number.",examples:["random()","random(10, 20)","random([2, 3])"],seealso:["pickRandom","randomInt"]},randomInt:{name:"randomInt",category:"Probability",syntax:["randomInt(max)","randomInt(min, max)","randomInt(size)","randomInt(size, max)","randomInt(size, min, max)"],description:"Return a random integer number",examples:["randomInt(10, 20)","randomInt([2, 3], 10)"],seealso:["pickRandom","random"]},compare:{name:"compare",category:"Relational",syntax:["compare(x, y)"],description:"Compare two values. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:["compare(2, 3)","compare(3, 2)","compare(2, 2)","compare(5cm, 40mm)","compare(2, [1, 2, 3])"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compareNatural","compareText"]},compareNatural:{name:"compareNatural",category:"Relational",syntax:["compareNatural(x, y)"],description:"Compare two values of any type in a deterministic, natural way. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:["compareNatural(2, 3)","compareNatural(3, 2)","compareNatural(2, 2)","compareNatural(5cm, 40mm)",'compareNatural("2", "10")',"compareNatural(2 + 3i, 2 + 4i)","compareNatural([1, 2, 4], [1, 2, 3])","compareNatural([1, 5], [1, 2, 3])","compareNatural([1, 2], [1, 2])","compareNatural({a: 2}, {a: 4})"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compare","compareText"]},compareText:{name:"compareText",category:"Relational",syntax:["compareText(x, y)"],description:"Compare two strings lexically. Comparison is case sensitive. Returns 1 when x > y, -1 when x < y, and 0 when x == y.",examples:['compareText("B", "A")','compareText("A", "B")','compareText("A", "A")','compareText("2", "10")','compare("2", "10")',"compare(2, 10)",'compareNatural("2", "10")','compareText("B", ["A", "B", "C"])'],seealso:["compare","compareNatural"]},deepEqual:{name:"deepEqual",category:"Relational",syntax:["deepEqual(x, y)"],description:"Check equality of two matrices element wise. Returns true if the size of both matrices is equal and when and each of the elements are equal.",examples:["deepEqual([1,3,4], [1,3,4])","deepEqual([1,3,4], [1,3])"],seealso:["equal","unequal","smaller","larger","smallerEq","largerEq","compare"]},equal:{name:"equal",category:"Relational",syntax:["x == y","equal(x, y)"],description:"Check equality of two values. Returns true if the values are equal, and false if not.",examples:["2+2 == 3","2+2 == 4","a = 3.2","b = 6-2.8","a == b","50cm == 0.5m"],seealso:["unequal","smaller","larger","smallerEq","largerEq","compare","deepEqual","equalText"]},equalText:{name:"equalText",category:"Relational",syntax:["equalText(x, y)"],description:"Check equality of two strings. Comparison is case sensitive. Returns true if the values are equal, and false if not.",examples:['equalText("Hello", "Hello")','equalText("a", "A")','equal("2e3", "2000")','equalText("2e3", "2000")','equalText("B", ["A", "B", "C"])'],seealso:["compare","compareNatural","compareText","equal"]},larger:{name:"larger",category:"Relational",syntax:["x > y","larger(x, y)"],description:"Check if value x is larger than y. Returns true if x is larger than y, and false if not.",examples:["2 > 3","5 > 2*2","a = 3.3","b = 6-2.8","(a > b)","(b < a)","5 cm > 2 inch"],seealso:["equal","unequal","smaller","smallerEq","largerEq","compare"]},largerEq:{name:"largerEq",category:"Relational",syntax:["x >= y","largerEq(x, y)"],description:"Check if value x is larger or equal to y. Returns true if x is larger or equal to y, and false if not.",examples:["2 >= 1+1","2 > 1+1","a = 3.2","b = 6-2.8","(a >= b)"],seealso:["equal","unequal","smallerEq","smaller","compare"]},smaller:{name:"smaller",category:"Relational",syntax:["x < y","smaller(x, y)"],description:"Check if value x is smaller than value y. Returns true if x is smaller than y, and false if not.",examples:["2 < 3","5 < 2*2","a = 3.3","b = 6-2.8","(a < b)","5 cm < 2 inch"],seealso:["equal","unequal","larger","smallerEq","largerEq","compare"]},smallerEq:{name:"smallerEq",category:"Relational",syntax:["x <= y","smallerEq(x, y)"],description:"Check if value x is smaller or equal to value y. Returns true if x is smaller than y, and false if not.",examples:["2 <= 1+1","2 < 1+1","a = 3.2","b = 6-2.8","(a <= b)"],seealso:["equal","unequal","larger","smaller","largerEq","compare"]},unequal:{name:"unequal",category:"Relational",syntax:["x != y","unequal(x, y)"],description:"Check unequality of two values. Returns true if the values are unequal, and false if they are equal.",examples:["2+2 != 3","2+2 != 4","a = 3.2","b = 6-2.8","a != b","50cm != 0.5m","5 cm != 2 inch"],seealso:["equal","smaller","larger","smallerEq","largerEq","compare","deepEqual"]},setCartesian:{name:"setCartesian",category:"Set",syntax:["setCartesian(set1, set2)"],description:"Create the cartesian product of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays and the values will be sorted in ascending order before the operation.",examples:["setCartesian([1, 2], [3, 4])"],seealso:["setUnion","setIntersect","setDifference","setPowerset"]},setDifference:{name:"setDifference",category:"Set",syntax:["setDifference(set1, set2)"],description:"Create the difference of two (multi)sets: every element of set1, that is not the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setDifference([1, 2, 3, 4], [3, 4, 5, 6])","setDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setIntersect","setSymDifference"]},setDistinct:{name:"setDistinct",category:"Set",syntax:["setDistinct(set)"],description:"Collect the distinct elements of a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setDistinct([1, 1, 1, 2, 2, 3])"],seealso:["setMultiplicity"]},setIntersect:{name:"setIntersect",category:"Set",syntax:["setIntersect(set1, set2)"],description:"Create the intersection of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setIntersect([1, 2, 3, 4], [3, 4, 5, 6])","setIntersect([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setDifference"]},setIsSubset:{name:"setIsSubset",category:"Set",syntax:["setIsSubset(set1, set2)"],description:"Check whether a (multi)set is a subset of another (multi)set: every element of set1 is the element of set2. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setIsSubset([1, 2], [3, 4, 5, 6])","setIsSubset([3, 4], [3, 4, 5, 6])"],seealso:["setUnion","setIntersect","setDifference"]},setMultiplicity:{name:"setMultiplicity",category:"Set",syntax:["setMultiplicity(element, set)"],description:"Count the multiplicity of an element in a multiset. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setMultiplicity(1, [1, 2, 2, 4])","setMultiplicity(2, [1, 2, 2, 4])"],seealso:["setDistinct","setSize"]},setPowerset:{name:"setPowerset",category:"Set",syntax:["setPowerset(set)"],description:"Create the powerset of a (multi)set: the powerset contains very possible subsets of a (multi)set. A multi-dimension array will be converted to a single-dimension array before the operation.",examples:["setPowerset([1, 2, 3])"],seealso:["setCartesian"]},setSize:{name:"setSize",category:"Set",syntax:["setSize(set)","setSize(set, unique)"],description:'Count the number of elements of a (multi)set. When the second parameter "unique" is true, count only the unique values. A multi-dimension array will be converted to a single-dimension array before the operation.',examples:["setSize([1, 2, 2, 4])","setSize([1, 2, 2, 4], true)"],seealso:["setUnion","setIntersect","setDifference"]},setSymDifference:{name:"setSymDifference",category:"Set",syntax:["setSymDifference(set1, set2)"],description:"Create the symmetric difference of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setSymDifference([1, 2, 3, 4], [3, 4, 5, 6])","setSymDifference([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setUnion","setIntersect","setDifference"]},setUnion:{name:"setUnion",category:"Set",syntax:["setUnion(set1, set2)"],description:"Create the union of two (multi)sets. Multi-dimension arrays will be converted to single-dimension arrays before the operation.",examples:["setUnion([1, 2, 3, 4], [3, 4, 5, 6])","setUnion([[1, 2], [3, 4]], [[3, 4], [5, 6]])"],seealso:["setIntersect","setDifference"]},zpk2tf:{name:"zpk2tf",category:"Signal",syntax:["zpk2tf(z, p, k)"],description:"Compute the transfer function of a zero-pole-gain model.",examples:["zpk2tf([1, 2], [-1, -2], 1)","zpk2tf([1, 2], [-1, -2])","zpk2tf([1 - 3i, 2 + 2i], [-1, -2])"],seealso:[]},freqz:{name:"freqz",category:"Signal",syntax:["freqz(b, a)","freqz(b, a, w)"],description:"Calculates the frequency response of a filter given its numerator and denominator coefficients.",examples:["freqz([1, 2], [1, 2, 3])","freqz([1, 2], [1, 2, 3], [0, 1])","freqz([1, 2], [1, 2, 3], 512)"],seealso:[]},erf:{name:"erf",category:"Special",syntax:["erf(x)"],description:"Compute the erf function of a value using a rational Chebyshev approximations for different intervals of x",examples:["erf(0.2)","erf(-0.5)","erf(4)"],seealso:[]},zeta:{name:"zeta",category:"Special",syntax:["zeta(s)"],description:"Compute the Riemann Zeta Function using an infinite series and Riemanns Functional Equation for the entire complex plane",examples:["zeta(0.2)","zeta(-0.5)","zeta(4)"],seealso:[]},cumsum:{name:"cumsum",category:"Statistics",syntax:["cumsum(a, b, c, ...)","cumsum(A)"],description:"Compute the cumulative sum of all values.",examples:["cumsum(2, 3, 4, 1)","cumsum([2, 3, 4, 1])","cumsum([1, 2; 3, 4])","cumsum([1, 2; 3, 4], 1)","cumsum([1, 2; 3, 4], 2)"],seealso:["max","mean","median","min","prod","std","sum","variance"]},mad:{name:"mad",category:"Statistics",syntax:["mad(a, b, c, ...)","mad(A)"],description:"Compute the median absolute deviation of a matrix or a list with values. The median absolute deviation is defined as the median of the absolute deviations from the median.",examples:["mad(10, 20, 30)","mad([1, 2, 3])"],seealso:["mean","median","std","abs"]},max:{name:"max",category:"Statistics",syntax:["max(a, b, c, ...)","max(A)","max(A, dimension)"],description:"Compute the maximum value of a list of values.",examples:["max(2, 3, 4, 1)","max([2, 3, 4, 1])","max([2, 5; 4, 3])","max([2, 5; 4, 3], 1)","max([2, 5; 4, 3], 2)","max(2.7, 7.1, -4.5, 2.0, 4.1)","min(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["mean","median","min","prod","std","sum","variance"]},mean:{name:"mean",category:"Statistics",syntax:["mean(a, b, c, ...)","mean(A)","mean(A, dimension)"],description:"Compute the arithmetic mean of a list of values.",examples:["mean(2, 3, 4, 1)","mean([2, 3, 4, 1])","mean([2, 5; 4, 3])","mean([2, 5; 4, 3], 1)","mean([2, 5; 4, 3], 2)","mean([1.0, 2.7, 3.2, 4.0])"],seealso:["max","median","min","prod","std","sum","variance"]},median:{name:"median",category:"Statistics",syntax:["median(a, b, c, ...)","median(A)"],description:"Compute the median of all values. The values are sorted and the middle value is returned. In case of an even number of values, the average of the two middle values is returned.",examples:["median(5, 2, 7)","median([3, -1, 5, 7])"],seealso:["max","mean","min","prod","std","sum","variance","quantileSeq"]},min:{name:"min",category:"Statistics",syntax:["min(a, b, c, ...)","min(A)","min(A, dimension)"],description:"Compute the minimum value of a list of values.",examples:["min(2, 3, 4, 1)","min([2, 3, 4, 1])","min([2, 5; 4, 3])","min([2, 5; 4, 3], 1)","min([2, 5; 4, 3], 2)","min(2.7, 7.1, -4.5, 2.0, 4.1)","max(2.7, 7.1, -4.5, 2.0, 4.1)"],seealso:["max","mean","median","prod","std","sum","variance"]},mode:{name:"mode",category:"Statistics",syntax:["mode(a, b, c, ...)","mode(A)","mode(A, a, b, B, c, ...)"],description:"Computes the mode of all values as an array. In case mode being more than one, multiple values are returned in an array.",examples:["mode(2, 1, 4, 3, 1)","mode([1, 2.7, 3.2, 4, 2.7])","mode(1, 4, 6, 1, 6)"],seealso:["max","mean","min","median","prod","std","sum","variance"]},prod:{name:"prod",category:"Statistics",syntax:["prod(a, b, c, ...)","prod(A)"],description:"Compute the product of all values.",examples:["prod(2, 3, 4)","prod([2, 3, 4])","prod([2, 5; 4, 3])"],seealso:["max","mean","min","median","min","std","sum","variance"]},quantileSeq:{name:"quantileSeq",category:"Statistics",syntax:["quantileSeq(A, prob[, sorted])","quantileSeq(A, [prob1, prob2, ...][, sorted])","quantileSeq(A, N[, sorted])"],description:"Compute the prob order quantile of a matrix or a list with values. The sequence is sorted and the middle value is returned. Supported types of sequence values are: Number, BigNumber, Unit Supported types of probablity are: Number, BigNumber. \n\nIn case of a (multi dimensional) array or matrix, the prob order quantile of all elements will be calculated.",examples:["quantileSeq([3, -1, 5, 7], 0.5)","quantileSeq([3, -1, 5, 7], [1/3, 2/3])","quantileSeq([3, -1, 5, 7], 2)","quantileSeq([-1, 3, 5, 7], 0.5, true)"],seealso:["mean","median","min","max","prod","std","sum","variance"]},std:{name:"std",category:"Statistics",syntax:["std(a, b, c, ...)","std(A)","std(A, dimension)","std(A, normalization)","std(A, dimension, normalization)"],description:'Compute the standard deviation of all values, defined as std(A) = sqrt(variance(A)). Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["std(2, 4, 6)","std([2, 4, 6, 8])",'std([2, 4, 6, 8], "uncorrected")','std([2, 4, 6, 8], "biased")',"std([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","prod","sum","variance"]},sum:{name:"sum",category:"Statistics",syntax:["sum(a, b, c, ...)","sum(A)","sum(A, dimension)"],description:"Compute the sum of all values.",examples:["sum(2, 3, 4, 1)","sum([2, 3, 4, 1])","sum([2, 5; 4, 3])"],seealso:["max","mean","median","min","prod","std","sum","variance"]},variance:{name:"variance",category:"Statistics",syntax:["variance(a, b, c, ...)","variance(A)","variance(A, dimension)","variance(A, normalization)","variance(A, dimension, normalization)"],description:'Compute the variance of all values. Optional parameter normalization can be "unbiased" (default), "uncorrected", or "biased".',examples:["variance(2, 4, 6)","variance([2, 4, 6, 8])",'variance([2, 4, 6, 8], "uncorrected")','variance([2, 4, 6, 8], "biased")',"variance([1, 2, 3; 4, 5, 6])"],seealso:["max","mean","min","median","min","prod","std","sum"]},acos:{name:"acos",category:"Trigonometry",syntax:["acos(x)"],description:"Compute the inverse cosine of a value in radians.",examples:["acos(0.5)","acos(cos(2.3))"],seealso:["cos","atan","asin"]},acosh:{name:"acosh",category:"Trigonometry",syntax:["acosh(x)"],description:"Calculate the hyperbolic arccos of a value, defined as `acosh(x) = ln(sqrt(x^2 - 1) + x)`.",examples:["acosh(1.5)"],seealso:["cosh","asinh","atanh"]},acot:{name:"acot",category:"Trigonometry",syntax:["acot(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acot(0.5)","acot(cot(0.5))","acot(2)"],seealso:["cot","atan"]},acoth:{name:"acoth",category:"Trigonometry",syntax:["acoth(x)"],description:"Calculate the hyperbolic arccotangent of a value, defined as `acoth(x) = (ln((x+1)/x) + ln(x/(x-1))) / 2`.",examples:["acoth(2)","acoth(0.5)"],seealso:["acsch","asech"]},acsc:{name:"acsc",category:"Trigonometry",syntax:["acsc(x)"],description:"Calculate the inverse cotangent of a value.",examples:["acsc(2)","acsc(csc(0.5))","acsc(0.5)"],seealso:["csc","asin","asec"]},acsch:{name:"acsch",category:"Trigonometry",syntax:["acsch(x)"],description:"Calculate the hyperbolic arccosecant of a value, defined as `acsch(x) = ln(1/x + sqrt(1/x^2 + 1))`.",examples:["acsch(0.5)"],seealso:["asech","acoth"]},asec:{name:"asec",category:"Trigonometry",syntax:["asec(x)"],description:"Calculate the inverse secant of a value.",examples:["asec(0.5)","asec(sec(0.5))","asec(2)"],seealso:["acos","acot","acsc"]},asech:{name:"asech",category:"Trigonometry",syntax:["asech(x)"],description:"Calculate the inverse secant of a value.",examples:["asech(0.5)"],seealso:["acsch","acoth"]},asin:{name:"asin",category:"Trigonometry",syntax:["asin(x)"],description:"Compute the inverse sine of a value in radians.",examples:["asin(0.5)","asin(sin(0.5))"],seealso:["sin","acos","atan"]},asinh:{name:"asinh",category:"Trigonometry",syntax:["asinh(x)"],description:"Calculate the hyperbolic arcsine of a value, defined as `asinh(x) = ln(x + sqrt(x^2 + 1))`.",examples:["asinh(0.5)"],seealso:["acosh","atanh"]},atan:{name:"atan",category:"Trigonometry",syntax:["atan(x)"],description:"Compute the inverse tangent of a value in radians.",examples:["atan(0.5)","atan(tan(0.5))"],seealso:["tan","acos","asin"]},atanh:{name:"atanh",category:"Trigonometry",syntax:["atanh(x)"],description:"Calculate the hyperbolic arctangent of a value, defined as `atanh(x) = ln((1 + x)/(1 - x)) / 2`.",examples:["atanh(0.5)"],seealso:["acosh","asinh"]},atan2:{name:"atan2",category:"Trigonometry",syntax:["atan2(y, x)"],description:"Computes the principal value of the arc tangent of y/x in radians.",examples:["atan2(2, 2) / pi","angle = 60 deg in rad","x = cos(angle)","y = sin(angle)","atan2(y, x)"],seealso:["sin","cos","tan"]},cos:{name:"cos",category:"Trigonometry",syntax:["cos(x)"],description:"Compute the cosine of x in radians.",examples:["cos(2)","cos(pi / 4) ^ 2","cos(180 deg)","cos(60 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["acos","sin","tan"]},cosh:{name:"cosh",category:"Trigonometry",syntax:["cosh(x)"],description:"Compute the hyperbolic cosine of x in radians.",examples:["cosh(0.5)"],seealso:["sinh","tanh","coth"]},cot:{name:"cot",category:"Trigonometry",syntax:["cot(x)"],description:"Compute the cotangent of x in radians. Defined as 1/tan(x)",examples:["cot(2)","1 / tan(2)"],seealso:["sec","csc","tan"]},coth:{name:"coth",category:"Trigonometry",syntax:["coth(x)"],description:"Compute the hyperbolic cotangent of x in radians.",examples:["coth(2)","1 / tanh(2)"],seealso:["sech","csch","tanh"]},csc:{name:"csc",category:"Trigonometry",syntax:["csc(x)"],description:"Compute the cosecant of x in radians. Defined as 1/sin(x)",examples:["csc(2)","1 / sin(2)"],seealso:["sec","cot","sin"]},csch:{name:"csch",category:"Trigonometry",syntax:["csch(x)"],description:"Compute the hyperbolic cosecant of x in radians. Defined as 1/sinh(x)",examples:["csch(2)","1 / sinh(2)"],seealso:["sech","coth","sinh"]},sec:{name:"sec",category:"Trigonometry",syntax:["sec(x)"],description:"Compute the secant of x in radians. Defined as 1/cos(x)",examples:["sec(2)","1 / cos(2)"],seealso:["cot","csc","cos"]},sech:{name:"sech",category:"Trigonometry",syntax:["sech(x)"],description:"Compute the hyperbolic secant of x in radians. Defined as 1/cosh(x)",examples:["sech(2)","1 / cosh(2)"],seealso:["coth","csch","cosh"]},sin:{name:"sin",category:"Trigonometry",syntax:["sin(x)"],description:"Compute the sine of x in radians.",examples:["sin(2)","sin(pi / 4) ^ 2","sin(90 deg)","sin(30 deg)","sin(0.2)^2 + cos(0.2)^2"],seealso:["asin","cos","tan"]},sinh:{name:"sinh",category:"Trigonometry",syntax:["sinh(x)"],description:"Compute the hyperbolic sine of x in radians.",examples:["sinh(0.5)"],seealso:["cosh","tanh"]},tan:{name:"tan",category:"Trigonometry",syntax:["tan(x)"],description:"Compute the tangent of x in radians.",examples:["tan(0.5)","sin(0.5) / cos(0.5)","tan(pi / 4)","tan(45 deg)"],seealso:["atan","sin","cos"]},tanh:{name:"tanh",category:"Trigonometry",syntax:["tanh(x)"],description:"Compute the hyperbolic tangent of x in radians.",examples:["tanh(0.5)","sinh(0.5) / cosh(0.5)"],seealso:["sinh","cosh"]},to:{name:"to",category:"Units",syntax:["x to unit","to(x, unit)"],description:"Change the unit of a value.",examples:["5 inch to cm","3.2kg to g","16 bytes in bits"],seealso:[]},clone:{name:"clone",category:"Utils",syntax:["clone(x)"],description:"Clone a variable. Creates a copy of primitive variables,and a deep copy of matrices",examples:["clone(3.5)","clone(2 - 4i)","clone(45 deg)","clone([1, 2; 3, 4])",'clone("hello world")'],seealso:[]},format:{name:"format",category:"Utils",syntax:["format(value)","format(value, precision)"],description:"Format a value of any type as string.",examples:["format(2.3)","format(3 - 4i)","format([])","format(pi, 3)"],seealso:["print"]},bin:{name:"bin",category:"Utils",syntax:["bin(value)"],description:"Format a number as binary",examples:["bin(2)"],seealso:["oct","hex"]},oct:{name:"oct",category:"Utils",syntax:["oct(value)"],description:"Format a number as octal",examples:["oct(56)"],seealso:["bin","hex"]},hex:{name:"hex",category:"Utils",syntax:["hex(value)"],description:"Format a number as hexadecimal",examples:["hex(240)"],seealso:["bin","oct"]},isNaN:{name:"isNaN",category:"Utils",syntax:["isNaN(x)"],description:"Test whether a value is NaN (not a number)",examples:["isNaN(2)","isNaN(0 / 0)","isNaN(NaN)","isNaN(Infinity)"],seealso:["isNegative","isNumeric","isPositive","isZero"]},isInteger:{name:"isInteger",category:"Utils",syntax:["isInteger(x)"],description:"Test whether a value is an integer number.",examples:["isInteger(2)","isInteger(3.5)","isInteger([3, 0.5, -2])"],seealso:["isNegative","isNumeric","isPositive","isZero"]},isNegative:{name:"isNegative",category:"Utils",syntax:["isNegative(x)"],description:"Test whether a value is negative: smaller than zero.",examples:["isNegative(2)","isNegative(0)","isNegative(-4)","isNegative([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isPositive","isZero"]},isNumeric:{name:"isNumeric",category:"Utils",syntax:["isNumeric(x)"],description:"Test whether a value is a numeric value. Returns true when the input is a number, BigNumber, Fraction, or boolean.",examples:["isNumeric(2)",'isNumeric("2")','hasNumericValue("2")',"isNumeric(0)","isNumeric(bignumber(500))","isNumeric(fraction(0.125))","isNumeric(2 + 3i)",'isNumeric([2.3, "foo", false])'],seealso:["isInteger","isZero","isNegative","isPositive","isNaN","hasNumericValue"]},hasNumericValue:{name:"hasNumericValue",category:"Utils",syntax:["hasNumericValue(x)"],description:"Test whether a value is an numeric value. In case of a string, true is returned if the string contains a numeric value.",examples:["hasNumericValue(2)",'hasNumericValue("2")','isNumeric("2")',"hasNumericValue(0)","hasNumericValue(bignumber(500))","hasNumericValue(fraction(0.125))","hasNumericValue(2 + 3i)",'hasNumericValue([2.3, "foo", false])'],seealso:["isInteger","isZero","isNegative","isPositive","isNaN","isNumeric"]},isPositive:{name:"isPositive",category:"Utils",syntax:["isPositive(x)"],description:"Test whether a value is positive: larger than zero.",examples:["isPositive(2)","isPositive(0)","isPositive(-4)","isPositive([3, 0.5, -2])"],seealso:["isInteger","isNumeric","isNegative","isZero"]},isPrime:{name:"isPrime",category:"Utils",syntax:["isPrime(x)"],description:"Test whether a value is prime: has no divisors other than itself and one.",examples:["isPrime(3)","isPrime(-2)","isPrime([2, 17, 100])"],seealso:["isInteger","isNumeric","isNegative","isZero"]},isZero:{name:"isZero",category:"Utils",syntax:["isZero(x)"],description:"Test whether a value is zero.",examples:["isZero(2)","isZero(0)","isZero(-4)","isZero([3, 0, -2, 0])"],seealso:["isInteger","isNumeric","isNegative","isPositive"]},print:{name:"print",category:"Utils",syntax:["print(template, values)","print(template, values, precision)"],description:"Interpolate values into a string template.",examples:['print("Lucy is $age years old", {age: 5})','print("The value of pi is $pi", {pi: pi}, 3)','print("Hello, $user.name!", {user: {name: "John"}})','print("Values: $0, $1, $2", [6, 9, 4])'],seealso:["format"]},typeOf:{name:"typeOf",category:"Utils",syntax:["typeOf(x)"],description:"Get the type of a variable.",examples:["typeOf(3.5)","typeOf(2 - 4i)","typeOf(45 deg)",'typeOf("hello world")'],seealso:["getMatrixDataType"]},numeric:{name:"numeric",category:"Utils",syntax:["numeric(x)"],description:"Convert a numeric input to a specific numeric type: number, BigNumber, or Fraction.",examples:['numeric("4")','numeric("4", "number")','numeric("4", "BigNumber")','numeric("4", "Fraction")','numeric(4, "Fraction")','numeric(fraction(2, 5), "number")'],seealso:["number","fraction","bignumber","string","format"]}},ll=(0,W.d5)("help",["typed","mathWithTransform","Help"],v=>{var{typed:f,mathWithTransform:p,Help:m}=v;return f("help",{any:function(r){var t,i=r;if("string"!=typeof r)for(t in p)if((0,J.nr)(p,t)&&r===p[t]){i=t;break}var s=(0,fe.YF)(sl,i);if(!s)throw new Error('No documentation found on "'+("function"==typeof i?i.name:i)+'"');return new m(s)}})}),ml=(0,W.d5)("Parser",["evaluate"],v=>{var{evaluate:f}=v;function p(){if(!(this instanceof p))throw new SyntaxError("Constructor must be called with the new operator");Object.defineProperty(this,"scope",{value:(0,xe.dg)(),writable:!1})}return p.prototype.type="Parser",p.prototype.isParser=!0,p.prototype.evaluate=function(m){return f(m,this.scope)},p.prototype.get=function(m){if(this.scope.has(m))return this.scope.get(m)},p.prototype.getAll=function(){return(0,xe.ru)(this.scope)},p.prototype.getAllAsMap=function(){return this.scope},p.prototype.set=function(m,o){return this.scope.set(m,o),o},p.prototype.remove=function(m){this.scope.delete(m)},p.prototype.clear=function(){this.scope.clear()},p},{isClass:!0});function nt(v){return(0,h.nu)(v)||(0,h.bV)(v)&&v.isUnary()&&(0,h.nu)(v.args[0])}function Ar(v){return!!((0,h.nu)(v)||((0,h.VO)(v)||(0,h.bV)(v))&&v.args.every(Ar)||(0,h.Ig)(v)&&Ar(v.content))}var dl=(0,W.d5)("simplify",["config","typed","parse","add","subtract","multiply","divide","pow","isZero","equal","resolve","simplifyConstant","simplifyCore","?fraction","?bignumber","mathWithTransform","matrix","AccessorNode","ArrayNode","ConstantNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","ParenthesisNode","SymbolNode"],v=>{var{typed:p,parse:m,equal:l,resolve:g,simplifyConstant:x,simplifyCore:C,AccessorNode:se,ArrayNode:y,ConstantNode:S,FunctionNode:d,IndexNode:w,ObjectNode:N,OperatorNode:T,ParenthesisNode:j,SymbolNode:$}=v,{hasProperty:M,isCommutative:k,isAssociative:B,mergeContext:ae,flatten:D,unflattenr:c,unflattenl:z,createMakeNodeFunction:H,defaultContext:V,realContext:_,positiveContext:Y}=Rr({FunctionNode:d,OperatorNode:T,SymbolNode:$});p.addConversion({from:"Object",to:"Map",convert:xe.df});var q=p("simplify",{Node:K,"Node, Map":(E,O)=>K(E,!1,O),"Node, Map, Object":(E,O,P)=>K(E,!1,O,P),"Node, Array":K,"Node, Array, Map":K,"Node, Array, Map, Object":K});function R(E){return E.transform(function(O,P,Q){return(0,h.Ig)(O)?R(O.content):O})}p.removeConversion({from:"Object",to:"Map",convert:xe.df}),q.defaultContext=V,q.realContext=_,q.positiveContext=Y;var ne={true:!0,false:!0,e:!0,i:!0,Infinity:!0,LN2:!0,LN10:!0,LOG2E:!0,LOG10E:!0,NaN:!0,phi:!0,pi:!0,SQRT1_2:!0,SQRT2:!0,tau:!0};function ce(E,O){var P={};if(E.s){var Q=E.s.split("->");if(2!==Q.length)throw SyntaxError("Could not parse rule: "+E.s);P.l=Q[0],P.r=Q[1]}else P.l=E.l,P.r=E.r;for(var Z of(P.l=R(m(P.l)),P.r=R(m(P.r)),["imposeContext","repeat","assuming"]))Z in E&&(P[Z]=E[Z]);if(E.evaluate&&(P.evaluate=m(E.evaluate)),B(P.l,O)){var L,X=!k(P.l,O);X&&(L=be());var he=H(P.l),Ne=be();P.expanded={},P.expanded.l=he([P.l,Ne]),D(P.expanded.l,O),c(P.expanded.l,O),P.expanded.r=he([P.r,Ne]),X&&(P.expandedNC1={},P.expandedNC1.l=he([L,P.l]),P.expandedNC1.r=he([L,P.r]),P.expandedNC2={},P.expandedNC2.l=he([L,P.expanded.l]),P.expandedNC2.r=he([L,P.expanded.r]))}return P}q.rules=[C,{l:"log(e)",r:"1"},{s:"n-n1 -> n+-n1",assuming:{subtract:{total:!0}}},{s:"n-n -> 0",assuming:{subtract:{total:!1}}},{s:"-(cl*v) -> v * (-cl)",assuming:{multiply:{commutative:!0},subtract:{total:!0}}},{s:"-(cl*v) -> (-cl) * v",assuming:{multiply:{commutative:!1},subtract:{total:!0}}},{s:"-(v*cl) -> v * (-cl)",assuming:{multiply:{commutative:!1},subtract:{total:!0}}},{l:"-(n1/n2)",r:"-n1/n2"},{l:"-v",r:"v * (-1)"},{l:"(n1 + n2)*(-1)",r:"n1*(-1) + n2*(-1)",repeat:!0},{l:"n/n1^n2",r:"n*n1^-n2"},{l:"n/n1",r:"n*n1^-1"},{s:"(n1*n2)^n3 -> n1^n3 * n2^n3",assuming:{multiply:{commutative:!0}}},{s:"(n1*n2)^(-1) -> n2^(-1) * n1^(-1)",assuming:{multiply:{commutative:!1}}},{s:"(n ^ n1) ^ n2 -> n ^ (n1 * n2)",assuming:{divide:{total:!0}}},{l:" vd   * ( vd   * n1 + n2)",r:"vd^2       * n1 +  vd   * n2"},{s:" vd   * (vd^n4 * n1 + n2)   ->  vd^(1+n4)  * n1 +  vd   * n2",assuming:{divide:{total:!0}}},{s:"vd^n3 * ( vd   * n1 + n2)   ->  vd^(n3+1)  * n1 + vd^n3 * n2",assuming:{divide:{total:!0}}},{s:"vd^n3 * (vd^n4 * n1 + n2)   ->  vd^(n3+n4) * n1 + vd^n3 * n2",assuming:{divide:{total:!0}}},{l:"n*n",r:"n^2"},{s:"n * n^n1 -> n^(n1+1)",assuming:{divide:{total:!0}}},{s:"n^n1 * n^n2 -> n^(n1+n2)",assuming:{divide:{total:!0}}},x,{s:"n+n -> 2*n",assuming:{add:{total:!0}}},{l:"n+-n",r:"0"},{l:"vd*n + vd",r:"vd*(n+1)"},{l:"n3*n1 + n3*n2",r:"n3*(n1+n2)"},{l:"n3^(-n4)*n1 +   n3  * n2",r:"n3^(-n4)*(n1 + n3^(n4+1) *n2)"},{l:"n3^(-n4)*n1 + n3^n5 * n2",r:"n3^(-n4)*(n1 + n3^(n4+n5)*n2)"},{s:"n*vd + vd -> (n+1)*vd",assuming:{multiply:{commutative:!1}}},{s:"vd + n*vd -> (1+n)*vd",assuming:{multiply:{commutative:!1}}},{s:"n1*n3 + n2*n3 -> (n1+n2)*n3",assuming:{multiply:{commutative:!1}}},{s:"n^n1 * n -> n^(n1+1)",assuming:{divide:{total:!0},multiply:{commutative:!1}}},{s:"n1*n3^(-n4) + n2 * n3    -> (n1 + n2*n3^(n4 +  1))*n3^(-n4)",assuming:{multiply:{commutative:!1}}},{s:"n1*n3^(-n4) + n2 * n3^n5 -> (n1 + n2*n3^(n4 + n5))*n3^(-n4)",assuming:{multiply:{commutative:!1}}},{l:"n*cd + cd",r:"(n+1)*cd"},{s:"cd*n + cd -> cd*(n+1)",assuming:{multiply:{commutative:!1}}},{s:"cd + cd*n -> cd*(1+n)",assuming:{multiply:{commutative:!1}}},x,{s:"(-n)*n1 -> -(n*n1)",assuming:{subtract:{total:!0}}},{s:"n1*(-n) -> -(n1*n)",assuming:{subtract:{total:!0},multiply:{commutative:!1}}},{s:"ce+ve -> ve+ce",assuming:{add:{commutative:!0}},imposeContext:{add:{commutative:!1}}},{s:"vd*cd -> cd*vd",assuming:{multiply:{commutative:!0}},imposeContext:{multiply:{commutative:!1}}},{l:"n+-n1",r:"n-n1"},{l:"n+-(n1)",r:"n-(n1)"},{s:"n*(n1^-1) -> n/n1",assuming:{multiply:{commutative:!0}}},{s:"n*n1^-n2 -> n/n1^n2",assuming:{multiply:{commutative:!0}}},{s:"n^-1 -> 1/n",assuming:{multiply:{commutative:!0}}},{l:"n^1",r:"n"},{s:"n*(n1/n2) -> (n*n1)/n2",assuming:{multiply:{associative:!0}}},{s:"n-(n1+n2) -> n-n1-n2",assuming:{addition:{associative:!0,commutative:!0}}},{l:"1*n",r:"n",imposeContext:{multiply:{commutative:!0}}},{s:"n1/(n2/n3) -> (n1*n3)/n2",assuming:{multiply:{associative:!0}}},{l:"n1/(-n2)",r:"-n1/n2"}];var ye=0;function be(){return new $("_p"+ye++)}function K(E,O){var P=arguments.length>2&&void 0!==arguments[2]?arguments[2]:(0,xe.dg)(),Q=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},Z=Q.consoleDebug;O=function oe(E,O){for(var P=[],Q=0;Q<E.length;Q++){var Z=E[Q],X=void 0,L=typeof Z;switch(L){case"string":Z={s:Z};case"object":X=ce(Z,O);break;case"function":X=Z;break;default:throw TypeError("Unsupported type of rule: "+L)}P.push(X)}return P}(O||q.rules,Q.context);for(var X=g(E,P),L={},he=(X=R(X)).toString({parenthesis:"all"});!L[he];){L[he]=!0,ye=0;var Ne=he;Z&&console.log("Working on: ",he);for(var Se=0;Se<O.length;Se++){var Me="";if("function"==typeof O[Se]?(X=O[Se](X,Q),Z&&(Me=O[Se].name)):(D(X,Q.context),X=re(X,O[Se],Q.context),Z&&(Me="".concat(O[Se].l.toString()," -> ").concat(O[Se].r.toString()))),Z){var qe=X.toString({parenthesis:"all"});qe!==Ne&&(console.log("Applying",Me,"produced",qe),Ne=qe)}z(X,Q.context)}he=X.toString({parenthesis:"all"})}return X}function me(E,O,P){var Q=E;if(E)for(var Z=0;Z<E.length;++Z){var X=re(E[Z],O,P);X!==E[Z]&&(Q===E&&(Q=E.slice()),Q[Z]=X)}return Q}function re(E,O,P){if(O.assuming)for(var Q in O.assuming)for(var Z in O.assuming[Q])if(M(Q,Z,P)!==O.assuming[Q][Z])return E;var X=ae(O.imposeContext,P),L=E;if(L instanceof T||L instanceof d){var he=me(L.args,O,P);he!==L.args&&((L=L.clone()).args=he)}else if(L instanceof j){if(L.content){var Ne=re(L.content,O,P);Ne!==L.content&&(L=new j(Ne))}}else if(L instanceof y){var Se=me(L.items,O,P);Se!==L.items&&(L=new y(Se))}else if(L instanceof se){var Me=L.object;L.object&&(Me=re(L.object,O,P));var qe=L.index;L.index&&(qe=re(L.index,O,P)),(Me!==L.object||qe!==L.index)&&(L=new se(Me,qe))}else if(L instanceof w){var Ue=me(L.dimensions,O,P);Ue!==L.dimensions&&(L=new w(Ue))}else if(L instanceof N){var or=!1,pr={};for(var lr in L.properties)pr[lr]=re(L.properties[lr],O,P),pr[lr]!==L.properties[lr]&&(or=!0);or&&(L=new N(pr))}var Ke=O.r,ze=Re(O.l,L,X)[0];if(!ze&&O.expanded&&(Ke=O.expanded.r,ze=Re(O.expanded.l,L,X)[0]),!ze&&O.expandedNC1&&(Ke=O.expandedNC1.r,(ze=Re(O.expandedNC1.l,L,X)[0])||(Ke=O.expandedNC2.r,ze=Re(O.expandedNC2.l,L,X)[0])),ze){var ve=L.implicit;L=Ke.clone(),ve&&"implicit"in Ke&&(L.implicit=!0),L=L.transform(function(er){return er.isSymbolNode&&(0,J.nr)(ze.placeholders,er.name)?ze.placeholders[er.name].clone():er})}return O.repeat&&L!==E&&(L=re(L,O,P)),L}function je(E,O){var P={placeholders:{}};if(!E.placeholders&&!O.placeholders)return P;if(!E.placeholders)return O;if(!O.placeholders)return E;for(var Q in E.placeholders)if((0,J.nr)(E.placeholders,Q)&&(P.placeholders[Q]=E.placeholders[Q],(0,J.nr)(O.placeholders,Q)&&!mr(E.placeholders[Q],O.placeholders[Q])))return null;for(var Z in O.placeholders)(0,J.nr)(O.placeholders,Z)&&(P.placeholders[Z]=O.placeholders[Z]);return P}function Ae(E,O){var P=[];if(0===E.length||0===O.length)return P;for(var Q,Z=0;Z<E.length;Z++)for(var X=0;X<O.length;X++)(Q=je(E[Z],O[X]))&&P.push(Q);return P}function Re(E,O,P,Q){var Z=[{placeholders:{}}];if(E instanceof T&&O instanceof T||E instanceof d&&O instanceof d){if(E instanceof T){if(E.op!==O.op||E.fn!==O.fn)return[]}else if(E instanceof d&&E.name!==O.name)return[];if(!(1===O.args.length&&1===E.args.length||!B(O,P)&&O.args.length===E.args.length||Q)){if(O.args.length>=2&&2===E.args.length){for(var Me=function Ie(E,O){var Q,Z,P=[],X=H(E);if(k(E,O))for(var L=0;L<E.args.length;L++)(Z=E.args.slice(0)).splice(L,1),Q=1===Z.length?Z[0]:X(Z),P.push(X([E.args[L],Q]));else for(var he=1;he<E.args.length;he++){var Ne=E.args[0];he>1&&(Ne=X(E.args.slice(0,he))),Q=1===(Z=E.args.slice(he)).length?Z[0]:X(Z),P.push(X([Ne,Q]))}return P}(O,P),qe=[],Ue=0;Ue<Me.length;Ue++){var or=Re(E,Me[Ue],P,!0);qe=qe.concat(or)}return qe}if(E.args.length>2)throw Error("Unexpected non-binary associative function: "+E.toString());return[]}for(var X=[],L=0;L<E.args.length;L++){var he=Re(E.args[L],O.args[L],P);if(0===he.length)break;X.push(he)}if(X.length!==E.args.length){if(!k(O,P)||1===E.args.length)return[];if(E.args.length>2)throw new Error("permuting >2 commutative non-associative rule arguments not yet implemented");var Ne=Re(E.args[0],O.args[1],P);if(0===Ne.length)return[];var Se=Re(E.args[1],O.args[0],P);if(0===Se.length)return[];X=[Ne,Se]}Z=function Ze(E){if(0===E.length)return E;for(var O=E.reduce(Ae),P=[],Q={},Z=0;Z<O.length;Z++){var X=JSON.stringify(O[Z]);Q[X]||(Q[X]=!0,P.push(O[Z]))}return P}(X)}else if(E instanceof $){if(0===E.name.length)throw new Error("Symbol in rule has 0 length...!?");if(ne[E.name]){if(E.name!==O.name)return[]}else switch(E.name[1]>="a"&&E.name[1]<="z"?E.name.substring(0,2):E.name[0]){case"n":case"_p":Z[0].placeholders[E.name]=O;break;case"c":case"cl":if(!(0,h.nu)(O))return[];Z[0].placeholders[E.name]=O;break;case"v":if((0,h.nu)(O))return[];Z[0].placeholders[E.name]=O;break;case"vl":if(!(0,h.FG)(O))return[];Z[0].placeholders[E.name]=O;break;case"cd":if(!nt(O))return[];Z[0].placeholders[E.name]=O;break;case"vd":if(nt(O))return[];Z[0].placeholders[E.name]=O;break;case"ce":if(!Ar(O))return[];Z[0].placeholders[E.name]=O;break;case"ve":if(Ar(O))return[];Z[0].placeholders[E.name]=O;break;default:throw new Error("Invalid symbol in rule: "+E.name)}}else{if(!(E instanceof S))return[];if(!l(E.value,O.value))return[]}return Z}function mr(E,O){if(E instanceof S&&O instanceof S){if(!l(E.value,O.value))return!1}else if(E instanceof $&&O instanceof $){if(E.name!==O.name)return!1}else{if(!(E instanceof T&&O instanceof T||E instanceof d&&O instanceof d))return!1;if(E instanceof T){if(E.op!==O.op||E.fn!==O.fn)return!1}else if(E instanceof d&&E.name!==O.name)return!1;if(E.args.length!==O.args.length)return!1;for(var P=0;P<E.args.length;P++)if(!mr(E.args[P],O.args[P]))return!1}return!0}return q}),it="symbolicEqual",vl=(0,W.d5)(it,["parse","simplify","typed","OperatorNode"],v=>{var{simplify:p,typed:m,OperatorNode:o}=v;function r(t,i){var s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=new o("-","subtract",[t,i]),l=p(n,{},s);return(0,h.nu)(l)&&!l.value}return m(it,{"Node, Node":r,"Node, Node, Object":r})}),st="derivative",yl=(0,W.d5)(st,["typed","config","parse","simplify","equal","isZero","numeric","ConstantNode","FunctionNode","OperatorNode","ParenthesisNode","SymbolNode"],v=>{var{typed:f,config:p,parse:m,simplify:o,equal:r,isZero:t,numeric:i,ConstantNode:s,FunctionNode:n,OperatorNode:l,ParenthesisNode:g,SymbolNode:x}=v;function C(S,d){var w=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{simplify:!0},N={};I(N,S,d.name);var T=G(S,N);return w.simplify?o(T):T}f.addConversion({from:"identifier",to:"SymbolNode",convert:m});var A=f(st,{"Node, SymbolNode":C,"Node, SymbolNode, Object":C});f.removeConversion({from:"identifier",to:"SymbolNode",convert:m}),A._simplify=!0,A.toTex=function(S){return U.apply(null,S.args)};var U=f("_derivTex",{"Node, SymbolNode":function(d,w){return(0,h.nu)(d)&&"string"===(0,h.kM)(d.value)?U(m(d.value).toString(),w.toString(),1):U(d.toTex(),w.toString(),1)},"Node, ConstantNode":function(d,w){if("string"===(0,h.kM)(w.value))return U(d,m(w.value));throw new Error("The second parameter to 'derivative' is a non-string constant")},"Node, SymbolNode, ConstantNode":function(d,w,N){return U(d.toString(),w.name,N.value)},"string, string, number":function(d,w,N){return(1===N?"{d\\over d"+w+"}":"{d^{"+N+"}\\over d"+w+"^{"+N+"}}")+"\\left[".concat(d,"\\right]")}}),I=f("constTag",{"Object, ConstantNode, string":function(d,w){return d[w]=!0,!0},"Object, SymbolNode, string":function(d,w,N){return w.name!==N&&(d[w]=!0,!0)},"Object, ParenthesisNode, string":function(d,w,N){return I(d,w.content,N)},"Object, FunctionAssignmentNode, string":function(d,w,N){return-1===w.params.indexOf(N)?(d[w]=!0,!0):I(d,w.expr,N)},"Object, FunctionNode | OperatorNode, string":function(d,w,N){if(w.args.length>0){for(var T=I(d,w.args[0],N),j=1;j<w.args.length;++j)T=I(d,w.args[j],N)&&T;if(T)return d[w]=!0,!0}return!1}}),G=f("_derivative",{"ConstantNode, Object":function(d){return y(0)},"SymbolNode, Object":function(d,w){return y(void 0!==w[d]?0:1)},"ParenthesisNode, Object":function(d,w){return new g(G(d.content,w))},"FunctionAssignmentNode, Object":function(d,w){return void 0!==w[d]?y(0):G(d.expr,w)},"FunctionNode, Object":function(d,w){if(1!==d.args.length&&function se(S){if("log"!==S.name&&"nthRoot"!==S.name&&"pow"!==S.name||2!==S.args.length){for(var d=0;d<S.args.length;++d)S.args[d]=y(0);throw S.compile().evaluate(),new Error("Expected TypeError, but none found")}}(d),void 0!==w[d])return y(0);var T,M,k,B,N=d.args[0],j=!1,$=!1;switch(d.name){case"cbrt":j=!0,M=new l("*","multiply",[y(3),new l("^","pow",[N,new l("/","divide",[y(2),y(3)])])]);break;case"sqrt":case"nthRoot":if(1===d.args.length)j=!0,M=new l("*","multiply",[y(2),new n("sqrt",[N])]);else if(2===d.args.length)return w[T=new l("/","divide",[y(1),d.args[1]])]=w[d.args[1]],G(new l("^","pow",[N,T]),w);break;case"log10":T=y(10);case"log":if(T||1!==d.args.length){if(1===d.args.length&&T||2===d.args.length&&void 0!==w[d.args[1]])M=new l("*","multiply",[N.clone(),new n("log",[T||d.args[1]])]),j=!0;else if(2===d.args.length)return G(new l("/","divide",[new n("log",[N]),new n("log",[d.args[1]])]),w)}else M=N.clone(),j=!0;break;case"pow":return w[T]=w[d.args[1]],G(new l("^","pow",[N,d.args[1]]),w);case"exp":M=new n("exp",[N.clone()]);break;case"sin":M=new n("cos",[N.clone()]);break;case"cos":M=new l("-","unaryMinus",[new n("sin",[N.clone()])]);break;case"tan":M=new l("^","pow",[new n("sec",[N.clone()]),y(2)]);break;case"sec":M=new l("*","multiply",[d,new n("tan",[N.clone()])]);break;case"csc":$=!0,M=new l("*","multiply",[d,new n("cot",[N.clone()])]);break;case"cot":$=!0,M=new l("^","pow",[new n("csc",[N.clone()]),y(2)]);break;case"asin":j=!0,M=new n("sqrt",[new l("-","subtract",[y(1),new l("^","pow",[N.clone(),y(2)])])]);break;case"acos":j=!0,$=!0,M=new n("sqrt",[new l("-","subtract",[y(1),new l("^","pow",[N.clone(),y(2)])])]);break;case"atan":j=!0,M=new l("+","add",[new l("^","pow",[N.clone(),y(2)]),y(1)]);break;case"asec":j=!0,M=new l("*","multiply",[new n("abs",[N.clone()]),new n("sqrt",[new l("-","subtract",[new l("^","pow",[N.clone(),y(2)]),y(1)])])]);break;case"acsc":j=!0,$=!0,M=new l("*","multiply",[new n("abs",[N.clone()]),new n("sqrt",[new l("-","subtract",[new l("^","pow",[N.clone(),y(2)]),y(1)])])]);break;case"acot":j=!0,$=!0,M=new l("+","add",[new l("^","pow",[N.clone(),y(2)]),y(1)]);break;case"sinh":M=new n("cosh",[N.clone()]);break;case"cosh":M=new n("sinh",[N.clone()]);break;case"tanh":M=new l("^","pow",[new n("sech",[N.clone()]),y(2)]);break;case"sech":$=!0,M=new l("*","multiply",[d,new n("tanh",[N.clone()])]);break;case"csch":$=!0,M=new l("*","multiply",[d,new n("coth",[N.clone()])]);break;case"coth":$=!0,M=new l("^","pow",[new n("csch",[N.clone()]),y(2)]);break;case"asinh":j=!0,M=new n("sqrt",[new l("+","add",[new l("^","pow",[N.clone(),y(2)]),y(1)])]);break;case"acosh":j=!0,M=new n("sqrt",[new l("-","subtract",[new l("^","pow",[N.clone(),y(2)]),y(1)])]);break;case"atanh":j=!0,M=new l("-","subtract",[y(1),new l("^","pow",[N.clone(),y(2)])]);break;case"asech":j=!0,$=!0,M=new l("*","multiply",[N.clone(),new n("sqrt",[new l("-","subtract",[y(1),new l("^","pow",[N.clone(),y(2)])])])]);break;case"acsch":j=!0,$=!0,M=new l("*","multiply",[new n("abs",[N.clone()]),new n("sqrt",[new l("+","add",[new l("^","pow",[N.clone(),y(2)]),y(1)])])]);break;case"acoth":j=!0,$=!0,M=new l("-","subtract",[y(1),new l("^","pow",[N.clone(),y(2)])]);break;case"abs":M=new l("/","divide",[new n(new x("abs"),[N.clone()]),N.clone()]);break;default:throw new Error('Function "'+d.name+'" is not supported by derivative, or a wrong number of arguments is passed')}j?(k="/",B="divide"):(k="*",B="multiply");var ae=G(N,w);return $&&(ae=new l("-","unaryMinus",[ae])),new l(k,B,[ae,M])},"OperatorNode, Object":function(d,w){if(void 0!==w[d])return y(0);if("+"===d.op)return new l(d.op,d.fn,d.args.map(function(c){return G(c,w)}));if("-"===d.op){if(d.isUnary())return new l(d.op,d.fn,[G(d.args[0],w)]);if(d.isBinary())return new l(d.op,d.fn,[G(d.args[0],w),G(d.args[1],w)])}if("*"===d.op){var N=d.args.filter(function(c){return void 0!==w[c]});if(N.length>0){var T=d.args.filter(function(c){return void 0===w[c]}),j=1===T.length?T[0]:new l("*","multiply",T),$=N.concat(G(j,w));return new l("*","multiply",$)}return new l("+","add",d.args.map(function(c){return new l("*","multiply",d.args.map(function(z){return z===c?G(z,w):z.clone()}))}))}if("/"===d.op&&d.isBinary()){var M=d.args[0],k=d.args[1];return void 0!==w[k]?new l("/","divide",[G(M,w),k]):void 0!==w[M]?new l("*","multiply",[new l("-","unaryMinus",[M]),new l("/","divide",[G(k,w),new l("^","pow",[k.clone(),y(2)])])]):new l("/","divide",[new l("-","subtract",[new l("*","multiply",[G(M,w),k.clone()]),new l("*","multiply",[M.clone(),G(k,w)])]),new l("^","pow",[k.clone(),y(2)])])}if("^"===d.op&&d.isBinary()){var B=d.args[0],ae=d.args[1];if(void 0!==w[B])return(0,h.nu)(B)&&(t(B.value)||r(B.value,1))?y(0):new l("*","multiply",[d,new l("*","multiply",[new n("log",[B.clone()]),G(ae.clone(),w)])]);if(void 0!==w[ae]){if((0,h.nu)(ae)){if(t(ae.value))return y(0);if(r(ae.value,1))return G(B,w)}var D=new l("^","pow",[B.clone(),new l("-","subtract",[ae,y(1)])]);return new l("*","multiply",[ae.clone(),new l("*","multiply",[G(B,w),D])])}return new l("*","multiply",[new l("^","pow",[B.clone(),ae.clone()]),new l("+","add",[new l("*","multiply",[G(B,w),new l("/","divide",[ae.clone(),B.clone()])]),new l("*","multiply",[G(ae,w),new n("log",[B.clone()])])])])}throw new Error('Operator "'+d.op+'" is not supported by derivative, or a wrong number of arguments is passed')}});function y(S,d){return new s(i(S,d||p.number))}return A}),bl=(0,W.d5)("parser",["typed","Parser"],v=>{var{typed:f,Parser:p}=v;return f("parser",{"":function(){return new p}})}),Pr=ee(60196),lt="rationalize",Nl=(0,W.d5)(lt,["config","typed","equal","isZero","add","subtract","multiply","divide","pow","parse","simplifyConstant","simplifyCore","simplify","?bignumber","?fraction","mathWithTransform","matrix","AccessorNode","ArrayNode","ConstantNode","FunctionNode","IndexNode","ObjectNode","OperatorNode","SymbolNode","ParenthesisNode"],v=>{var{typed:p,simplifyConstant:g,simplifyCore:x,simplify:C,ConstantNode:S,OperatorNode:T,SymbolNode:j}=v;function M(c){var z=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},H=arguments.length>2&&void 0!==arguments[2]&&arguments[2],V=function B(){var c=[x,{l:"n+n",r:"2*n"},{l:"n+-n",r:"0"},g,{l:"n*(n1^-1)",r:"n/n1"},{l:"n*n1^-n2",r:"n/n1^n2"},{l:"n1^-1",r:"1/n1"},{l:"n*(n1/n2)",r:"(n*n1)/n2"},{l:"1*n",r:"n"}],z=[{l:"(-n1)/(-n2)",r:"n1/n2"},{l:"(-n1)*(-n2)",r:"n1*n2"},{l:"n1--n2",r:"n1+n2"},{l:"n1-n2",r:"n1+(-n2)"},{l:"(n1+n2)*n3",r:"(n1*n3 + n2*n3)"},{l:"n1*(n2+n3)",r:"(n1*n2+n1*n3)"},{l:"c1*n + c2*n",r:"(c1+c2)*n"},{l:"c1*n + n",r:"(c1+1)*n"},{l:"c1*n - c2*n",r:"(c1-c2)*n"},{l:"c1*n - n",r:"(c1-1)*n"},{l:"v/c",r:"(1/c)*v"},{l:"v/-c",r:"-(1/c)*v"},{l:"-v*-c",r:"c*v"},{l:"-v*c",r:"-c*v"},{l:"v*-c",r:"-c*v"},{l:"v*c",r:"c*v"},{l:"-(-n1*n2)",r:"(n1*n2)"},{l:"-(n1*n2)",r:"(-n1*n2)"},{l:"-(-n1+n2)",r:"(n1-n2)"},{l:"-(n1+n2)",r:"(-n1-n2)"},{l:"(n1^n2)^n3",r:"(n1^(n2*n3))"},{l:"-(-n1/n2)",r:"(n1/n2)"},{l:"-(n1/n2)",r:"(-n1/n2)"}],V=[{l:"(n1/(n2/n3))",r:"((n1*n3)/n2)"},{l:"(n1/n2/n3)",r:"(n1/(n2*n3))"}],_={};return _.firstRules=c.concat(z,V),_.distrDivRules=[{l:"(n1/n2 + n3/n4)",r:"((n1*n4 + n3*n2)/(n2*n4))"},{l:"(n1/n2 + n3)",r:"((n1 + n3*n2)/n2)"},{l:"(n1 + n2/n3)",r:"((n1*n3 + n2)/n3)"}],_.sucDivRules=V,_.firstRulesAgain=c.concat(z),_.finalRules=[x,{l:"n*-n",r:"-n^2"},{l:"n*n",r:"n^2"},g,{l:"n*-n^n1",r:"-n^(n1+1)"},{l:"n*n^n1",r:"n^(n1+1)"},{l:"n^n1*-n^n2",r:"-n^(n1+n2)"},{l:"n^n1*n^n2",r:"n^(n1+n2)"},{l:"n^n1*-n",r:"-n^(n1+1)"},{l:"n^n1*n",r:"n^(n1+1)"},{l:"n^n1/-n",r:"-n^(n1-1)"},{l:"n^n1/n",r:"n^(n1-1)"},{l:"n/-n^n1",r:"-n^(1-n1)"},{l:"n/n^n1",r:"n^(1-n1)"},{l:"n^n1/-n^n2",r:"n^(n1-n2)"},{l:"n^n1/n^n2",r:"n^(n1-n2)"},{l:"n1+(-n2*n3)",r:"n1-n2*n3"},{l:"v*(-c)",r:"-c*v"},{l:"n1+-n2",r:"n1-n2"},{l:"v*c",r:"c*v"},{l:"(n1^n2)^n3",r:"(n1^(n2*n3))"}],_}(),_=function k(c,z,H,V){var _=[],Y=C(c,V,z,{exactFractions:!1}),q="+-*"+((H=!!H)?"/":"");!function ne(ce){var oe=ce.type;if("FunctionNode"===oe)throw new Error("There is an unsolved function call");if("OperatorNode"===oe)if("^"===ce.op){if("ConstantNode"!==ce.args[1].type||!(0,Pr.U)(parseFloat(ce.args[1].value)))throw new Error("There is a non-integer exponent");ne(ce.args[0])}else{if(-1===q.indexOf(ce.op))throw new Error("Operator "+ce.op+" invalid in polynomial expression");for(var ye=0;ye<ce.args.length;ye++)ne(ce.args[ye])}else if("SymbolNode"===oe){var be=ce.name;-1===_.indexOf(be)&&_.push(be)}else if("ParenthesisNode"===oe)ne(ce.content);else if("ConstantNode"!==oe)throw new Error("type "+oe+" is not allowed in polynomial expression")}(Y);var R={};return R.expression=Y,R.variables=_,R}(c,z,!0,V.firstRules),Y=_.variables.length,q={exactFractions:!1},R={exactFractions:!0};if(c=_.expression,Y>=1){c=ae(c);var ne,ce,be,oe=!0,ye=!1;for(c=C(c,V.firstRules,{},q);ce=oe?V.distrDivRules:V.sucDivRules,oe=!oe,(be=(c=C(c,ce,{},R)).toString())!==ne;)ye=!0,ne=be;ye&&(c=C(c,V.firstRulesAgain,{},q)),c=C(c,V.finalRules,{},q)}var K=[],me={};return"OperatorNode"===c.type&&c.isBinary()&&"/"===c.op?(1===Y&&(c.args[0]=D(c.args[0],K),c.args[1]=D(c.args[1])),H&&(me.numerator=c.args[0],me.denominator=c.args[1])):(1===Y&&(c=D(c,K)),H&&(me.numerator=c,me.denominator=null)),H?(me.coefficients=K,me.variables=_.variables,me.expression=c,me):c}return p(lt,{Node:M,"Node, boolean":(c,z)=>M(c,{},z),"Node, Object":M,"Node, Object, boolean":M});function ae(c,z,H){var V=c.type,_=arguments.length>1;if("OperatorNode"===V&&c.isBinary()){var q,Y=!1;if("^"===c.op&&("ParenthesisNode"===c.args[0].type||"OperatorNode"===c.args[0].type)&&"ConstantNode"===c.args[1].type&&(Y=(q=parseFloat(c.args[1].value))>=2&&(0,Pr.U)(q)),Y){if(q>2){var R=c.args[0],ne=new T("^","pow",[c.args[0].cloneDeep(),new S(q-1)]);c=new T("*","multiply",[R,ne])}else c=new T("*","multiply",[c.args[0],c.args[0].cloneDeep()]);_&&("content"===H?z.content=c:z.args[H]=c)}}if("ParenthesisNode"===V)ae(c.content,c,"content");else if("ConstantNode"!==V&&"SymbolNode"!==V)for(var ce=0;ce<c.args.length;ce++)ae(c.args[ce],c,ce);if(!_)return c}function D(c,z){void 0===z&&(z=[]),z[0]=0;var V=0,_="";!function be(K,me,re){var Ie=K.type;if("FunctionNode"===Ie)throw new Error("There is an unsolved function call");if("OperatorNode"===Ie){if(-1==="+-*^".indexOf(K.op))throw new Error("Operator "+K.op+" invalid");if(null!==me){if(("unaryMinus"===K.fn||"pow"===K.fn)&&"add"!==me.fn&&"subtract"!==me.fn&&"multiply"!==me.fn)throw new Error("Invalid "+K.op+" placing");if(("subtract"===K.fn||"add"===K.fn||"multiply"===K.fn)&&"add"!==me.fn&&"subtract"!==me.fn)throw new Error("Invalid "+K.op+" placing");if(("subtract"===K.fn||"add"===K.fn||"unaryMinus"===K.fn)&&0!==re.noFil)throw new Error("Invalid "+K.op+" placing")}("^"===K.op||"*"===K.op)&&(re.fire=K.op);for(var je=0;je<K.args.length;je++)"unaryMinus"===K.fn&&(re.oper="-"),("+"===K.op||"subtract"===K.fn)&&(re.fire="",re.cte=1,re.oper=0===je?"+":K.op),re.noFil=je,be(K.args[je],K,re)}else if("SymbolNode"===Ie){if(K.name!==_&&""!==_)throw new Error("There is more than one variable");if(_=K.name,null===me)return void(z[1]=1);if("^"===me.op&&0!==re.noFil)throw new Error("In power the variable should be the first parameter");if("*"===me.op&&1!==re.noFil)throw new Error("In multiply the variable should be the second parameter");(""===re.fire||"*"===re.fire)&&(V<1&&(z[1]=0),z[1]+=re.cte*("+"===re.oper?1:-1),V=Math.max(1,V))}else{if("ConstantNode"!==Ie)throw new Error("Type "+Ie+" is not allowed");var Ae=parseFloat(K.value);if(null===me)return void(z[0]=Ae);if("^"===me.op){if(1!==re.noFil)throw new Error("Constant cannot be powered");if(!(0,Pr.U)(Ae)||Ae<=0)throw new Error("Non-integer exponent is not allowed");for(var Ze=V+1;Ze<Ae;Ze++)z[Ze]=0;return Ae>V&&(z[Ae]=0),z[Ae]+=re.cte*("+"===re.oper?1:-1),void(V=Math.max(Ae,V))}re.cte=Ae,""===re.fire&&(z[0]+=re.cte*("+"===re.oper?1:-1))}}(c,null,{cte:1,oper:"+",fire:""});for(var q,Y=!0,R=V=z.length-1;R>=0;R--)if(0!==z[R]){var ne=new S(Y?z[R]:Math.abs(z[R])),ce=z[R]<0?"-":"+";if(R>0){var oe=new j(_);if(R>1){var ye=new S(R);oe=new T("^","pow",[oe,ye])}ne=-1===z[R]&&Y?new T("-","unaryMinus",[oe]):1===Math.abs(z[R])?oe:new T("*","multiply",[ne,oe])}q=Y?ne:"+"===ce?new T("+","add",[q,ne]):new T("-","subtract",[q,ne]),Y=!1}return Y?new S(0):q}}),Ir=ee(87889);function jr(v,f,p){var m=v.filter(function(i){return(0,h.FG)(i)&&!(i.name in f)&&!p.has(i.name)})[0];if(!m)throw new Error('No undefined variable found in inline expression "'+v+'"');var o=m.name,r=ur(p),t=v.compile();return function(s){return r.set(o,s),t.evaluate(r)}}var Sl=(0,W.d5)("filter",["typed"],v=>{var{typed:f}=v;function p(o,r,t){var i,s;return o[0]&&(i=o[0].compile().evaluate(t)),o[1]&&(s=(0,h.FG)(o[1])||(0,h.l7)(o[1])?o[1].compile().evaluate(t):jr(o[1],r,t)),m(i,s)}p.rawArgs=!0;var m=f("filter",{"Array, function":ct,"Matrix, function":function(r,t){return r.create(ct(r.toArray(),t))},"Array, RegExp":ge.U_,"Matrix, RegExp":function(r,t){return r.create((0,ge.U_)(r.toArray(),t))}});return p},{isTransformFunction:!0});function ct(v,f){return(0,ge.hX)(v,function(p,m,o){return(0,Ir.i)(f,p,[m+1],o,"filter")})}var Al=(0,W.d5)("forEach",["typed"],v=>{var{typed:f}=v;function p(o,r,t){var i,s;return o[0]&&(i=o[0].compile().evaluate(t)),o[1]&&(s=(0,h.FG)(o[1])||(0,h.l7)(o[1])?o[1].compile().evaluate(t):jr(o[1],r,t)),m(i,s)}p.rawArgs=!0;var m=f("forEach",{"Array | Matrix, function":function(r,t){!function s(n,l){if(!Array.isArray(n))return(0,Ir.i)(t,n,l,r,"forEach");(0,ge.Ed)(n,function(g,x){s(g,l.concat(x+1))})}(r.valueOf(),[])}});return p},{isTransformFunction:!0}),Ml=(0,W.d5)("map",["typed"],v=>{var{typed:f}=v;function p(o,r,t){var i,s;return o[0]&&(i=o[0].compile().evaluate(t)),o[1]&&(s=(0,h.FG)(o[1])||(0,h.l7)(o[1])?o[1].compile().evaluate(t):jr(o[1],r,t)),m(i,s)}p.rawArgs=!0;var m=f("map",{"Array, function":function(r,t){return ut(r,t,r)},"Matrix, function":function(r,t){return r.create(ut(r.valueOf(),t,r))}});return p},{isTransformFunction:!0});function ut(v,f,p){return function m(o,r){return Array.isArray(o)?(0,ge.UI)(o,function(t,i){return m(t,r.concat(i+1))}):(0,Ir.i)(f,o,r,p,"map")}(v,[])}var ql=ee(25025),Rl=(0,W.d5)("apply",["typed","isInteger"],v=>{var{typed:f,isInteger:p}=v,m=(0,ql.j)({typed:f,isInteger:p});return f("apply",{"...any":function(r){var t=r[1];(0,h.hj)(t)?r[1]=t-1:(0,h.l9)(t)&&(r[1]=t.minus(1));try{return m.apply(null,r)}catch(i){throw Te(i)}}})},{isTransformFunction:!0}),Pl=ee(68831),Ll=(0,W.d5)("concat",["typed","matrix","isInteger"],v=>{var{typed:f,matrix:p,isInteger:m}=v,o=(0,Pl.k)({typed:f,matrix:p,isInteger:m});return f("concat",{"...any":function(t){var i=t.length-1,s=t[i];(0,h.hj)(s)?t[i]=s-1:(0,h.l9)(s)&&(t[i]=s.minus(1));try{return o.apply(null,t)}catch(n){throw Te(n)}}})},{isTransformFunction:!0}),Ul=ee(45255);function Ge(v){if(2===v.length&&(0,h.uZ)(v[0])){var f=(v=v.slice())[1];(0,h.hj)(f)?v[1]=f-1:(0,h.l9)(f)&&(v[1]=f.minus(1))}return v}var Gl=(0,W.d5)("max",["typed","config","numeric","larger"],v=>{var{typed:f,config:p,numeric:m,larger:o}=v,r=(0,Ul.J)({typed:f,config:p,numeric:m,larger:o});return f("max",{"...any":function(i){i=Ge(i);try{return r.apply(null,i)}catch(s){throw Te(s)}}})},{isTransformFunction:!0}),Wl=ee(71766),Zl=(0,W.d5)("quantileSeq",["typed","add","multiply","partitionSelect","compare","isInteger"],v=>{var{typed:f,add:p,multiply:m,partitionSelect:o,compare:r,isInteger:t}=v,i=(0,Wl.y)({typed:f,add:p,multiply:m,partitionSelect:o,compare:r,isInteger:t});return f("quantileSeq",{"Array|Matrix, number|BigNumber|Array, number":(n,l,g)=>i(n,l,s(g)),"Array|Matrix, number|BigNumber|Array, boolean, number":(n,l,g,x)=>i(n,l,g,s(x))});function s(n){return Ge([[],n])[1]}},{isTransformFunction:!0}),Jl=ee(44975),Ql=(0,W.d5)("diff",["typed","matrix","subtract","number","bignumber"],v=>{var{typed:f,matrix:p,subtract:m,number:o,bignumber:r}=v,t=(0,Jl.J)({typed:f,matrix:p,subtract:m,number:o,bignumber:r});return f("diff",{"...any":function(s){s=Ge(s);try{return t.apply(null,s)}catch(n){throw Te(n)}}})},{isTransformFunction:!0}),Xl=ee(67067),ec=(0,W.d5)("min",["typed","config","numeric","smaller"],v=>{var{typed:f,config:p,numeric:m,smaller:o}=v,r=(0,Xl.D)({typed:f,config:p,numeric:m,smaller:o});return f("min",{"...any":function(i){i=Ge(i);try{return r.apply(null,i)}catch(s){throw Te(s)}}})},{isTransformFunction:!0}),rc=ee(38483),nc=(0,W.d5)("subset",["typed","matrix","zeros","add"],v=>{var{typed:f,matrix:p,zeros:m,add:o}=v,r=(0,rc.q)({typed:f,matrix:p,zeros:m,add:o});return f("subset",{"...any":function(i){try{return r.apply(null,i)}catch(s){throw Te(s)}}})},{isTransformFunction:!0}),ic=ee(72770),oc=(0,W.d5)("cumsum",["typed","add","unaryPlus"],v=>{var{typed:f,add:p,unaryPlus:m}=v,o=(0,ic.o)({typed:f,add:p,unaryPlus:m});return f("cumsum",{"...any":function(t){if(2===t.length&&(0,h.uZ)(t[0])){var i=t[1];(0,h.hj)(i)?t[1]=i-1:(0,h.l9)(i)&&(t[1]=i.minus(1))}try{return o.apply(null,t)}catch(s){throw Te(s)}}})},{isTransformFunction:!0}),uc=(0,W.d5)("index",["Index","getMatrixDataType"],v=>{var{Index:f,getMatrixDataType:p}=v;return function(){for(var o=[],r=0,t=arguments.length;r<t;r++){var i=arguments[r];if((0,h.bR)(i))i.start--,i.end-=i.step>0?0:2;else if(i&&!0===i.isSet)i=i.map(function(n){return n-1});else if((0,h.kJ)(i)||(0,h.SW)(i))"boolean"!==p(i)&&(i=i.map(function(n){return n-1}));else if((0,h.hj)(i))i--;else if((0,h.l9)(i))i=i.toNumber()-1;else if("string"!=typeof i)throw new TypeError("Dimension must be an Array, Matrix, number, string, or Range");o[r]=i}var s=new f;return f.apply(s,o),s}},{isTransformFunction:!0}),mc=ee(3098),fc=(0,W.d5)("sum",["typed","config","add","numeric"],v=>{var{typed:f,config:p,add:m,numeric:o}=v,r=(0,mc.O)({typed:f,config:p,add:m,numeric:o});return f("sum",{"...any":function(i){i=Ge(i);try{return r.apply(null,i)}catch(s){throw Te(s)}}})},{isTransformFunction:!0}),dc=ee(86226),gc=(0,W.d5)("range",["typed","config","?matrix","?bignumber","smaller","smallerEq","larger","largerEq","add","isPositive"],v=>{var{typed:f,config:p,matrix:m,bignumber:o,smaller:r,smallerEq:t,larger:i,largerEq:s,add:n,isPositive:l}=v,g=(0,dc.M)({typed:f,config:p,matrix:m,bignumber:o,smaller:r,smallerEq:t,larger:i,largerEq:s,add:n,isPositive:l});return f("range",{"...any":function(C){return"boolean"!=typeof C[C.length-1]&&C.push(!0),g.apply(null,C)}})},{isTransformFunction:!0}),yc=ee(75430),wc=(0,W.d5)("row",["typed","Index","matrix","range"],v=>{var{typed:f,Index:p,matrix:m,range:o}=v,r=(0,yc.v)({typed:f,Index:p,matrix:m,range:o});return f("row",{"...any":function(i){var s=i.length-1,n=i[s];(0,h.hj)(n)&&(i[s]=n-1);try{return r.apply(null,i)}catch(l){throw Te(l)}}})},{isTransformFunction:!0}),Nc=ee(46873),Sc=(0,W.d5)("column",["typed","Index","matrix","range"],v=>{var{typed:f,Index:p,matrix:m,range:o}=v,r=(0,Nc.w)({typed:f,Index:p,matrix:m,range:o});return f("column",{"...any":function(i){var s=i.length-1,n=i[s];(0,h.hj)(n)&&(i[s]=n-1);try{return r.apply(null,i)}catch(l){throw Te(l)}}})},{isTransformFunction:!0}),Oc=ee(96151),Ec=(0,W.d5)("mean",["typed","add","divide"],v=>{var{typed:f,add:p,divide:m}=v,o=(0,Oc.Q)({typed:f,add:p,divide:m});return f("mean",{"...any":function(t){t=Ge(t);try{return o.apply(null,t)}catch(i){throw Te(i)}}})},{isTransformFunction:!0}),kc=ee(84528),dt="variance",qc=(0,W.d5)(dt,["typed","add","subtract","multiply","divide","apply","isNaN"],v=>{var{typed:f,add:p,subtract:m,multiply:o,divide:r,apply:t,isNaN:i}=v,s=(0,kc.F)({typed:f,add:p,subtract:m,multiply:o,divide:r,apply:t,isNaN:i});return f(dt,{"...any":function(l){l=Ge(l);try{return s.apply(null,l)}catch(g){throw Te(g)}}})},{isTransformFunction:!0}),zc=ee(64627),Pc=(0,W.d5)("std",["typed","map","sqrt","variance"],v=>{var{typed:f,map:p,sqrt:m,variance:o}=v,r=(0,zc.X)({typed:f,map:p,sqrt:m,variance:o});return f("std",{"...any":function(i){i=Ge(i);try{return r.apply(null,i)}catch(s){throw Te(s)}}})},{isTransformFunction:!0}),a=ee(43093),rr={},tr={},ht={},De=Ve({mathWithTransform:tr}),ar=Be({Node:De}),Le=Et({Node:De}),Ye=Mt({Node:De}),vt=zt({Node:De}),nr=Rt({Node:De}),gt=It({Node:De,ResultSet:a.Z0z}),yt=Lt({Node:De}),We=$t({Node:De}),xt=Gt({Node:De}),Ic=Ht({classes:ht}),Lr=Vt({math:rr,typed:a.Gzl}),bt=Xt({Node:De,typed:a.Gzl}),jc=Kt({Chain:Lr,typed:a.Gzl}),ir=ra({Node:De,size:a.dpJ}),sr=na({Node:De,subset:a.P9L}),wt=oa({matrix:a.pIu,Node:De,subset:a.P9L}),_e=ua({Unit:a.fbc,Node:De,math:rr}),He=pa({Node:De,SymbolNode:_e,math:rr}),Fe=da({AccessorNode:sr,ArrayNode:nr,AssignmentNode:wt,BlockNode:gt,ConditionalNode:yt,ConstantNode:We,FunctionAssignmentNode:bt,FunctionNode:He,IndexNode:ir,ObjectNode:ar,OperatorNode:Le,ParenthesisNode:Ye,RangeNode:xt,RelationalNode:vt,SymbolNode:_e,config:Ce.v,numeric:a.uRn,typed:a.Gzl}),Nt=ga({ConstantNode:We,FunctionNode:He,OperatorNode:Le,ParenthesisNode:Ye,parse:Fe,typed:a.Gzl}),Ur=Na({bignumber:a.edS,fraction:a.Pj$,AccessorNode:sr,ArrayNode:nr,ConstantNode:We,FunctionNode:He,IndexNode:ir,ObjectNode:ar,OperatorNode:Le,SymbolNode:_e,config:Ce.v,mathWithTransform:tr,matrix:a.pIu,typed:a.Gzl}),Lc=Da({parse:Fe,typed:a.Gzl}),Ct=Ta({parse:Fe}),Uc=Ea({parse:Fe,typed:a.Gzl}),$r=Ma({AccessorNode:sr,ArrayNode:nr,ConstantNode:We,FunctionNode:He,IndexNode:ir,ObjectNode:ar,OperatorNode:Le,ParenthesisNode:Ye,SymbolNode:_e,add:a.IHx,divide:a.csF,equal:a.DgJ,isZero:a.Fr9,multiply:a.JpY,parse:Fe,pow:a.sQ3,subtract:a.$XF,typed:a.Gzl}),Br=za({parse:Fe,typed:a.Gzl}),$c=ll({Help:Ct,mathWithTransform:tr,typed:a.Gzl}),Dt=ml({evaluate:Br}),Er=dl({bignumber:a.edS,fraction:a.Pj$,AccessorNode:sr,ArrayNode:nr,ConstantNode:We,FunctionNode:He,IndexNode:ir,ObjectNode:ar,OperatorNode:Le,ParenthesisNode:Ye,SymbolNode:_e,add:a.IHx,config:Ce.v,divide:a.csF,equal:a.DgJ,isZero:a.Fr9,mathWithTransform:tr,matrix:a.pIu,multiply:a.JpY,parse:Fe,pow:a.sQ3,resolve:Nt,simplifyConstant:Ur,simplifyCore:$r,subtract:a.$XF,typed:a.Gzl}),Bc=vl({OperatorNode:Le,parse:Fe,simplify:Er,typed:a.Gzl}),Gc=yl({ConstantNode:We,FunctionNode:He,OperatorNode:Le,ParenthesisNode:Ye,SymbolNode:_e,config:Ce.v,equal:a.DgJ,isZero:a.Fr9,numeric:a.uRn,parse:Fe,simplify:Er,typed:a.Gzl}),Wc=bl({Parser:Dt,typed:a.Gzl}),_c=Nl({bignumber:a.edS,fraction:a.Pj$,AccessorNode:sr,ArrayNode:nr,ConstantNode:We,FunctionNode:He,IndexNode:ir,ObjectNode:ar,OperatorNode:Le,ParenthesisNode:Ye,SymbolNode:_e,add:a.IHx,config:Ce.v,divide:a.csF,equal:a.DgJ,isZero:a.Fr9,mathWithTransform:tr,matrix:a.pIu,multiply:a.JpY,parse:Fe,pow:a.sQ3,simplify:Er,simplifyConstant:Ur,simplifyCore:$r,subtract:a.$XF,typed:a.Gzl});(0,Oe.Z)(rr,{e:a.e,false:a.WJv,fineStructure:a.Oyo,i:a.i,Infinity:a.OvO,LN10:a.cw7,LOG10E:a.doM,NaN:a.xOA,null:a.OSG,phi:a.Skb,SQRT1_2:a.PNl,sackurTetrode:a.KO_,tau:a.BZ_,true:a.wcc,E:a.e,version:a.i83,efimovFactor:a.dvW,LN2:a.bZs,pi:a.pi,replacer:a.PHU,reviver:Ic,SQRT2:a.vNo,typed:a.Gzl,unaryPlus:a.uKN,PI:a.pi,weakMixingAngle:a.Uud,abs:a.WnP,acos:a.Khb,acot:a.C6L,acsc:a.rcO,addScalar:a.scv,arg:a.R91,asech:a.lo8,asinh:a.VfV,atan:a.z4N,atanh:a.C80,bignumber:a.edS,bitNot:a.Pfe,boolean:a.O72,clone:a.d9v,combinations:a.BjO,complex:a.PYB,conj:a.ruJ,cosh:a.f9Y,coth:a.h6M,csc:a.QBQ,cube:a.kOm,equalScalar:a.kuq,erf:a.qNN,exp:a.Qqt,expm1:a.t$B,filter:a.hXT,forEach:a.Ed_,format:a.WUZ,getMatrixDataType:a.mOi,hex:a.$v1,im:a.im,isInteger:a.UaK,isNegative:a.nMy,isPositive:a.xPR,isZero:a.Fr9,LOG2E:a.wwJ,lgamma:a.KF1,log10:a.mvw,log2:a.k3Q,map:a.UID,multiplyScalar:a.cfl,not:a.ffD,number:a.Rxh,oct:a.jfK,pickRandom:a.sDj,print:a.S0v,random:a.MXc,re:a.re,sec:a.BEc,sign:a.Xxe,sin:a.O$l,splitUnit:a.jLI,square:a.h62,string:a.Z_8,tan:a.ORZ,typeOf:a.kM2,acosh:a.__u,acsch:a.KLC,apply:a.nnj,asec:a.PUJ,bin:a.Ly_,chain:jc,combinationsWithRep:a.d4C,cos:a.mCk,csch:a.RhL,isNaN:a.i2d,isPrime:a.e47,randomInt:a.Iyf,sech:a.Fbd,sinh:a.R_K,sparse:a.rVs,sqrt:a._b3,tanh:a.AEp,unaryMinus:a.T8F,acoth:a.trc,cot:a.oHe,fraction:a.Pj$,isNumeric:a.kEn,matrix:a.pIu,matrixFromFunction:a.ZcA,mode:a.xJM,numeric:a.uRn,prod:a.WVs,reshape:a.XLQ,size:a.dpJ,squeeze:a.L9e,transpose:a.p4s,xgcd:a.NpV,zeros:a.lls,asin:a.ZRM,cbrt:a.eKn,concat:a.zoF,count:a.QXW,ctranspose:a.NZC,diag:a.Ka3,divideScalar:a.QgA,dotDivide:a.yVo,equal:a.DgJ,flatten:a.xHg,gcd:a.thl,hasNumericValue:a.Hdk,identity:a.yRu,kron:a.JvE,largerEq:a.Cr4,leftShift:a.w57,matrixFromColumns:a.ndY,mod:a.wQq,nthRoot:a.C7f,ones:a.iUs,resize:a.SIr,rightArithShift:a.nq0,round:a.NMM,smaller:a.Nyh,subtract:a.$XF,to:a.to,unequal:a.KPr,usolve:a.LDk,xor:a.dlQ,add:a.IHx,atan2:a.fvJ,bitAnd:a.hx9,bitXor:a.nNS,catalan:a.tjo,compare:a.quX,compareText:a.cdM,cumsum:a.zbp,deepEqual:a.vZr,diff:a.Hgg,distance:a.TE$,dot:a.AKD,equalText:a.eZD,floor:a.GWj,hypot:a._mT,invmod:a.QNt,larger:a.TWx,log:a.cM7,lsolve:a.wtJ,matrixFromRows:a.lPE,min:a.VV$,multiply:a.JpY,nthRoots:a.$$R,or:a.or,partitionSelect:a.JeQ,qr:a.qr,rightLogShift:a.LdX,slu:a.cEy,subset:a.P9L,sum:a.Smz,trace:a.g49,usolveAll:a.bJ2,zpk2tf:a.kjZ,bitOr:a.wKT,ceil:a.mDi,compareNatural:a.rn1,composition:a.ift,cross:a.kCc,det:a.Q8I,dotMultiply:a.iOk,fix:a.zG0,index:a.KzB,intersect:a.wfr,lcm:a.uqG,log1p:a.Krr,lsolveAll:a.ER9,max:a.Fp7,quantileSeq:a.pAO,setCartesian:a.$ZK,setDistinct:a.Z41,setIsSubset:a.TT1,setPowerset:a.ljT,smallerEq:a.Sq_,sort:a.DYV,and:a.xDy,range:a.w6H,row:a.O7B,setDifference:a.TVT,setMultiplicity:a.oNG,setSymDifference:a.V4s,column:a.$QP,inv:a.JBn,lup:a.xly,pinv:a.mvk,pow:a.sQ3,setIntersect:a.ff9,setUnion:a.uyX,sqrtm:a.jXX,vacuumImpedance:a.tnB,wienDisplacement:a.bGh,atomicMass:a.uzo,bohrMagneton:a.Cl$,boltzmann:a.Rhk,conductanceQuantum:a.xk2,createUnit:a.JP7,deuteronMass:a.dEt,dotPow:a.qgo,electricConstant:a.dXo,elementaryCharge:a.iMQ,expm:a.Ege,faraday:a.Am2,fft:a.kp_,gamma:a.yiU,gravitationConstant:a.H9q,hartreeEnergy:a.HQL,ifft:a.Sxn,klitzing:a.$$$,loschmidt:a.PUn,magneticConstant:a.$nU,molarMass:a.ak$,molarPlanckConstant:a.kEb,neutronMass:a.li8,nuclearMagneton:a._A2,planckCharge:a.JaK,planckLength:a.gil,planckTemperature:a.XAT,protonMass:a.CxM,reducedPlanckConstant:a.vAu,rydberg:a.rMB,secondRadiation:a.ahj,speedOfLight:a.bl5,stefanBoltzmann:a.yO5,thomsonCrossSection:a.bej,avogadro:a._vz,bohrRadius:a.tUn,coulomb:a.JPg,divide:a.csF,electronMass:a._G2,factorial:a.bLN,firstRadiation:a.Vvs,gravity:a.QXX,inverseConductanceQuantum:a.WSk,lusolve:a.DU,magneticFluxQuantum:a.oLv,molarMassC12:a.esS,multinomial:a.SJ_,parse:Fe,permutations:a.DW7,planckMass:a.kc5,polynomialRoot:a.Qg6,resolve:Nt,setSize:a.yk3,simplifyConstant:Ur,solveODE:a.bBp,stirlingS2:a.bAb,unit:a.bfT,bellNumbers:a.O7j,compile:Lc,eigs:a.Gq_,fermiCoupling:a.cIy,gasConstant:a.eOQ,leafCount:Uc,mean:a.J69,molarVolume:a.n4B,planckConstant:a.whQ,quantumOfCirculation:a.TYM,simplifyCore:$r,variance:a.CAK,classicalElectronRadius:a._fe,evaluate:Br,help:$c,median:a.C2o,simplify:Er,symbolicEqual:Bc,derivative:Gc,kldivergence:a.mYz,mad:a.UFs,parser:Wc,rationalize:_c,std:a.qoR,zeta:a.Xcd,freqz:a.Ltn,norm:a.KOy,rotationMatrix:a.k8z,planckTime:a.oTb,schur:a.U5j,rotate:a.U1s,sylvester:a.rew,lyap:a.t6m,config:Ce.v}),(0,Oe.Z)(tr,rr,{filter:Sl({typed:a.Gzl}),forEach:Al({typed:a.Gzl}),map:Ml({typed:a.Gzl}),apply:Rl({isInteger:a.UaK,typed:a.Gzl}),concat:Ll({isInteger:a.UaK,matrix:a.pIu,typed:a.Gzl}),max:Gl({config:Ce.v,larger:a.TWx,numeric:a.uRn,typed:a.Gzl}),quantileSeq:Zl({add:a.IHx,compare:a.quX,isInteger:a.UaK,multiply:a.JpY,partitionSelect:a.JeQ,typed:a.Gzl}),diff:Ql({bignumber:a.edS,matrix:a.pIu,number:a.Rxh,subtract:a.$XF,typed:a.Gzl}),min:ec({config:Ce.v,numeric:a.uRn,smaller:a.Nyh,typed:a.Gzl}),subset:nc({add:a.IHx,matrix:a.pIu,typed:a.Gzl,zeros:a.lls}),cumsum:oc({add:a.IHx,typed:a.Gzl,unaryPlus:a.uKN}),index:uc({Index:a.gmE,getMatrixDataType:a.mOi}),sum:fc({add:a.IHx,config:Ce.v,numeric:a.uRn,typed:a.Gzl}),range:gc({bignumber:a.edS,matrix:a.pIu,add:a.IHx,config:Ce.v,isPositive:a.xPR,larger:a.TWx,largerEq:a.Cr4,smaller:a.Nyh,smallerEq:a.Sq_,typed:a.Gzl}),row:wc({Index:a.gmE,matrix:a.pIu,range:a.w6H,typed:a.Gzl}),column:Sc({Index:a.gmE,matrix:a.pIu,range:a.w6H,typed:a.Gzl}),mean:Ec({add:a.IHx,divide:a.csF,typed:a.Gzl}),variance:qc({add:a.IHx,apply:a.nnj,divide:a.csF,isNaN:a.i2d,multiply:a.JpY,subtract:a.$XF,typed:a.Gzl}),std:Pc({map:a.UID,sqrt:a._b3,typed:a.Gzl,variance:a.CAK})}),(0,Oe.Z)(ht,{BigNumber:a.O$v,Complex:a.Zz9,Fraction:a.iAi,Matrix:a.y3G,Node:De,ObjectNode:ar,OperatorNode:Le,ParenthesisNode:Ye,Range:a.e6w,RelationalNode:vt,ResultSet:a.Z0z,ArrayNode:nr,BlockNode:gt,ConditionalNode:yt,ConstantNode:We,DenseMatrix:a.JfM,RangeNode:xt,Chain:Lr,FunctionAssignmentNode:bt,SparseMatrix:a.A7i,IndexNode:ir,ImmutableDenseMatrix:a.MUK,Index:a.gmE,AccessorNode:sr,AssignmentNode:wt,FibonacciHeap:a.Q3n,Spa:a.HJh,Unit:a.fbc,SymbolNode:_e,FunctionNode:He,Help:Ct,Parser:Dt}),Lr.createProxy(rr)}}]);